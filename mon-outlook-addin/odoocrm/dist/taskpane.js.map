{"version":3,"file":"taskpane.js","mappings":"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","sources":["webpack://office-addin-taskpane-js/webpack/bootstrap","webpack://office-addin-taskpane-js/webpack/runtime/global","webpack://office-addin-taskpane-js/webpack/runtime/hasOwnProperty shorthand","webpack://office-addin-taskpane-js/webpack/runtime/publicPath","webpack://office-addin-taskpane-js/webpack/runtime/jsonp chunk loading","webpack://office-addin-taskpane-js/./src/taskpane/taskpane.js","webpack://office-addin-taskpane-js/./src/taskpane/taskpane.html"],"sourcesContent":["// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/^blob:/, \"\").replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t926: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","// Fonction de logging améliorée\nfunction log(message, data = null) {\n    const timestamp = new Date().toISOString();\n    const logMessage = `[${timestamp}] ${message}`;\n    \n    if (data) {\n        console.group(logMessage);\n        console.log('Détails:', data);\n        if (data instanceof Error) {\n            console.log('Stack:', data.stack);\n        }\n        console.groupEnd();\n    } else {\n        console.log(logMessage);\n    }\n}\n\n// Initialisation\nOffice.onReady((info) => {\n    log('Office.onReady appelé', info);\n    if (info.host === Office.HostType.Outlook) {\n        log('Application démarrée dans Outlook');\n        document.getElementById(\"sideload-msg\").style.display = \"none\";\n        document.getElementById(\"app-body\").style.display = \"block\";\n        \n        // Utiliser une IIFE async pour pouvoir utiliser await\n        (async () => {\n            try {\n                await loadEmailData();\n                loadUserEmailData();\n                loadSavedSettings();\n                setupPasswordToggle();\n                setupFormValidation();\n            } catch (error) {\n                log('Erreur lors du chargement initial:', error);\n            }\n        })();\n    }\n});\n\n// Chargement des données email\n// Modification de loadEmailData pour utiliser le formatage\n// Fonction pour détecter les numéros de téléphone\nconst style = document.createElement('style');\nstyle.textContent = `\n    .phone-input-container {\n        position: relative;\n        display: flex;\n        gap: 8px;\n    }\n    \n    #phone-number {\n        flex: 1;\n        padding: 8px;\n        border: 1px solid #ddd;\n        border-radius: 4px;\n    }\n    \n    #phone-select {\n        width: auto;\n        min-width: 120px;\n        padding: 8px;\n        border: 1px solid #ddd;\n        border-radius: 4px;\n        background-color: #f8f9fa;\n    }\n`;\ndocument.head.appendChild(style);\n\n\nfunction extractPhoneNumbers(text) {\n    function countDigits(str) {\n        return (str.match(/\\d/g) || []).length;\n    }\n\n    const phonePatterns = [\n        // Format international avec + ou 00\n        /(?:\\+|00)[1-9]\\d{1,3}[- .]?\\d(?:[- .]?\\d){4,14}/g,\n        // Format belge spécifique\n        /(?:0[1-9]|04\\d{1,2})[/\\s.-]?\\d{2,3}[/\\s.-]?\\d{2,3}[/\\s.-]?\\d{2,3}/g,\n        // Format avec séparateurs variés\n        /\\d{3,4}[/\\s.-]?\\d{2,3}[/\\s.-]?\\d{2,3}[/\\s.-]?\\d{2,3}/g\n    ];\n\n    function formatPhoneNumber(phone) {\n        if (countDigits(phone) < 6) {\n            return null;\n        }\n\n        // Nettoyer le numéro\n        let cleaned = phone.trim()\n            .replace(/[\\(\\)]/g, '') // Enlever les parenthèses\n            .replace(/[\\/\\s.-]+/g, ' ') // Normaliser les séparateurs en espaces\n            .replace(/\\s+/g, ' ')  // Normaliser les espaces multiples\n            .trim();\n\n        // Formatter les numéros belges\n        if (cleaned.startsWith('0')) {\n            // Convertir les numéros commençant par 0 en format international\n            cleaned = '+32' + cleaned.substring(1);\n        } else if (cleaned.startsWith('00')) {\n            cleaned = '+' + cleaned.substring(2);\n        }\n\n        return {\n            formatted: cleaned,\n            digitCount: countDigits(cleaned)\n        };\n    }\n\n    let phones = new Map();\n\n    for (let pattern of phonePatterns) {\n        const matches = text.matchAll(pattern);\n        for (const match of matches) {\n            const phoneInfo = formatPhoneNumber(match[0]);\n            if (phoneInfo && phoneInfo.digitCount >= 6) {\n                if (!phones.has(phoneInfo.formatted)) {\n                    phones.set(phoneInfo.formatted, phoneInfo);\n                }\n            }\n        }\n    }\n\n    return Array.from(phones.values());\n}\n\n\n\nfunction populatePhoneSelect(phones) {\n    const phoneSelect = document.getElementById('phone-select');\n    const phoneInput = document.getElementById('phone-number');\n    \n    // Vider le select sauf l'option par défaut\n    while (phoneSelect.options.length > 1) {\n        phoneSelect.remove(1);\n    }\n\n    // Ajouter les numéros trouvés\n    phones.forEach((phoneInfo, index) => {\n        const option = document.createElement('option');\n        option.value = phoneInfo.formatted;\n        option.textContent = `Numéro ${index + 1}: ${phoneInfo.formatted}`;\n        phoneSelect.appendChild(option);\n    });\n\n    // Si des numéros ont été trouvés, remplir l'input avec le premier\n    if (phones.length > 0) {\n        phoneInput.value = phones[0].formatted;\n    }\n}\n\nasync function createEmailEml() {\n    try {\n        const item = Office.context.mailbox.item;\n        \n        // Récupérer les informations de base\n        const subject = item.subject || 'Sans sujet';\n        const from = item.sender.emailAddress;\n        const receivedTime = item.dateTimeCreated.toISOString();\n        \n        // Récupérer le corps du mail\n        const bodyResult = await new Promise((resolve, reject) => {\n            item.body.getAsync(Office.CoercionType.Text, (result) => {\n                if (result.status === Office.AsyncResultStatus.Succeeded) {\n                    resolve(result.value);\n                } else {\n                    reject(new Error('Échec du chargement du corps du message'));\n                }\n            });\n        });\n\n        // Construire l'en-tête EML\n        let emlContent = [\n            'From: ' + from,\n            'Subject: ' + subject,\n            'Date: ' + receivedTime,\n            'Content-Type: text/plain; charset=utf-8',\n            '',\n            bodyResult\n        ].join('\\r\\n');\n\n        // Convertir en Base64\n        const encoder = new TextEncoder();\n        const bytes = encoder.encode(emlContent);\n        const base64 = btoa(String.fromCharCode(...bytes));\n\n        // Créer un nom de fichier sécurisé\n        const safeSubject = subject.replace(/[^a-z0-9]/gi, '_').slice(0, 30);\n        const fileName = `${safeSubject}_${new Date().toISOString().slice(0, 10)}.eml`;\n\n        return {\n            name: fileName,\n            datas: base64,\n            mimetype: 'message/rfc822',\n            type: 'binary'\n        };\n\n    } catch (error) {\n        log('Erreur lors de la création de l\\'EML:', error);\n        throw error;\n    }\n}\n\n\n\nfunction displayAttachments(attachmentList) {\n    if (!attachmentList) return;\n    \n    loadAttachments(attachmentList).catch(error => {\n        console.error('Erreur lors du chargement des pièces jointes:', error);\n        showNotification('Erreur lors du chargement des pièces jointes', 'error');\n    });\n}\nfunction formatFileSize(bytes) {\n    if (bytes === 0) return '0 B';\n    const k = 1024;\n    const sizes = ['B', 'KB', 'MB', 'GB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n}\n\nfunction setupPhoneInputs() {\n    const phoneInput = document.getElementById('phone-number');\n    const phoneSelect = document.getElementById('phone-select');\n\n    // Gérer le changement dans le select\n    phoneSelect.addEventListener('change', (e) => {\n        if (e.target.value) {\n            phoneInput.value = e.target.value;\n        }\n    });\n\n    // Permettre la saisie libre\n    phoneInput.addEventListener('input', (e) => {\n        let value = e.target.value;\n        // Permettre +, espaces et chiffres\n        value = value.replace(/[^\\d+\\s]/g, '');\n        e.target.value = value;\n    });\n}\n\nfunction extractEmails(text) {\n    // Regex pour détecter les emails\n    const emailPattern = /[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}/g;\n    const emails = new Map();\n    \n    const matches = text.matchAll(emailPattern);\n    for (const match of matches) {\n        const email = match[0].toLowerCase().trim();\n        if (!emails.has(email)) {\n            // Vérifier si le domaine contient \"cheminees\"\n            const domain = email.split('@')[1];\n            const isPriority = !domain.includes('cheminees');\n            emails.set(email, {\n                email: email,\n                isPriority: isPriority\n            });\n        }\n    }\n    \n    // Trier les emails: prioritaires d'abord, puis par ordre alphabétique\n    return Array.from(emails.values()).sort((a, b) => {\n        if (a.isPriority !== b.isPriority) {\n            return a.isPriority ? -1 : 1;\n        }\n        return a.email.localeCompare(b.email);\n    });\n}\n\nfunction populateEmailSelect(emails) {\n    const emailSelect = document.getElementById('email-select');\n    const emailInput = document.getElementById('sender-email');\n    \n    // Vider le select sauf l'option par défaut\n    while (emailSelect.options.length > 1) {\n        emailSelect.remove(1);\n    }\n\n    // Ajouter les emails trouvés\n    emails.forEach((emailInfo, index) => {\n        const option = document.createElement('option');\n        option.value = emailInfo.email;\n        const priority = emailInfo.isPriority ? '🔵' : '⚪';\n        option.textContent = `${priority} Email ${index + 1}: ${emailInfo.email}`;\n        emailSelect.appendChild(option);\n    });\n\n    // Si des emails ont été trouvés, remplir l'input avec le premier\n    if (emails.length > 0) {\n        emailInput.value = emails[0].email;\n    }\n}\n\nfunction setupEmailInputs() {\n    const emailInput = document.getElementById('sender-email');\n    const emailSelect = document.getElementById('email-select');\n\n    // Gérer le changement dans le select\n    emailSelect.addEventListener('change', (e) => {\n        if (e.target.value) {\n            emailInput.value = e.target.value;\n        }\n    });\n\n    // Permettre la saisie libre avec validation basique d'email\n    emailInput.addEventListener('input', (e) => {\n        let value = e.target.value;\n        // Permettre caractères valides pour email\n        value = value.replace(/[^\\w@.-]/g, '');\n        e.target.value = value;\n    });\n}\n\nasync function loadAttachments(attachmentList) {\n    attachmentList.innerHTML = '';\n    console.log('Début du chargement des pièces jointes');\n    \n    const item = Office.context.mailbox.item;\n    \n    // Réinitialiser le tableau des pièces jointes\n    window.attachmentsToUpload = [];\n    let attachmentIndex = 0;\n\n    // Charger toutes les pièces jointes, y compris les inline\n    if (item.attachments) {\n        // Filtrer et traiter les pièces jointes\n        const attachments = item.attachments.filter(attachment => {\n            // Garder les pièces jointes normales et les images inline\n            return !attachment.isInline || \n                   (attachment.contentType && attachment.contentType.startsWith('image/'));\n        });\n\n        // Charger le contenu de chaque pièce jointe\n        for (const attachment of attachments) {\n            try {\n                const content = await getAttachmentContent(attachment.id);\n                let attachmentItem;\n\n                if (attachment.isInline && attachment.contentType.startsWith('image/')) {\n                    // Créer un item pour une image inline\n                    attachmentItem = createImageAttachmentItem(\n                        `data:${attachment.contentType};base64,${content}`,\n                        attachmentIndex,\n                        attachment.name\n                    );\n                    \n                    // Stocker l'image inline\n                    window.attachmentsToUpload[attachmentIndex] = {\n                        name: attachment.name,\n                        datas: content,\n                        mimetype: attachment.contentType,\n                        type: 'binary',\n                        isInline: true\n                    };\n                } else {\n                    // Créer un item pour une pièce jointe normale\n                    const attachmentData = {\n                        name: attachment.name,\n                        datas: content,\n                        mimetype: attachment.contentType || 'application/octet-stream',\n                        type: 'binary'\n                    };\n                    attachmentItem = createAttachmentItem(attachmentData, attachmentIndex);\n                    \n                    // Stocker la pièce jointe normale\n                    window.attachmentsToUpload[attachmentIndex] = attachmentData;\n                }\n\n                attachmentList.appendChild(attachmentItem);\n                attachmentIndex++;\n\n            } catch (error) {\n                console.error(`Erreur chargement pièce jointe ${attachment.name}:`, error);\n            }\n        }\n    }\n\n    // Essayer de récupérer les images du corps du mail\n    try {\n        const body = await new Promise((resolve, reject) => {\n            item.body.getAsync(\n                Office.CoercionType.Html,\n                { asyncContext: \"This is passed to the callback\" },\n                function (asyncResult) {\n                    if (asyncResult.status === Office.AsyncResultStatus.Succeeded) {\n                        resolve(asyncResult.value);\n                    } else {\n                        reject(new Error('Échec chargement HTML'));\n                    }\n                }\n            );\n        });\n\n        const tempDiv = document.createElement('div');\n        tempDiv.innerHTML = body;\n\n        // Chercher les images qui ne sont pas des CID\n        const images = Array.from(tempDiv.getElementsByTagName('img'))\n            .filter(img => {\n                const src = img.src || img.getAttribute('src');\n                return src && \n                       !src.startsWith('cid:') && \n                       !src.startsWith('data:') && \n                       !src.includes('outlook.office365.com') && \n                       !src.includes('outlook.office.com');\n            });\n\n        // Ajouter les images trouvées\n        for (const img of images) {\n            const src = img.src || img.getAttribute('src');\n            if (src) {\n                const item = createImageAttachmentItem(\n                    src, \n                    attachmentIndex,\n                    `Image ${attachmentIndex + 1}`\n                );\n                attachmentList.appendChild(item);\n                \n                // Stocker l'URL de l'image pour l'upload ultérieur\n                window.attachmentsToUpload[attachmentIndex] = {\n                    name: `Image ${attachmentIndex + 1}.png`,\n                    src: src,\n                    type: 'image',\n                    mimetype: 'image/png'\n                };\n                \n                attachmentIndex++;\n            }\n        }\n\n    } catch (error) {\n        console.error('Erreur chargement images:', error);\n    }\n}\n\nfunction createImageAttachmentItem(src, index, name = null) {\n    const div = document.createElement('div');\n    div.className = 'attachment-item';\n    \n    const displayName = name || `Image ${index + 1}`;\n    \n    div.innerHTML = `\n        <input type=\"checkbox\" id=\"image-${index}\" data-type=\"image\" data-src=\"${src}\" checked>\n        <img src=\"${src}\" class=\"image-preview\" alt=\"Preview\" onerror=\"this.style.display='none'\">\n        <label for=\"image-${index}\">\n            ${displayName}\n            <br>\n            <small class=\"image-source\">${src.startsWith('data:') ? 'Image intégrée' : src.substring(0, 50) + '...'}</small>\n        </label>\n    `;\n\n    return div;\n}\n\nfunction createAttachmentItem(attachment, index) {\n    const div = document.createElement('div');\n    div.className = 'attachment-item';\n    \n    div.innerHTML = `\n        <input type=\"checkbox\" id=\"attachment-${index}\" data-type=\"file\" checked>\n        <label for=\"attachment-${index}\">\n            ${attachment.name}\n            <span class=\"file-type\">(${attachment.mimetype})</span>\n        </label>\n    `;\n\n    return div;\n}\n\nasync function loadEmailData() {\n    log('Chargement des données de l\\'email');\n    const item = Office.context.mailbox.item;\n    \n    if (item) {\n        setupPhoneInputs();\n\n        // Initialiser le tableau des pièces jointes avec l'EML\n        window.attachmentsToUpload = [];\n\n        try {\n            // Créer et ajouter l'EML du mail\n            const emlAttachment = await createEmailEml();\n            window.attachmentsToUpload.push(emlAttachment);\n            log('EML du mail créé et ajouté aux pièces jointes');\n        } catch (error) {\n            log('Erreur lors de la création de l\\'EML:', error);\n        }\n\n        if (item.attachments && item.attachments.length > 0) {\n            log('Nombre de pièces jointes trouvées:', item.attachments.length);\n            \n            for (const attachment of item.attachments) {\n                if (attachment.isInline) continue;\n                \n                try {\n                    updateProgress(attachment.name, 'progress', 'Récupération en cours...');\n\n                    // Utiliser l'API EWS directement\n                    const content = await getAttachmentContent(attachment.id);\n\n                    window.attachmentsToUpload.push({\n                        name: attachment.name,\n                        datas: content,\n                        mimetype: attachment.contentType || 'application/octet-stream',\n                        res_model: 'crm.lead',\n                        type: 'binary'\n                    });\n\n                    updateProgress(attachment.name, 'success');\n                    log('Pièce jointe préparée:', {\n                        name: attachment.name,\n                        type: attachment.contentType,\n                        size: attachment.size\n                    });\n                } catch (error) {\n                    log('Erreur lors du traitement de la pièce jointe:', error);\n                    updateProgress(attachment.name, 'error', error.message);\n                }\n            }\n\n            // Afficher toutes les pièces jointes, y compris l'EML\n            const attachmentsList = document.getElementById('attachments-list');\nif (attachmentsList) {\n    displayAttachments(attachmentsList);\n}\n\nlog('Pièces jointes préparées:', window.attachmentsToUpload.length);\n        } else {\n            log('Aucune pièce jointe trouvée');\n            displayAttachments([]);\n        }\n\n        // Traitement du corps du message de manière asynchrone\n        try {\n            const bodyResult = await new Promise((resolve, reject) => {\n                item.body.getAsync(Office.CoercionType.Text, (result) => {\n                    if (result.status === Office.AsyncResultStatus.Succeeded) {\n                        resolve(result);\n                    } else {\n                        reject(new Error('Échec du chargement du corps du message'));\n                    }\n                });\n            });\n\n            const fullText = bodyResult.value;\n            document.getElementById('email-body').value = fullText;\n\n            // Détecter les numéros de téléphone et emails\n            const phones = extractPhoneNumbers(fullText);\n            log('Numéros de téléphone détectés:', phones);\n            populatePhoneSelect(phones);\n\n            const emails = extractEmails(fullText);\n            log('Emails détectés:', emails);\n            populateEmailSelect(emails);\n\n        } catch (error) {\n            log('Erreur lors du chargement du corps du message:', error);\n        }\n\n        // Traitement de l'expéditeur\n        if (item.sender) {\n            let senderEmail = item.sender.emailAddress;\n            let senderName = item.sender.displayName;\n\n            senderEmail = cleanEmail(senderEmail);\n            senderName = senderName || senderEmail.split('@')[0];\n\n            document.getElementById('sender-name').value = senderName;\n            document.getElementById('sender-email').value = senderEmail;\n        }\n\n        // Chargement du sujet\n        const subject = item.subject || '';\n        document.getElementById('email-subject').value = subject;\n    }\n}\n\n\n\nfunction updateProgress(fileName, status, message = '') {\n    const progressDiv = document.getElementById('progress-container') || createProgressDiv();\n    const fileProgress = progressDiv.querySelector(`[data-file=\"${fileName}\"]`) || createFileProgress(fileName);\n\n    switch (status) {\n        case 'progress':\n            fileProgress.className = 'file-progress progress';\n            fileProgress.innerHTML = `\n                <span class=\"filename\">${fileName}</span>\n                <span class=\"status\">${message}</span>\n                <div class=\"spinner\"></div>\n            `;\n            break;\n        case 'success':\n            fileProgress.className = 'file-progress success';\n            fileProgress.innerHTML = `\n                <span class=\"filename\">${fileName}</span>\n                <span class=\"status\">Traitement terminé ✓</span>\n            `;\n            setTimeout(() => fileProgress.remove(), 3000);\n            break;\n        case 'error':\n            fileProgress.className = 'file-progress error';\n            fileProgress.innerHTML = `\n                <span class=\"filename\">${fileName}</span>\n                <span class=\"status\">Erreur: ${message}</span>\n            `;\n            break;\n    }\n}\n\nfunction createProgressDiv() {\n    const div = document.createElement('div');\n    div.id = 'progress-container';\n    div.style.cssText = `\n        position: fixed;\n        bottom: 20px;\n        right: 20px;\n        width: 300px;\n        max-height: 80vh;\n        overflow-y: auto;\n        z-index: 1000;\n    `;\n    \n    const style = document.createElement('style');\n    style.textContent = `\n        .file-progress {\n            margin: 10px;\n            padding: 10px;\n            border-radius: 4px;\n            background: #f8f9fa;\n            border: 1px solid #ddd;\n            box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n        }\n        .file-progress.progress {\n            background: #e8f4f8;\n            border-color: #b8daff;\n        }\n        .file-progress.success {\n            background: #d4edda;\n            border-color: #c3e6cb;\n        }\n        .file-progress.error {\n            background: #f8d7da;\n            border-color: #f5c6cb;\n        }\n        .filename {\n            display: block;\n            font-weight: bold;\n            margin-bottom: 5px;\n            word-break: break-all;\n        }\n        .status {\n            display: block;\n            font-size: 0.9em;\n            color: #666;\n        }\n        .spinner {\n            margin-top: 5px;\n            width: 20px;\n            height: 20px;\n            border: 2px solid #ccc;\n            border-top-color: #007bff;\n            border-radius: 50%;\n            animation: spin 1s linear infinite;\n        }\n        @keyframes spin {\n            to { transform: rotate(360deg); }\n        }\n    `;\n    document.head.appendChild(style);\n    document.body.appendChild(div);\n    return div;\n}\n\nfunction createFileProgress(fileName) {\n    const div = document.createElement('div');\n    div.className = 'file-progress';\n    div.dataset.file = fileName;\n    document.getElementById('progress-container').appendChild(div);\n    return div;\n}\n\nfunction getRestToken() {\n    return new Promise((resolve, reject) => {\n        Office.context.mailbox.getCallbackTokenAsync({isRest: true}, function(result) {\n            if (result.status === Office.AsyncResultStatus.Succeeded) {\n                resolve(result.value);\n            } else {\n                reject(new Error('Impossible d\\'obtenir le token REST'));\n            }\n        });\n    });\n}\n\n// Fonction pour obtenir une pièce jointe via l'API REST\nasync function getAttachmentViaRest(token, itemId, attachmentId) {\n    const response = await fetch(\n        `https://outlook.office.com/api/v2.0/me/messages/${itemId}/attachments/${attachmentId}/$value`,\n        {\n            headers: {\n                'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json'\n            }\n        }\n    );\n\n    if (!response.ok) {\n        throw new Error(`Erreur HTTP: ${response.status}`);\n    }\n\n    // Convertir la réponse en base64\n    const blob = await response.blob();\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onloadend = () => {\n            const base64data = reader.result.split(',')[1];\n            resolve(base64data);\n        };\n        reader.onerror = reject;\n        reader.readAsDataURL(blob);\n    });\n}\n\n// Fonction pour obtenir une pièce jointe via la méthode standard\nfunction getAttachmentContent(attachmentId) {\n    return new Promise((resolve, reject) => {\n        Office.context.mailbox.item.getAttachmentContentAsync(attachmentId, (result) => {\n            if (result.status === Office.AsyncResultStatus.Succeeded) {\n                resolve(result.value.content);\n            } else {\n                reject(new Error(`Échec de récupération de la pièce jointe: ${result.error.message}`));\n            }\n        });\n    });\n}\n\n\nfunction cleanEmail(email) {\n    if (!email) return '';\n    \n    // Enlever le \"<mailto:\" et \">\" si présent\n    email = email.replace(/<mailto:/g, '').replace(/>/g, '');\n    \n    // Enlever les espaces\n    email = email.trim();\n    \n    // Si l'email est répété, prendre la première occurrence\n    if (email.includes(' ')) {\n        email = email.split(' ')[0];\n    }\n    \n    return email;\n}\n\n\nfunction getDomainFromEmail(email) {\n    return email.split('@')[1].toLowerCase();\n}\n\n\n\nfunction cleanName(name) {\n    if (!name) return '';\n    \n    // Convertir en string si ce n'est pas déjà le cas\n    name = String(name);\n    \n    // Nettoyage plus agressif\n    name = name\n        // Enlever tous les \":\" et espaces au début\n        .replace(/^[:\\s]+/, '')\n        // Enlever tous les \":\" et espaces à la fin\n        .replace(/[:\\s]+$/, '')\n        // Enlever les guillemets\n        .replace(/[\"']/g, '')\n        // Enlever les caractères spéciaux et les espaces multiples\n        .replace(/[^\\w\\sÀ-ÿ-]/g, ' ')\n        // Remplacer les espaces multiples par un seul espace\n        .replace(/\\s+/g, ' ')\n        // Nettoyer les espaces au début et à la fin\n        .trim();\n\n    // Log du résultat du nettoyage\n    log('Nettoyage du nom:', {\n        avant: String(arguments[0]),\n        après: name\n    });\n    \n    return name;\n}\n\n\nfunction parseEmailText(text) {\n    const emails = [];\n    \n    // Diviser par les marqueurs \"De :\" ou \"From :\"\n    const segments = text.split(/(?:\\r?\\n|\\r)(?:De |From :)/).filter(Boolean);\n    \n    segments.forEach(segment => {\n        const lines = segment.split(/\\r?\\n|\\r/);\n        let currentEmail = {\n            name: '',\n            from: '',\n            subject: '',\n            content: []\n        };\n        \n        let isHeader = true;\n        let contentStarted = false;\n        \n        for (let line of lines) {\n            line = line.trim();\n            \n            if (!line) continue;\n            \n            // Traitement des en-têtes\n            if (isHeader) {\n                if (line.startsWith('From:') || line.includes('<')) {\n                    const emailMatch = line.match(/<([^>]+@[^>]+)>/);\n                    if (emailMatch) {\n                        currentEmail.from = emailMatch[1];\n                        currentEmail.name = line.split('<')[0].trim();\n                    }\n                } else if (line.startsWith('Subject:') || line.startsWith('Objet:')) {\n                    currentEmail.subject = line.replace(/^(Subject:|Objet:)/, '').trim();\n                    isHeader = false;\n                } else if (line.match(/^[\\w\\s.]+@[\\w\\s.]+\\.\\w+$/)) {\n                    currentEmail.from = line;\n                } else if (!line.match(/^(À|To|Date|Envoyé|Sent):/)) {\n                    contentStarted = true;\n                    isHeader = false;\n                }\n            }\n            \n            // Contenu de l'email\n            if (!isHeader && contentStarted && !line.match(/^(De|From|À|To|Date|Envoyé|Sent):/)) {\n                currentEmail.content.push(line);\n            }\n        }\n        \n        if (currentEmail.content.length > 0) {\n            currentEmail.content = currentEmail.content.join('\\n').trim();\n            emails.push(currentEmail);\n        }\n    });\n    \n    log('Segments d\\'email analysés:', emails);\n    return emails;\n}\n\n\n\nfunction formatEmailContent(emailBody) {\n    if (!emailBody) return '';\n    \n    // Convertir les caractères encodés en HTML\n    let cleanedContent = emailBody\n        .replace(/=3D/g, '=')\n        .replace(/=C3=A9/g, 'é')\n        .replace(/=C3=A8/g, 'è')\n        .replace(/=C3=A0/g, 'à')\n        .replace(/=C3=AB/g, 'ë')\n        .replace(/=C3=BB/g, 'û')\n        .replace(/=C3=B4/g, 'ô')\n        .replace(/=C3=AE/g, 'î')\n        .replace(/=C3=A2/g, 'â')\n        .replace(/&nbsp;/g, ' ');\n\n    // Préserver les sauts de ligne spécifiques aux emails\n    cleanedContent = cleanedContent\n        // Remplacer <div><br></div> par un marqueur spécial\n        .replace(/<div><br><\\/div>|<div><br\\/><\\/div>|<br>|<br\\/>/g, '[[LINEBREAK]]')\n        // Gérer les divs avec du contenu\n        .replace(/<div>(.*?)<\\/div>/g, '$1\\n')\n        // Nettoyer les autres balises HTML\n        .replace(/<[^>]+>/g, '')\n        // Nettoyer les caractères spéciaux restants\n        .replace(/\\r\\n|\\r|\\n/g, '\\n')\n        .trim();\n\n    // Convertir les marqueurs de saut de ligne en paragraphes HTML\n    let paragraphs = cleanedContent\n        .split('[[LINEBREAK]]')\n        .map(p => p.trim())\n        .filter(p => p !== '');\n\n    // Reconstruire le HTML avec la structure appropriée\n    cleanedContent = '<div style=\"white-space: pre-line; font-family: Arial, sans-serif;\">';\n    \n    // Ajouter chaque paragraphe avec un espacement approprié\n    paragraphs.forEach((paragraph, index) => {\n        cleanedContent += `<p style=\"margin: 0; padding: 8px 0;\">${paragraph}</p>`;\n        // Ajouter un espace entre les paragraphes\n        if (index < paragraphs.length - 1) {\n            cleanedContent += '<div style=\"height: 12px;\"></div>';\n        }\n    });\n\n    cleanedContent += '</div>';\n\n    // Ajouter les notes additionnelles si présentes\n    if (cleanedContent.includes('Notes additionnelles')) {\n        cleanedContent = cleanedContent.replace(\n            /(Notes additionnelles.*?<\\/p>)/,\n            '<div style=\"margin: 30px 0;\">' +\n            '<hr style=\"border: none; border-top: 1px solid #cccccc;\">' +\n            '<h3>$1</h3>' +\n            '<hr style=\"border: none; border-top: 1px solid #cccccc;\">' +\n            '</div>'\n        );\n    }\n\n    return cleanedContent;\n}\n\nfunction loadUserEmailData() {\n    log('Chargement des données de l\\'utilisateur');\n    const userProfile = Office.context.mailbox.userProfile;\n    if (userProfile) {\n        const userEmail = userProfile.emailAddress;\n        document.getElementById('user-email').value = userEmail;\n        log('Email de l\\'utilisateur chargé:', userEmail);\n    } else {\n        log('Profil utilisateur non disponible');\n    }\n}\n\n// Modification de la fonction de chargement des réglages\nfunction loadSavedSettings() {\n    log('Chargement des réglages sauvegardés');\n    try {\n        const savedSettings = localStorage.getItem('odooSettings');\n        if (savedSettings) {\n            const settings = JSON.parse(savedSettings);\n            log('Réglages trouvés', {\n                hasUrl: !!settings.odooUrl,\n                hasDatabase: !!settings.database,\n                hasUsername: !!settings.username,\n                hasPassword: !!settings.password\n            });\n            \n            document.getElementById('odoo-url').value = settings.odooUrl || '';\n            document.getElementById('database').value = settings.database || '';\n            document.getElementById('username').value = settings.username || '';\n            document.getElementById('password').value = settings.password || '';\n        } else {\n            log('Aucun réglage sauvegardé trouvé');\n        }\n    } catch (error) {\n        log('Erreur lors du chargement des réglages', error);\n    }\n}\n\n// Modification de la fonction de configuration du toggle password\nfunction setupPasswordToggle() {\n    const passwordInput = document.getElementById('password');\n    const toggleButton = document.getElementById('toggle-password');\n\n    if (passwordInput && toggleButton) {\n        toggleButton.addEventListener('click', () => {\n            const type = passwordInput.type === 'password' ? 'text' : 'password';\n            passwordInput.type = type;\n            \n            // Changer l'icône\n            const icon = toggleButton.querySelector('i');\n            if (type === 'password') {\n                icon.classList.replace('ms-Icon--Hide', 'ms-Icon--RedEye');\n            } else {\n                icon.classList.replace('ms-Icon--RedEye', 'ms-Icon--Hide');\n            }\n        });\n    }\n}\n\n// Classe OdooAPI\nclass OdooAPI {\n    constructor() {\n        const settings = this.getSettings();\n        this.host = settings.odooUrl;\n        this.db = settings.database;\n        this.username = settings.username;\n        this.password = settings.password;\n        this.worker_url = 'https://royal-pond-be25.lvr-3b7.workers.dev';\n        this.maxRetries = 3;\n        this.retryDelay = 1000;\n        \n        log('OdooAPI initialisée', {\n            host: this.host,\n            database: this.db,\n            username: this.username,\n            worker_url: this.worker_url\n        });\n    }\n\n    getSettings() {\n        const savedSettings = localStorage.getItem('odooSettings');\n        if (!savedSettings) {\n            throw new Error('Aucun réglage trouvé. Veuillez configurer l\\'add-in dans les paramètres.');\n        }\n        \n        const settings = JSON.parse(savedSettings);\n        if (!settings.odooUrl || !settings.database || !settings.username || !settings.password) {\n            throw new Error('Configuration incomplète. Veuillez vérifier vos paramètres.');\n        }\n        \n        return settings;\n    }\n\n    formatOdooUrl(url) {\n        if (!url.startsWith('http://') && !url.startsWith('https://')) {\n            url = 'https://' + url;\n        }\n        return url.replace(/\\/$/, '');\n    }\n\n    async retryRequest(fn) {\n        for (let i = 0; i < this.maxRetries; i++) {\n            try {\n                return await fn();\n            } catch (error) {\n                log(`Tentative ${i + 1}/${this.maxRetries} échouée`, error);\n                if (i === this.maxRetries - 1) throw error;\n                await new Promise(r => setTimeout(r, this.retryDelay * (i + 1)));\n            }\n        }\n    }\n\n    // Dans la classe OdooAPI\n// Dans la classe OdooAPI\n// Dans la classe OdooAPI\nescapeXml(unsafe) {\n    if (typeof unsafe !== 'string') return unsafe;\n    return unsafe\n        .replace(/[<>&'\"]/g, function (c) {\n            switch (c) {\n                case '<': return '&lt;';\n                case '>': return '&gt;';\n                case '&': return '&amp;';\n                case '\\'': return '&apos;';\n                case '\"': return '&quot;';\n                default: return c;\n            }\n        })\n        .replace(/[\\x00-\\x1F\\x7F-\\x9F]/g, '') // Supprimer les caractères de contrôle\n        .trim();\n}\n\nasync createLead(emailFrom, subject, description) {\n    try {\n        const userId = await this.getUserId();\n        \n        const senderName = document.getElementById('sender-name').value.trim();\n        const phoneNumber = document.getElementById('phone-number').value.trim();\n        \n        const cleanData = {\n            name: this.escapeXml(subject || 'Nouveau lead'),\n            email_from: this.escapeXml(emailFrom),\n            description: this.escapeXml(description),\n            user_id: userId,\n            type: 'opportunity',\n            active: true,\n            company_id: 1,\n            stage_id: 16,\n            contact_name: this.escapeXml(senderName || emailFrom.split('@')[0]),\n            phone: this.escapeXml(phoneNumber)\n        };\n\n        log('Données nettoyées pour création lead:', cleanData);\n\n        // Création du lead\n        const leadResponse = await this.fetchWithTimeout(\n            `${this.worker_url}/create_lead`,\n            {\n                method: 'POST',\n                headers: this.buildHeaders(),\n                body: JSON.stringify({\n                    odoo_url: this.host,\n                    database: this.db,\n                    username: this.username,\n                    password: this.password,\n                    lead_data: cleanData\n                })\n            }\n        );\n\n        const leadResponseText = await leadResponse.text();\n        log('Réponse brute création lead:', leadResponseText);\n\n        let data;\n        try {\n            data = JSON.parse(leadResponseText);\n        } catch (e) {\n            throw new Error(`Réponse invalide du serveur: ${leadResponseText}`);\n        }\n\n        if (!data.success) {\n            throw new Error(data.error || 'Réponse serveur indique un échec');\n        }\n\n        const leadId = data.lead_id;\n\n        // Traitement simplifié des pièces jointes\n        // Dans la méthode createLead, remplacez la partie des pièces jointes par :\n// Dans createLead de la classe OdooAPI\n// Dans la classe OdooAPI, dans la méthode createLead\n// Dans la classe OdooAPI, remplacez la partie de l'upload des pièces jointes par :\n\nif (window.attachmentsToUpload && window.attachmentsToUpload.length > 0) {\n    log(`Début upload des pièces jointes (${window.attachmentsToUpload.length})`);\n    \n    // Récupérer toutes les cases cochées\n    const checkedAttachments = document.querySelectorAll('.attachment-item input[type=\"checkbox\"]:checked');\n    \n    for (const checkbox of checkedAttachments) {\n        const id = parseInt(checkbox.id.split('-')[1]);\n        const attachment = window.attachmentsToUpload[id];\n        \n        if (!attachment) {\n            console.error(`Pièce jointe non trouvée pour l'index ${id}`);\n            continue;\n        }\n\n        try {\n            log('Début upload pièce jointe:', {\n                name: attachment.name,\n                size: attachment.datas.length\n            });\n\n            // Upload en une seule fois pour tous les fichiers\n            const attachmentResponse = await this.fetchWithTimeout(\n                `${this.worker_url}/create_attachment`,\n                {\n                    method: 'POST',\n                    headers: this.buildHeaders(),\n                    body: JSON.stringify({\n                        odoo_url: this.host,\n                        database: this.db,\n                        username: this.username,\n                        password: this.password,\n                        attachment_data: {\n                            name: attachment.name,\n                            datas: attachment.datas,\n                            res_model: 'crm.lead',\n                            res_id: leadId,\n                            mimetype: attachment.mimetype,\n                            type: 'binary'\n                        }\n                    })\n                },\n                60000 // 60 secondes timeout pour les gros fichiers\n            );\n\n            const attachmentResult = await attachmentResponse.json();\n            \n            if (!attachmentResult.success) {\n                throw new Error(attachmentResult.error || 'Échec de création de la pièce jointe');\n            }\n\n            log('Pièce jointe uploadée avec succès:', {\n                name: attachment.name,\n                id: attachmentResult.attachment_id\n            });\n\n            updateProgress(attachment.name, 'success', 'Upload terminé');\n\n        } catch (error) {\n            log('Erreur upload pièce jointe:', {\n                name: attachment.name,\n                error: error.message\n            });\n            updateProgress(attachment.name, 'error', error.message);\n            throw error;\n        }\n    }\n}\n\n        return {\n            success: true,\n            leadId: leadId,\n            message: 'Lead et références des pièces jointes créés avec succès',\n            details: data\n        };\n\n    } catch (error) {\n        log('Erreur détaillée création lead:', error);\n        throw error;\n    }\n}\n\nasync createAssistanceTicket(emailFrom, subject, description) {\n    try {\n        const userId = await this.getUserId();\n        \n        const senderName = document.getElementById('sender-name').value.trim();\n        const phoneNumber = document.getElementById('phone-number').value.trim();\n        \n        const cleanData = {\n            name: this.escapeXml(subject || 'Nouveau ticket'),\n            partner_email: this.escapeXml(emailFrom),\n            description: this.escapeXml(description),\n            user_id: userId,\n            company_id: 1,\n            partner_name: this.escapeXml(senderName || emailFrom.split('@')[0]),\n            partner_phone: this.escapeXml(phoneNumber)\n        };\n\n        log('Données nettoyées pour création ticket:', cleanData);\n\n        // Utiliser le nouvel endpoint create_assistance_ticket\n        const ticketResponse = await this.fetchWithTimeout(\n            `${this.worker_url}/create_assistance_ticket`,  // Utiliser le nouvel endpoint\n            {\n                method: 'POST',\n                headers: this.buildHeaders(),\n                body: JSON.stringify({\n                    odoo_url: this.host,\n                    database: this.db,\n                    username: this.username,\n                    password: this.password,\n                    ticket_data: cleanData  // Renommé en ticket_data pour plus de clarté\n                })\n            }\n        );\n\n        const ticketResponseText = await ticketResponse.text();\n        log('Réponse brute création ticket:', ticketResponseText);\n\n        let data;\n        try {\n            data = JSON.parse(ticketResponseText);\n        } catch (e) {\n            throw new Error(`Réponse invalide du serveur: ${ticketResponseText}`);\n        }\n\n        if (!data.success) {\n            throw new Error(data.error || 'Réponse serveur indique un échec');\n        }\n\n        const ticketId = data.ticket_id;  // Utiliser directement ticket_id\n\n        // Gestion des pièces jointes\n        if (window.attachmentsToUpload && window.attachmentsToUpload.length > 0) {\n            const checkedAttachments = document.querySelectorAll('.attachment-item input[type=\"checkbox\"]:checked');\n            \n            for (const checkbox of checkedAttachments) {\n                const id = parseInt(checkbox.id.split('-')[1]);\n                const attachment = window.attachmentsToUpload[id];\n                \n                if (!attachment) continue;\n\n                try {\n                    const attachmentResponse = await this.fetchWithTimeout(\n                        `${this.worker_url}/create_attachment`,\n                        {\n                            method: 'POST',\n                            headers: this.buildHeaders(),\n                            body: JSON.stringify({\n                                odoo_url: this.host,\n                                database: this.db,\n                                username: this.username,\n                                password: this.password,\n                                attachment_data: {\n                                    name: attachment.name,\n                                    datas: attachment.datas,\n                                    res_model: 'helpdesk.ticket',\n                                    res_id: ticketId,\n                                    mimetype: attachment.mimetype,\n                                    type: 'binary'\n                                }\n                            })\n                        },\n                        60000\n                    );\n\n                    const attachmentResult = await attachmentResponse.json();\n                    \n                    if (!attachmentResult.success) {\n                        throw new Error(attachmentResult.error || 'Échec de création de la pièce jointe');\n                    }\n\n                    updateProgress(attachment.name, 'success', 'Upload terminé');\n\n                } catch (error) {\n                    updateProgress(attachment.name, 'error', error.message);\n                    throw error;\n                }\n            }\n        }\n\n        return {\n            success: true,\n            ticketId: ticketId,\n            message: 'Ticket et pièces jointes créés avec succès',\n            details: data\n        };\n\n    } catch (error) {\n        log('Erreur détaillée création ticket:', error);\n        throw error;\n    }\n}\n\n// Dans la classe OdooAPI\nasync createAttachment(attachmentData) {\n    try {\n        // Si res_model n'est pas spécifié, utiliser crm.lead par défaut\n        const finalAttachmentData = {\n            ...attachmentData,\n            res_model: attachmentData.res_model || 'crm.lead'\n        };\n\n        log('Création pièce jointe:', {\n            model: finalAttachmentData.res_model,\n            resId: finalAttachmentData.res_id,\n            fileName: finalAttachmentData.name\n        });\n\n        const response = await this.fetchWithTimeout(\n            `${this.worker_url}/create_attachment`,\n            {\n                method: 'POST',\n                headers: this.buildHeaders(),\n                body: JSON.stringify({\n                    odoo_url: this.host,\n                    database: this.db,\n                    username: this.username,\n                    password: this.password,\n                    attachment_data: finalAttachmentData\n                })\n            },\n            60000 // 60 secondes timeout pour les gros fichiers\n        );\n\n        const data = await response.json();\n        if (!data.success) {\n            throw new Error(data.error || 'Échec de création de la pièce jointe');\n        }\n\n        log('Pièce jointe créée avec succès:', {\n            attachmentId: data.attachment_id,\n            model: finalAttachmentData.res_model,\n            resId: finalAttachmentData.res_id\n        });\n\n        return {\n            success: true,\n            attachment_id: data.attachment_id\n        };\n    } catch (error) {\n        log('Erreur création pièce jointe:', error);\n        throw error;\n    }\n}\n\n\n\n\nasync getUserId() {\n    try {\n        const response = await this.fetchWithTimeout(\n            `${this.worker_url}/get_user_id`,\n            {\n                method: 'POST',\n                headers: this.buildHeaders(),\n                body: JSON.stringify({\n                    odoo_url: this.host,\n                    database: this.db,\n                    username: this.username,\n                    password: this.password\n                })\n            }\n        );\n\n        if (!response.ok) {\n            throw new Error(`Erreur HTTP ${response.status}`);\n        }\n\n        const data = await response.json();\n        if (!data.success || !data.user_id) {\n            throw new Error('Impossible de récupérer l\\'ID utilisateur');\n        }\n\n        return data.user_id;\n    } catch (error) {\n        throw new Error(`Erreur lors de la récupération de l'ID utilisateur: ${error.message}`);\n    }\n}\n\nasync uploadLargeAttachment(leadId, attachment) {\n    const CHUNK_SIZE = 500 * 1024; // 500KB par chunk\n    const totalChunks = Math.ceil(attachment.datas.length / CHUNK_SIZE);\n    let attachmentId = null;\n\n    log(`Début upload par chunks pour ${attachment.name}`, {\n        totalSize: attachment.datas.length,\n        chunks: totalChunks\n    });\n\n    for (let i = 0; i < totalChunks; i++) {\n        const start = i * CHUNK_SIZE;\n        const end = Math.min(start + CHUNK_SIZE, attachment.datas.length);\n        const chunk = attachment.datas.slice(start, end);\n        const isLastChunk = i === totalChunks - 1;\n\n        try {\n            const chunkResponse = await this.fetchWithTimeout(\n                `${this.worker_url}/upload_attachment_chunk`,\n                {\n                    method: 'POST',\n                    headers: this.buildHeaders(),\n                    body: JSON.stringify({\n                        odoo_url: this.host,\n                        database: this.db,\n                        username: this.username,\n                        password: this.password,\n                        attachment_data: {\n                            name: attachment.name,\n                            datas: chunk,\n                            res_model: 'crm.lead',\n                            res_id: leadId,\n                            mimetype: attachment.mimetype,\n                            chunk_index: i,\n                            total_chunks: totalChunks,\n                            is_last_chunk: isLastChunk,\n                            attachment_id: attachmentId // null pour le premier chunk\n                        }\n                    })\n                },\n                15000 // 15 secondes par chunk\n            );\n\n            const result = await chunkResponse.json();\n            \n            if (!result.success) {\n                throw new Error(result.error || 'Échec upload chunk');\n            }\n\n            // Récupérer l'ID de l'attachment après le premier chunk\n            if (i === 0) {\n                attachmentId = result.attachment_id;\n            }\n\n            updateProgress(attachment.name, 'progress', `Upload en cours... ${Math.round((i + 1) / totalChunks * 100)}%`);\n\n        } catch (error) {\n            throw new Error(`Erreur chunk ${i + 1}/${totalChunks}: ${error.message}`);\n        }\n    }\n\n    return attachmentId;\n}\n\n\n    async testServerConnection() {\n        log('Test de connexion au serveur', {\n            url: this.worker_url,\n            odoo_url: this.host\n        });\n\n        return this.retryRequest(async () => {\n            try {\n                const response = await this.fetchWithTimeout(\n                    `${this.worker_url}/test`,\n                    {\n                        method: 'POST',\n                        headers: this.buildHeaders(),\n                        body: JSON.stringify({\n                            odoo_url: this.host,\n                            database: this.db,\n                            username: this.username,\n                            password: this.password\n                        })\n                    }\n                );\n\n                if (!response.ok) {\n                    const errorData = await response.json().catch(() => ({}));\n                    throw new Error(errorData.error || `Erreur HTTP ${response.status}`);\n                }\n\n                const data = await response.json();\n                log('Réponse du test de connexion', data);\n\n                // Vérification de l'authentification\n                const loginSuccess = data.details?.login_response?.includes('<value><int>') ||\n                                   data.details?.login_response?.includes('<value><boolean>1</boolean>');\n\n                if (!loginSuccess) {\n                    throw new Error('Échec de l\\'authentification. Vérifiez vos identifiants de connexion.');\n                }\n\n                const versionInfo = this.extractVersionInfo(data.details.version_response);\n                \n                return {\n                    success: true,\n                    message: `Connexion établie avec succès (Odoo ${versionInfo.version})`,\n                    details: {\n                        version: versionInfo,\n                        responses: data.details\n                    }\n                };\n\n            } catch (error) {\n                return this.handleError(error, 'Erreur lors du test de connexion');\n            }\n        });\n    }\n\n    // Ajouter dans la classe OdooAPI\nasync searchPartners(searchCriteria) {\n    try {\n        const response = await this.fetchWithTimeout(\n            `${this.worker_url}/search_partners`,\n            {\n                method: 'POST',\n                headers: this.buildHeaders(),\n                body: JSON.stringify({\n                    odoo_url: this.host,\n                    database: this.db,\n                    username: this.username,\n                    password: this.password,\n                    search_criteria: searchCriteria\n                })\n            }\n        );\n\n        const data = await response.json();\n        if (!data.success) {\n            throw new Error(data.error || 'Échec de la recherche');\n        }\n\n        return data.partners;\n    } catch (error) {\n        log('Erreur recherche partenaires:', error);\n        throw error;\n    }\n}\n\n    extractVersionInfo(xmlResponse) {\n        try {\n            const versionMatch = xmlResponse.match(/<name>server_version<\\/name>\\s*<value><string>(.*?)<\\/string><\\/value>/);\n            const versionInfo = versionMatch ? versionMatch[1] : 'Version inconnue';\n            \n            const serieMatch = xmlResponse.match(/<name>server_serie<\\/name>\\s*<value><string>(.*?)<\\/string><\\/value>/);\n            const serie = serieMatch ? serieMatch[1] : '';\n            \n            return {\n                version: versionInfo,\n                serie: serie\n            };\n        } catch (error) {\n            log('Erreur extraction version', error);\n            return {\n                version: 'Version inconnue',\n                serie: 'Inconnue'\n            };\n        }\n    }\n\n    validateCredentials() {\n        if (!this.host || !this.db || !this.password) {\n            throw new Error('Configuration incomplète: tous les paramètres de connexion sont requis');\n        }\n    }\n\n    async init() {\n        try {\n            this.validateCredentials();\n            this.host = this.formatOdooUrl(this.host);\n            const testResult = await this.testServerConnection();\n            \n            if (!testResult.success) {\n                throw new Error(`Échec de l'initialisation: ${testResult.message}`);\n            }\n            \n            log('Initialisation réussie', testResult);\n            return testResult;\n            \n        } catch (error) {\n            log('Erreur lors de l\\'initialisation', error);\n            throw error;\n        }\n    }\n\n    buildHeaders() {\n        return {\n            'Content-Type': 'application/json',\n            'X-Api-Key': this.password\n        };\n    }\n\n    async fetchWithTimeout(url, options, timeout = 30000) { // Augmenté à 30 secondes par défaut\n        const controller = new AbortController();\n        const id = setTimeout(() => controller.abort(), timeout);\n        \n        try {\n            const response = await fetch(url, {\n                ...options,\n                signal: controller.signal\n            });\n            clearTimeout(id);\n            return response;\n        } catch (error) {\n            clearTimeout(id);\n            if (error.name === 'AbortError') {\n                throw new Error('La requête a pris trop de temps');\n            }\n            throw error;\n        }\n    }\n\n    handleError(error, customMessage = 'Une erreur est survenue') {\n        log('Erreur API', error);\n        return {\n            success: false,\n            message: error.message || customMessage,\n            details: {\n                error: error.message,\n                type: error.name\n            }\n        };\n    }\n}\n\nfunction showNotification(message, type = \"info\", details = null) {\n    const notification = document.createElement('div');\n    notification.className = `notification ${type}`;\n    \n    const messageEl = document.createElement('div');\n    messageEl.className = 'notification-message';\n    messageEl.textContent = message;\n    notification.appendChild(messageEl);\n\n    // Ajout du lien vers l'opportunité si c'est une création réussie\n    if (type === 'success' && details && details.leadId) {\n        const settings = JSON.parse(localStorage.getItem('odooSettings'));\n        const opportunityLink = document.createElement('a');\n        opportunityLink.href = `${settings.odooUrl}/web#id=${details.leadId}&model=crm.lead&view_type=form`;\n        opportunityLink.target = \"_blank\";\n        opportunityLink.className = 'opportunity-link';\n        opportunityLink.textContent = \"Voir l'opportunité dans Odoo\";\n        notification.appendChild(opportunityLink);\n    }\n\n    if (details) {\n        const detailsEl = document.createElement('div');\n        detailsEl.className = 'notification-details';\n        \n        if (details.message) {\n            const errorMessage = document.createElement('div');\n            errorMessage.className = 'error-message';\n            errorMessage.textContent = `Message: ${details.message}`;\n            detailsEl.appendChild(errorMessage);\n        }\n\n        if (details.logs && details.logs.length > 0) {\n            const logsEl = document.createElement('div');\n            logsEl.className = 'error-logs';\n            details.logs.forEach(log => {\n                const logEntry = document.createElement('div');\n                logEntry.className = 'log-entry';\n                logEntry.textContent = `${log.timestamp || ''} ${log.message || log}`;\n                logsEl.appendChild(logEntry);\n            });\n            detailsEl.appendChild(logsEl);\n        }\n\n        if (details.stack) {\n            const stackEl = document.createElement('pre');\n            stackEl.className = 'error-stack';\n            stackEl.textContent = details.stack;\n            detailsEl.appendChild(stackEl);\n        }\n\n        notification.appendChild(detailsEl);\n    }\n\n    // Styles mis à jour\n    const style = document.createElement('style');\n    style.textContent = `\n        .notification {\n            position: fixed;\n            top: 20px;\n            right: 20px;\n            max-width: 80vw;\n            max-height: 80vh;\n            overflow-y: auto;\n            padding: 15px;\n            background: white;\n            border-radius: 5px;\n            box-shadow: 0 2px 4px rgba(0,0,0,0.2);\n            z-index: 1000;\n            font-family: monospace;\n        }\n        .notification.error { border-left: 4px solid #f44336; }\n        .notification.success { border-left: 4px solid #4CAF50; }\n        .notification-message {\n            font-weight: bold;\n            margin-bottom: 10px;\n        }\n        .opportunity-link {\n            display: block;\n            margin: 10px 0;\n            padding: 8px 12px;\n            background-color: #4CAF50;\n            color: white;\n            text-decoration: none;\n            border-radius: 4px;\n            text-align: center;\n            font-weight: bold;\n            transition: background-color 0.3s;\n        }\n        .opportunity-link:hover {\n            background-color: #45a049;\n        }\n        .notification-details {\n            font-size: 12px;\n            margin-top: 10px;\n            padding-top: 10px;\n            border-top: 1px solid #eee;\n        }\n        .error-message {\n            color: #f44336;\n            margin-bottom: 5px;\n        }\n        .error-logs {\n            margin-top: 5px;\n            padding: 5px;\n            background: #f5f5f5;\n            border-radius: 3px;\n        }\n        .log-entry {\n            padding: 2px 5px;\n            border-bottom: 1px solid #eee;\n        }\n        .error-stack {\n            margin-top: 5px;\n            padding: 5px;\n            background: #f5f5f5;\n            overflow-x: auto;\n            font-size: 11px;\n        }\n    `;\n    document.head.appendChild(style);\n    \n    document.body.appendChild(notification);\n    \n    setTimeout(() => {\n        notification.remove();\n    }, 30000);\n}\n\ndocument.getElementById('test-connection').onclick = async function() {\n    const button = this;\n    const icon = button.querySelector('i');\n    \n    let url = document.getElementById('odoo-url').value.trim();\n    const database = document.getElementById('database').value.trim();\n    const username = document.getElementById('username').value.trim();\n    const password = document.getElementById('password').value.trim();\n\n    log('Test de connexion initié', {\n        url: url,\n        database: database,\n        username: username,\n        hasPassword: !!password\n    });\n\n    if (!url || !database || !username || !password) {\n        showNotification('Veuillez remplir tous les champs', 'error');\n        return;\n    }\n\n    button.disabled = true;\n    // Sauvegarder le texte original\n    const originalText = button.textContent;\n    button.innerHTML = '<i class=\"ms-Icon ms-Icon--Sync\"></i>Test en cours...';\n\n    try {\n        // Sauvegarde d'abord les paramètres\n        const settings = {\n            odooUrl: url,\n            database,\n            username,\n            password\n        };\n        localStorage.setItem('odooSettings', JSON.stringify(settings));\n\n        // Crée ensuite l'instance de OdooAPI qui utilisera ces paramètres\n        const odoo = new OdooAPI();\n        const serverTest = await odoo.testServerConnection();\n        \n        if (serverTest.success) {\n            showNotification(\n                serverTest.message,\n                'success',\n                serverTest.details\n            );\n        } else {\n            throw new Error(serverTest.message);\n        }\n    } catch (error) {\n        log('Erreur critique', error);\n        showNotification(error.message, 'error', {\n            'Type d\\'erreur': error.name,\n            'Détails': error.stack || error.message\n        });\n    } finally {\n        button.disabled = false;\n        button.innerHTML = '<i class=\"ms-Icon ms-Icon--PlugConnected\"></i>Tester la connexion';\n    }\n};\n\n// Remplacer les gestionnaires de navigation existants par\n// Ajouter ces gestionnaires d'événements\n\n\ndocument.getElementById('settings-button').addEventListener('click', () => {\n    switchPage('settings-page');\n    document.getElementById('back-button').classList.add('visible');\n});\n\ndocument.getElementById('back-button').addEventListener('click', () => {\n    switchPage('app-body');\n    document.getElementById('back-button').classList.remove('visible');\n});\n\n// Modifier la fonction switchPage pour inclure la page de recherche\nfunction switchPage(pageId) {\n    const mainPage = document.getElementById('app-body');\n    const settingsPage = document.getElementById('settings-page');\n    const searchPage = document.getElementById('search-page');\n    \n    // Reset all pages\n    mainPage.classList.remove('slide-left');\n    settingsPage.classList.remove('active');\n    searchPage.classList.remove('active');\n    \n    switch(pageId) {\n        case 'settings-page':\n            mainPage.classList.add('slide-left');\n            settingsPage.classList.add('active');\n            break;\n        case 'search-page':\n            mainPage.classList.add('slide-left');\n            searchPage.classList.add('active');\n            break;\n        default:\n            // Retour à la page principale\n            break;\n    }\n}\n\ndocument.getElementById('search-button').addEventListener('click', async () => {\n    try {\n        // Basculer vers la page de recherche\n        switchPage('search-page');\n        document.getElementById('back-button').classList.add('visible');\n        \n        const item = Office.context.mailbox.item;\n        \n        if (item) {\n            // Traitement de l'expéditeur (même logique que loadEmailData)\n            if (item.sender) {\n                let senderEmail = item.sender.emailAddress;\n                senderEmail = cleanEmail(senderEmail);\n                document.getElementById('search-sender-email').value = senderEmail;\n            }\n\n            // Traitement du corps du message de manière asynchrone\n            try {\n                const bodyResult = await new Promise((resolve, reject) => {\n                    item.body.getAsync(Office.CoercionType.Text, (result) => {\n                        if (result.status === Office.AsyncResultStatus.Succeeded) {\n                            resolve(result);\n                        } else {\n                            reject(new Error('Échec du chargement du corps du message'));\n                        }\n                    });\n                });\n\n                const fullText = bodyResult.value;\n\n                // Détecter les numéros de téléphone (même logique que loadEmailData)\n                const phones = extractPhoneNumbers(fullText);\n                log('Numéros de téléphone détectés pour la recherche:', phones);\n                \n                // Mettre à jour le select des numéros de téléphone\n                const phoneSelect = document.getElementById('search-phone-select');\n                \n                // Vider le select sauf l'option par défaut\n                while (phoneSelect.options.length > 1) {\n                    phoneSelect.remove(1);\n                }\n\n                // Ajouter les numéros trouvés\n                phones.forEach((phoneInfo, index) => {\n                    const option = document.createElement('option');\n                    option.value = phoneInfo.formatted;\n                    option.textContent = `Numéro ${index + 1}: ${phoneInfo.formatted}`;\n                    phoneSelect.appendChild(option);\n                });\n\n                // Si des numéros ont été trouvés, remplir l'input avec le premier\n                if (phones.length > 0) {\n                    document.getElementById('search-phone-number').value = phones[0].formatted;\n                }\n\n            } catch (error) {\n                log('Erreur lors du chargement du corps du message:', error);\n                throw error;\n            }\n        }\n\n    } catch (error) {\n        console.error('Erreur lors du chargement des données:', error);\n        showNotification('Erreur lors du chargement des données', 'error', {\n            message: error.message\n        });\n    }\n});\n\n// Ajouter l'événement pour le select de téléphone dans la page de recherche\ndocument.getElementById('search-phone-select').addEventListener('change', (e) => {\n    if (e.target.value) {\n        document.getElementById('search-phone-number').value = e.target.value;\n    }\n});\n\ndocument.getElementById('search-contact-btn').addEventListener('click', async () => {\n    const button = document.getElementById('search-contact-btn');\n    const resultsContainer = document.getElementById('search-results');\n    \n    try {\n        button.disabled = true;\n        button.innerHTML = '<i class=\"ms-Icon ms-Icon--Sync\"></i>Recherche en cours...';\n        \n        const emailChecked = document.getElementById('search-email-checkbox').checked;\n        const phoneChecked = document.getElementById('search-phone-checkbox').checked;\n        \n        const searchCriteria = {};\n        \n        if (emailChecked) {\n            const email = document.getElementById('search-sender-email').value.trim();\n            if (email) searchCriteria.email = email;\n        }\n        \n        if (phoneChecked) {\n            let phone = document.getElementById('search-phone-number').value.trim();\n            phone = phone.replace(/[^0-9+]/g, '');\n            if (phone) searchCriteria.phone = phone;\n        }\n        \n        if (Object.keys(searchCriteria).length === 0) {\n            showNotification('Veuillez sélectionner et remplir au moins un critère de recherche', 'error');\n            return;\n        }\n\n        const odoo = new OdooAPI();\n        const partners = await odoo.searchPartners(searchCriteria);\n        \n        resultsContainer.innerHTML = '';\n        \n        if (partners.length === 0) {\n            resultsContainer.innerHTML = `\n                <div class=\"no-results\">\n                    Aucun contact trouvé avec ces critères\n                </div>\n            `;\n        } else {\n            const cardsContainer = document.createElement('div');\n            cardsContainer.className = 'partner-cards';\n            \n            partners.forEach(partner => {\n                const card = document.createElement('div');\n                card.className = 'partner-card';\n                \n                card.innerHTML = `\n                    <div class=\"card-header\">\n                        <input type=\"checkbox\" class=\"partner-select\" data-partner-id=\"${partner.id}\">\n                        <h3 class=\"partner-name\">${partner.name}</h3>\n                    </div>\n                    <div class=\"card-content\">\n                        <p class=\"partner-street\">${partner.street || ''}</p>\n                        <p class=\"partner-city\">${partner.zip || ''} ${partner.city || ''}</p>\n                    </div>\n                    <div class=\"card-footer\">\n                        <a href=\"${odoo.host}/web#id=${partner.id}&model=res.partner&view_type=form\" \n                           target=\"_blank\" \n                           class=\"view-button\">\n                           Voir dans Odoo\n                        </a>\n                        <button class=\"upload-button\" style=\"display: none;\" data-partner-id=\"${partner.id}\">\n                            <i class=\"ms-Icon ms-Icon--Upload\"></i> Upload\n                        </button>\n                    </div>\n                `;\n                \n                cardsContainer.appendChild(card);\n            });\n            \n            resultsContainer.appendChild(cardsContainer);\n            \n            // Gérer l'affichage du bouton d'upload et ajouter les event listeners\n            document.querySelectorAll('.partner-select').forEach(checkbox => {\n                checkbox.addEventListener('change', function() {\n                    const card = this.closest('.partner-card');\n                    const uploadButton = card.querySelector('.upload-button');\n                    uploadButton.style.display = this.checked ? 'block' : 'none';\n                });\n            });\n\n            // Ajouter les event listeners pour les boutons d'upload\n            document.querySelectorAll('.upload-button').forEach(button => {\n                button.addEventListener('click', async function() {\n                    const partnerId = this.dataset.partnerId;\n                    const originalText = this.innerHTML;\n                    \n                    try {\n                        this.disabled = true;\n                        this.innerHTML = '<i class=\"ms-Icon ms-Icon--Sync\"></i> Upload en cours...';\n                        \n                        // Vérifier si des pièces jointes sont disponibles\n                        if (!window.attachmentsToUpload || window.attachmentsToUpload.length === 0) {\n                            showNotification('Aucune pièce jointe à uploader', 'error');\n                            return;\n                        }\n                        \n                        const odoo = new OdooAPI();\n                        \n                        // Upload chaque pièce jointe\n                        for (const attachment of window.attachmentsToUpload) {\n                            try {\n                                // Modifier les données de la pièce jointe pour le partenaire\n                                // On spécifie explicitement res.partner comme res_model\nconst attachmentData = {\n    ...attachment,\n    res_model: 'res.partner',\n    res_id: parseInt(partnerId)\n};\n\n                                \n                                updateProgress(attachment.name, 'progress', 'Upload en cours...');\n                                \n                                const response = await odoo.createAttachment(attachmentData);\n                                \n                                if (response.success) {\n                                    updateProgress(attachment.name, 'success', 'Upload terminé');\n                                } else {\n                                    throw new Error(response.error || 'Échec de l\\'upload');\n                                }\n                                \n                            } catch (error) {\n                                updateProgress(attachment.name, 'error', error.message);\n                                throw error;\n                            }\n                        }\n                        \n                        showNotification('Pièces jointes uploadées avec succès', 'success');\n                        \n                        // Décocher la case après un upload réussi\n                        const card = this.closest('.partner-card');\n                        const checkbox = card.querySelector('.partner-select');\n                        checkbox.checked = false;\n                        this.style.display = 'none';\n                        \n                    } catch (error) {\n                        showNotification('Erreur lors de l\\'upload des pièces jointes', 'error', {\n                            message: error.message\n                        });\n                    } finally {\n                        this.disabled = false;\n                        this.innerHTML = originalText;\n                    }\n                });\n            });\n        }\n        \n    } catch (error) {\n        showNotification('Erreur lors de la recherche', 'error', {\n            message: error.message\n        });\n    } finally {\n        button.disabled = false;\n        button.innerHTML = '<i class=\"ms-Icon ms-Icon--Search\"></i>Chercher le contact';\n    }\n});\n\n\ndocument.getElementById('save-to-crm').onclick = async function() {\n    const button = this;\n    const originalText = button.innerHTML;\n\n    try {\n        button.disabled = true;\n        button.innerHTML = '<i class=\"ms-Icon ms-Icon--Sync\"></i>Création en cours...';\n\n        const emailFrom = document.getElementById('sender-email').value.trim();\n        const senderName = document.getElementById('sender-name').value.trim();\n        const subject = document.getElementById('email-subject').value.trim();\n        const emailBody = document.getElementById('email-body').value;\n        const additionalNotes = document.getElementById('additional-notes').value.trim();\n\n        if (!emailFrom || !subject) {\n            throw new Error('L\\'email de l\\'expéditeur et le sujet sont requis');\n        }\n\n        const odoo = new OdooAPI();\n        \n        // Formatage du contenu pour préserver la mise en forme\n        let description = '<div style=\"font-family: Arial, sans-serif;\">';\n        description += emailBody.split('\\n').map(line => \n            `<p style=\"margin: 0 0 1em 0;\">${line.trim()}</p>`\n        ).join('');\n        description += '</div>';\n\n        if (additionalNotes) {\n            description += '<div style=\"margin: 30px 0;\">';\n            description += '<hr style=\"border: none; border-top: 1px solid #cccccc;\">';\n            description += '<h3>Notes additionnelles :</h3>';\n            description += '<hr style=\"border: none; border-top: 1px solid #cccccc;\">';\n            description += additionalNotes.split('\\n').map(line => \n                `<p style=\"margin: 0 0 1em 0;\">${line.trim()}</p>`\n            ).join('');\n            description += '</div>';\n        }\n\n        const result = await odoo.createLead(emailFrom, subject, description);\n\n        if (result.success) {\n            const settings = JSON.parse(localStorage.getItem('odooSettings'));\n            const odooUrl = settings.odooUrl;\n\n            showNotification(\n                'Lead créé avec succès dans Odoo',\n                'success',\n                {\n                    leadId: result.leadId,\n                    message: result.message,\n                    logs: result.details,\n                    odooUrl: odooUrl\n                }\n            );\n        } else {\n            throw new Error('Échec de la création du lead');\n        }\n\n    } catch (error) {\n        log('Erreur complète:', error);\n        \n        const errorDetails = {\n            message: error.message,\n            type: error.name,\n            details: error.details || {},\n            logs: error.logs || [],\n            stack: error.stack\n        };\n\n        showNotification(\n            'Erreur lors de la création du lead',\n            'error',\n            errorDetails\n        );\n\n    } finally {\n        button.disabled = false;\n        button.innerHTML = originalText;\n    }\n};\n\ndocument.getElementById('save-to-assistance').onclick = async function() {\n    const button = this;\n    const originalText = button.innerHTML;\n\n    try {\n        button.disabled = true;\n        button.innerHTML = '<i class=\"ms-Icon ms-Icon--Sync\"></i>Création en cours...';\n\n        const emailFrom = document.getElementById('sender-email').value.trim();\n        const senderName = document.getElementById('sender-name').value.trim();\n        const subject = document.getElementById('email-subject').value.trim();\n        const emailBody = document.getElementById('email-body').value;\n        const additionalNotes = document.getElementById('additional-notes').value.trim();\n\n        if (!emailFrom || !subject) {\n            throw new Error('L\\'email de l\\'expéditeur et le sujet sont requis');\n        }\n\n        const odoo = new OdooAPI();\n        \n        // Formatage du contenu\n        let description = '<div style=\"font-family: Arial, sans-serif;\">';\n        description += emailBody.split('\\n').map(line => \n            `<p style=\"margin: 0 0 1em 0;\">${line.trim()}</p>`\n        ).join('');\n        description += '</div>';\n\n        if (additionalNotes) {\n            description += '<div style=\"margin: 30px 0;\">';\n            description += '<hr style=\"border: none; border-top: 1px solid #cccccc;\">';\n            description += '<h3>Notes additionnelles :</h3>';\n            description += '<hr style=\"border: none; border-top: 1px solid #cccccc;\">';\n            description += additionalNotes.split('\\n').map(line => \n                `<p style=\"margin: 0 0 1em 0;\">${line.trim()}</p>`\n            ).join('');\n            description += '</div>';\n        }\n\n        const result = await odoo.createAssistanceTicket(emailFrom, subject, description);\n\n        if (result.success) {\n            const settings = JSON.parse(localStorage.getItem('odooSettings'));\n            const odooUrl = settings.odooUrl;\n\n            showNotification(\n                'Ticket d\\'assistance créé avec succès',\n                'success',\n                {\n                    ticketId: result.ticketId,\n                    message: result.message,\n                    logs: result.details,\n                    odooUrl: odooUrl\n                }\n            );\n        } else {\n            throw new Error('Échec de la création du ticket');\n        }\n\n    } catch (error) {\n        log('Erreur complète:', error);\n        \n        const errorDetails = {\n            message: error.message,\n            type: error.name,\n            details: error.details || {},\n            logs: error.logs || [],\n            stack: error.stack\n        };\n\n        showNotification(\n            'Erreur lors de la création du ticket',\n            'error',\n            errorDetails\n        );\n\n    } finally {\n        button.disabled = false;\n        button.innerHTML = originalText;\n    }\n};\n\nfunction setupFormValidation() {\n    const requiredFields = ['sender-email', 'email-subject'];\n    const saveButton = document.getElementById('save-to-crm');\n\n    function validateForm() {\n        const isValid = requiredFields.every(fieldId => {\n            const field = document.getElementById(fieldId);\n            return field && field.value.trim() !== '';\n        });\n\n        saveButton.disabled = !isValid;\n    }\n\n    // Ajouter les écouteurs d'événements pour les champs requis\n    requiredFields.forEach(fieldId => {\n        const field = document.getElementById(fieldId);\n        if (field) {\n            field.addEventListener('input', validateForm);\n            field.addEventListener('change', validateForm);\n        }\n    });\n\n    // Validation initiale\n    validateForm();\n}\n\n// Modification du gestionnaire de sauvegarde des réglages\ndocument.getElementById('save-settings').onclick = function() {\n    const settings = {\n        odooUrl: document.getElementById('odoo-url').value.trim(),\n        database: document.getElementById('database').value.trim(),\n        username: document.getElementById('username').value.trim(),\n        password: document.getElementById('password').value.trim()\n    };\n\n    log('Sauvegarde des réglages', {\n        hasUrl: !!settings.odooUrl,\n        hasDatabase: !!settings.database,\n        hasUsername: !!settings.username,\n        hasPassword: !!settings.password\n    });\n\n    if (!settings.odooUrl || !settings.database || !settings.username || !settings.password) {\n        showNotification('Veuillez remplir tous les champs', 'error');\n        return;\n    }\n\n    try {\n        localStorage.setItem('odooSettings', JSON.stringify(settings));\n        showNotification('Réglages sauvegardés avec succès !', 'success');\n    } catch (error) {\n        log('Erreur sauvegarde réglages', error);\n        showNotification('Erreur lors de la sauvegarde des réglages', 'error');\n    }\n};","// Imports\nvar ___HTML_LOADER_IMPORT_0___ = new URL(\"./taskpane.css\", import.meta.url);\n// Module\nvar code = \"<!DOCTYPE html> <html> <head> <meta charset=\\\"UTF-8\\\"/> <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=Edge\\\"/> <meta name=\\\"viewport\\\" content=\\\"width=device-width,initial-scale=1\\\"> <title>Odoo CRM Add-in</title> <\" + \"script src=\\\"https://appsforoffice.microsoft.com/lib/1/hosted/office.js\\\"><\" + \"/script> <link rel=\\\"stylesheet\\\" href=\\\"https://res-1.cdn.office.net/files/fabric-cdn-prod_20230815.002/office-ui-fabric-core/11.1.0/css/fabric.min.css\\\"/> <link href=\\\"\" + ___HTML_LOADER_IMPORT_0___ + \"\\\" rel=\\\"stylesheet\\\"/> </head> <body class=\\\"ms-font-m ms-welcome ms-Fabric\\\"> <div id=\\\"sideload-msg\\\"> <h2 class=\\\"ms-font-xl\\\">Veuillez charger votre add-in pour voir le contenu.</h2> </div> <nav class=\\\"nav-menu\\\"> <button id=\\\"nav-form\\\" class=\\\"nav-button nav-active\\\"> <i class=\\\"ms-Icon ms-Icon--Contact\\\" aria-hidden=\\\"true\\\"></i> Contact </button> </nav> <div class=\\\"nav-buttons\\\"> <button id=\\\"settings-button\\\" class=\\\"nav-icon-button\\\" title=\\\"Réglages\\\"> <i class=\\\"ms-Icon ms-Icon--Settings\\\"></i> </button> <button id=\\\"search-button\\\" class=\\\"nav-icon-button\\\" title=\\\"Rechercher\\\"> <i class=\\\"ms-Icon ms-Icon--Search\\\"></i> </button> <button id=\\\"back-button\\\" class=\\\"back-button\\\" title=\\\"Retour\\\"> <i class=\\\"ms-Icon ms-Icon--ChevronLeft\\\"></i> </button> </div> <div class=\\\"pages-container\\\"> <div id=\\\"app-body\\\" class=\\\"page\\\"> <div class=\\\"form-container\\\"> <div class=\\\"form-group\\\"> <label class=\\\"form-label\\\">Votre adresse email</label> <input type=\\\"email\\\" id=\\\"user-email\\\" class=\\\"form-control\\\" readonly=\\\"readonly\\\"> </div> <div class=\\\"form-group\\\"> <label for=\\\"sender-name\\\">Nom de l'expéditeur</label> <input type=\\\"text\\\" id=\\\"sender-name\\\" class=\\\"form-control\\\"/> </div> <div class=\\\"form-group\\\"> <label class=\\\"form-label\\\">Email de l'expéditeur</label> <input type=\\\"email\\\" id=\\\"sender-email\\\" class=\\\"form-control\\\" required> </div> <div class=\\\"form-group phone-input-group\\\"> <label for=\\\"phone-number\\\">Numéro de téléphone</label> <div class=\\\"phone-input-container\\\"> <input type=\\\"text\\\" id=\\\"phone-number\\\" class=\\\"form-control\\\" placeholder=\\\"Entrez un numéro\\\"/> <select id=\\\"phone-select\\\" class=\\\"form-control\\\"> <option value=\\\"\\\">Numéros détectés</option> </select> </div> </div> <div class=\\\"form-group\\\"> <label class=\\\"form-label\\\">Sujet</label> <input type=\\\"text\\\" id=\\\"email-subject\\\" class=\\\"form-control\\\" required> </div> <div class=\\\"form-group\\\"> <label class=\\\"form-label\\\">Contenu du message</label> <textarea id=\\\"email-body\\\" class=\\\"form-control\\\" rows=\\\"6\\\" readonly=\\\"readonly\\\"></textarea> </div> <div class=\\\"form-group\\\"> <label class=\\\"form-label\\\">Notes additionnelles</label> <textarea id=\\\"additional-notes\\\" class=\\\"form-control\\\" rows=\\\"4\\\" placeholder=\\\"Ajoutez vos notes ici...\\\"></textarea> </div> <div class=\\\"section\\\"> <h3>Pièces jointes</h3> <div id=\\\"attachments-list\\\"></div> </div> <button id=\\\"save-to-crm\\\" class=\\\"submit-btn\\\"> <i class=\\\"ms-Icon ms-Icon--Save\\\"></i> Enregistrer dans le CRM </button> <button id=\\\"save-to-assistance\\\" class=\\\"submit-btn assistance-btn\\\"> <i class=\\\"ms-Icon ms-Icon--Repairs\\\"></i> Enregistrer dans Assistance </button> </div> </div> <div id=\\\"search-page\\\" class=\\\"page\\\"> <div class=\\\"search-container\\\"> <div class=\\\"search-criteria\\\"> <div class=\\\"criteria-group\\\"> <label class=\\\"checkbox-label\\\"> <input type=\\\"checkbox\\\" id=\\\"search-email-checkbox\\\" checked=\\\"checked\\\"> Rechercher par email </label> <div class=\\\"form-group\\\" id=\\\"email-search-group\\\"> <label class=\\\"form-label\\\">Email de l'expéditeur</label> <input type=\\\"email\\\" id=\\\"search-sender-email\\\" class=\\\"form-control\\\" required> </div> </div> <div class=\\\"criteria-group\\\"> <label class=\\\"checkbox-label\\\"> <input type=\\\"checkbox\\\" id=\\\"search-phone-checkbox\\\"> Rechercher par téléphone </label> <div class=\\\"form-group phone-input-group\\\" id=\\\"phone-search-group\\\"> <label for=\\\"search-phone-number\\\">Numéro de téléphone</label> <div class=\\\"phone-input-container\\\"> <input type=\\\"text\\\" id=\\\"search-phone-number\\\" class=\\\"form-control\\\" placeholder=\\\"Entrez un numéro\\\"/> <select id=\\\"search-phone-select\\\" class=\\\"form-control\\\"> <option value=\\\"\\\">Numéros détectés</option> </select> </div> </div> </div> </div> <button id=\\\"search-contact-btn\\\" class=\\\"submit-btn\\\"> <i class=\\\"ms-Icon ms-Icon--Search\\\"></i> Chercher le contact </button> <div id=\\\"search-results\\\" class=\\\"search-results\\\"> </div> </div> </div> <div id=\\\"settings-page\\\" class=\\\"page\\\"> <div class=\\\"form-container\\\"> <div class=\\\"header\\\"> <h2>Réglages de connexion Odoo</h2> </div> <div class=\\\"form-group\\\"> <label class=\\\"form-label\\\">URL du serveur Odoo</label> <input type=\\\"text\\\" id=\\\"odoo-url\\\" class=\\\"form-control\\\" placeholder=\\\"https://votre-instance.odoo.com\\\"/> </div> <div class=\\\"form-group\\\"> <label class=\\\"form-label\\\">Base de données</label> <input type=\\\"text\\\" id=\\\"database\\\" class=\\\"form-control\\\" placeholder=\\\"nom_de_la_base\\\"/> </div> <div class=\\\"form-group\\\"> <label class=\\\"form-label\\\">Nom d'utilisateur</label> <input type=\\\"text\\\" id=\\\"username\\\" class=\\\"form-control\\\" placeholder=\\\"utilisateur@exemple.com\\\"/> </div> <div class=\\\"form-group\\\"> <label class=\\\"form-label\\\">Mot de passe</label> <div class=\\\"password-container\\\"> <input type=\\\"password\\\" id=\\\"password\\\" class=\\\"form-control\\\"/> <button type=\\\"button\\\" id=\\\"toggle-password\\\" class=\\\"toggle-password\\\"> <i class=\\\"ms-Icon ms-Icon--RedEye\\\"></i> </button> </div> </div> <div class=\\\"mb-3\\\"> <button id=\\\"test-connection\\\" class=\\\"submit-btn\\\"> <i class=\\\"ms-Icon ms-Icon--PlugConnected\\\"></i> Tester la connexion </button> </div> <div> <button id=\\\"save-settings\\\" class=\\\"submit-btn\\\"> <i class=\\\"ms-Icon ms-Icon--Save\\\"></i> Sauvegarder les réglages </button> </div> </div> </div> </div> </body></html>\";\n// Exports\nexport default code;"],"names":["__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","g","globalThis","this","Function","e","window","o","obj","prop","Object","prototype","hasOwnProperty","call","scriptUrl","importScripts","location","document","currentScript","tagName","toUpperCase","src","scripts","getElementsByTagName","length","i","test","Error","replace","p","b","baseURI","self","href","_regeneratorRuntime","t","r","n","defineProperty","value","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","d","getPrototypeOf","v","values","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","log","message","data","timestamp","Date","toISOString","logMessage","concat","console","group","stack","groupEnd","Office","onReady","info","host","HostType","Outlook","getElementById","style","display","_callee","_context","loadEmailData","loadUserEmailData","loadSavedSettings","setupPasswordToggle","setupFormValidation","t0","createElement","extractPhoneNumbers","text","countDigits","str","match","formatPhoneNumber","phone","cleaned","trim","startsWith","substring","formatted","digitCount","phones","Map","_i","_phonePatterns","_step","pattern","_iterator","_createForOfIteratorHelper","matchAll","phoneInfo","has","set","err","Array","from","populatePhoneSelect","phoneSelect","phoneInput","options","remove","index","option","textContent","appendChild","createEmailEml","_createEmailEml","_callee19","item","subject","receivedTime","bodyResult","emlContent","encoder","bytes","base64","safeSubject","fileName","_context20","context","mailbox","sender","emailAddress","dateTimeCreated","reject","body","getAsync","CoercionType","Text","result","status","AsyncResultStatus","Succeeded","join","TextEncoder","encode","btoa","String","fromCharCode","datas","mimetype","displayAttachments","attachmentList","_x","_loadAttachments","loadAttachments","error","showNotification","setupPhoneInputs","addEventListener","target","extractEmails","_step2","emails","_iterator2","email","toLowerCase","isPriority","split","includes","sort","localeCompare","populateEmailSelect","emailSelect","emailInput","emailInfo","priority","_callee20","attachmentIndex","attachments","_iterator7","_step7","attachment","content","attachmentItem","attachmentData","tempDiv","images","_iterator8","_step8","img","_item","_context21","innerHTML","attachmentsToUpload","filter","isInline","contentType","getAttachmentContent","id","createImageAttachmentItem","createAttachmentItem","t1","Html","asyncContext","asyncResult","getAttribute","t2","div","className","_loadEmailData","_callee21","emlAttachment","_iterator9","_step9","attachmentsList","fullText","senderEmail","senderName","_context22","updateProgress","res_model","size","t3","cleanEmail","progressDiv","cssText","head","createProgressDiv","fileProgress","querySelector","dataset","file","createFileProgress","setTimeout","attachmentId","getAttachmentContentAsync","userProfile","userEmail","savedSettings","localStorage","getItem","settings","JSON","parse","hasUrl","odooUrl","hasDatabase","database","hasUsername","username","hasPassword","password","passwordInput","toggleButton","icon","classList","OdooAPI","_classCallCheck","getSettings","db","worker_url","maxRetries","retryDelay","key","url","_retryRequest","_callee2","fn","_loop","_ret","_this","_context3","_context2","_x5","unsafe","_createLead","_callee3","emailFrom","description","userId","phoneNumber","cleanData","leadResponse","leadResponseText","leadId","checkedAttachments","_iterator4","_step4","checkbox","attachmentResponse","attachmentResult","_context4","getUserId","escapeXml","email_from","user_id","active","company_id","stage_id","contact_name","fetchWithTimeout","headers","buildHeaders","stringify","odoo_url","lead_data","success","lead_id","querySelectorAll","parseInt","attachment_data","res_id","json","attachment_id","details","_x6","_x7","_x8","_createAssistanceTicket","_callee4","ticketResponse","ticketResponseText","ticketId","_iterator5","_step5","_context5","partner_email","partner_name","partner_phone","ticket_data","ticket_id","_x9","_x10","_x11","_createAttachment","_callee5","finalAttachmentData","response","_context6","model","_objectSpread","resId","_x12","_getUserId","_callee6","_context7","ok","_uploadLargeAttachment","_callee7","CHUNK_SIZE","totalChunks","start","end","chunk","isLastChunk","chunkResponse","_context8","Math","ceil","totalSize","chunks","min","chunk_index","total_chunks","is_last_chunk","round","_x13","_x14","_testServerConnection","_callee9","_this2","_context10","retryRequest","_callee8","_data$details","_data$details2","errorData","versionInfo","_context9","login_response","extractVersionInfo","version_response","version","responses","handleError","_searchPartners","_callee10","searchCriteria","_context11","search_criteria","partners","_x15","xmlResponse","versionMatch","serieMatch","serie","_init","_callee11","testResult","_context12","validateCredentials","formatOdooUrl","testServerConnection","_fetchWithTimeout","_callee12","timeout","controller","_args13","_context13","AbortController","abort","fetch","signal","clearTimeout","_x16","_x17","customMessage","notification","messageEl","opportunityLink","detailsEl","errorMessage","logs","logsEl","logEntry","stackEl","switchPage","pageId","mainPage","settingsPage","searchPage","add","requiredFields","saveButton","validateForm","isValid","every","fieldId","field","disabled","onclick","_callee13","button","odoo","serverTest","_context14","setItem","_callee14","_context15","_callee16","resultsContainer","emailChecked","phoneChecked","cardsContainer","_context17","checked","searchPartners","partner","card","street","zip","city","closest","_callee15","partnerId","originalText","_odoo","_iterator6","_step6","_context16","createAttachment","_callee17","emailBody","additionalNotes","_context18","map","line","createLead","_callee18","_context19","createAssistanceTicket","URL"],"sourceRoot":""}