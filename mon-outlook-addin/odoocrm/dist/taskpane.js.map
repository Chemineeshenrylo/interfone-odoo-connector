{"version":3,"file":"taskpane.js","mappings":"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","sources":["webpack://office-addin-taskpane-js/webpack/bootstrap","webpack://office-addin-taskpane-js/webpack/runtime/global","webpack://office-addin-taskpane-js/webpack/runtime/hasOwnProperty shorthand","webpack://office-addin-taskpane-js/webpack/runtime/publicPath","webpack://office-addin-taskpane-js/webpack/runtime/jsonp chunk loading","webpack://office-addin-taskpane-js/./src/taskpane/taskpane.js","webpack://office-addin-taskpane-js/./src/taskpane/taskpane.html"],"sourcesContent":["// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/^blob:/, \"\").replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t926: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","// Fonction de logging améliorée\nfunction log(message, data = null) {\n    const timestamp = new Date().toISOString();\n    const logMessage = `[${timestamp}] ${message}`;\n    \n    if (data) {\n        console.group(logMessage);\n        console.log('Détails:', data);\n        if (data instanceof Error) {\n            console.log('Stack:', data.stack);\n        }\n        console.groupEnd();\n    } else {\n        console.log(logMessage);\n    }\n}\n\n// Initialisation\nOffice.onReady((info) => {\n    log('Office.onReady appelé', info);\n    if (info.host === Office.HostType.Outlook) {\n        log('Application démarrée dans Outlook');\n        document.getElementById(\"sideload-msg\").style.display = \"none\";\n        document.getElementById(\"app-body\").style.display = \"block\";\n        \n        // Utiliser une IIFE async pour pouvoir utiliser await\n        (async () => {\n            try {\n                await loadEmailData();\n                loadUserEmailData();\n                loadSavedSettings();\n                setupPasswordToggle();\n                setupFormValidation();\n            } catch (error) {\n                log('Erreur lors du chargement initial:', error);\n            }\n        })();\n    }\n});\n\n// Chargement des données email\n// Modification de loadEmailData pour utiliser le formatage\n// Fonction pour détecter les numéros de téléphone\nconst style = document.createElement('style');\nstyle.textContent = `\n    .phone-input-container {\n        position: relative;\n        display: flex;\n        gap: 8px;\n    }\n    \n    #phone-number {\n        flex: 1;\n        padding: 8px;\n        border: 1px solid #ddd;\n        border-radius: 4px;\n    }\n    \n    #phone-select {\n        width: auto;\n        min-width: 120px;\n        padding: 8px;\n        border: 1px solid #ddd;\n        border-radius: 4px;\n        background-color: #f8f9fa;\n    }\n`;\ndocument.head.appendChild(style);\n\n\nfunction extractPhoneNumbers(text) {\n    // Fonction utilitaire pour compter les chiffres\n    function countDigits(str) {\n        return (str.match(/\\d/g) || []).length;\n    }\n\n    const phonePatterns = [\n        // Format international avec + ou 00\n        /(?:\\+|00)[1-9]\\d{1,3}[- .]?\\d(?:[- .]?\\d){4,14}/g,\n        \n        // Formats standard (minimum 6 chiffres)\n        /\\d(?:[- .]?\\d){5,14}/g\n    ];\n\n    function formatPhoneNumber(phone) {\n        // Vérifier d'abord si le numéro a au moins 6 chiffres\n        if (countDigits(phone) < 6) {\n            return null;\n        }\n\n        // Nettoyer légèrement le numéro tout en gardant le + et les espaces de formatage\n        let cleaned = phone.trim()\n            .replace(/[\\(\\)]/g, '') // Enlever les parenthèses\n            .replace(/[-\\.]/g, ' ') // Remplacer les points et tirets par des espaces\n            .replace(/\\s+/g, ' ');  // Normaliser les espaces\n\n        // Si le numéro commence par 00, le remplacer par +\n        if (cleaned.startsWith('00')) {\n            cleaned = '+' + cleaned.slice(2);\n        }\n\n        return {\n            formatted: cleaned,\n            digitCount: countDigits(cleaned)\n        };\n    }\n\n    let phones = new Map();\n\n    for (let pattern of phonePatterns) {\n        const matches = text.matchAll(pattern);\n        for (const match of matches) {\n            const phoneInfo = formatPhoneNumber(match[0]);\n            if (phoneInfo && phoneInfo.digitCount >= 6) {\n                if (!phones.has(phoneInfo.formatted)) {\n                    phones.set(phoneInfo.formatted, phoneInfo);\n                }\n            }\n        }\n    }\n\n    return Array.from(phones.values());\n}\n\nfunction populatePhoneSelect(phones) {\n    const phoneSelect = document.getElementById('phone-select');\n    const phoneInput = document.getElementById('phone-number');\n    \n    // Vider le select sauf l'option par défaut\n    while (phoneSelect.options.length > 1) {\n        phoneSelect.remove(1);\n    }\n\n    // Ajouter les numéros trouvés\n    phones.forEach((phoneInfo, index) => {\n        const option = document.createElement('option');\n        option.value = phoneInfo.formatted;\n        option.textContent = `Numéro ${index + 1}: ${phoneInfo.formatted}`;\n        phoneSelect.appendChild(option);\n    });\n\n    // Si des numéros ont été trouvés, remplir l'input avec le premier\n    if (phones.length > 0) {\n        phoneInput.value = phones[0].formatted;\n    }\n}\n\nfunction displayAttachments(attachments) {\n    const attachmentsContainer = document.getElementById('attachments-list');\n    if (!attachmentsContainer) return;\n    \n    // Vider le conteneur\n    attachmentsContainer.innerHTML = '';\n    \n    if (!attachments || attachments.length === 0) {\n        attachmentsContainer.innerHTML = '<p class=\"no-attachments\">Aucune pièce jointe</p>';\n        return;\n    }\n    \n    // Créer la liste des pièces jointes\n    const list = document.createElement('ul');\n    list.className = 'attachments-list';\n    \n    attachments.forEach((attachment, index) => {\n        const item = document.createElement('li');\n        item.className = 'attachment-item';\n        \n        // Formater la taille du fichier\n        const size = formatFileSize(attachment.size);\n        \n        item.innerHTML = `\n            <div class=\"attachment-info\">\n                <span class=\"attachment-name\">${attachment.name}</span>\n                <span class=\"attachment-size\">${size}</span>\n            </div>\n        `;\n        \n        list.appendChild(item);\n    });\n    \n    attachmentsContainer.appendChild(list);\n    \n    // Ajouter les styles\n    const style = document.createElement('style');\n    style.textContent = `\n        .attachments-list {\n            list-style: none;\n            padding: 0;\n            margin: 0;\n        }\n        \n        .attachment-item {\n            padding: 8px;\n            border: 1px solid #ddd;\n            margin-bottom: 8px;\n            border-radius: 4px;\n            background-color: #f8f9fa;\n        }\n        \n        .attachment-info {\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n        }\n        \n        .attachment-name {\n            font-weight: 500;\n            color: #333;\n        }\n        \n        .attachment-size {\n            color: #666;\n            font-size: 0.9em;\n        }\n        \n        .no-attachments {\n            color: #666;\n            font-style: italic;\n            text-align: center;\n            padding: 10px;\n        }\n    `;\n    document.head.appendChild(style);\n}\n\nfunction formatFileSize(bytes) {\n    if (bytes === 0) return '0 B';\n    const k = 1024;\n    const sizes = ['B', 'KB', 'MB', 'GB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n}\n\nfunction setupPhoneInputs() {\n    const phoneInput = document.getElementById('phone-number');\n    const phoneSelect = document.getElementById('phone-select');\n\n    // Gérer le changement dans le select\n    phoneSelect.addEventListener('change', (e) => {\n        if (e.target.value) {\n            phoneInput.value = e.target.value;\n        }\n    });\n\n    // Permettre la saisie libre\n    phoneInput.addEventListener('input', (e) => {\n        let value = e.target.value;\n        // Permettre +, espaces et chiffres\n        value = value.replace(/[^\\d+\\s]/g, '');\n        e.target.value = value;\n    });\n}\n\nfunction extractEmails(text) {\n    // Regex pour détecter les emails\n    const emailPattern = /[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}/g;\n    const emails = new Map();\n    \n    const matches = text.matchAll(emailPattern);\n    for (const match of matches) {\n        const email = match[0].toLowerCase().trim();\n        if (!emails.has(email)) {\n            // Vérifier si le domaine contient \"cheminees\"\n            const domain = email.split('@')[1];\n            const isPriority = !domain.includes('cheminees');\n            emails.set(email, {\n                email: email,\n                isPriority: isPriority\n            });\n        }\n    }\n    \n    // Trier les emails: prioritaires d'abord, puis par ordre alphabétique\n    return Array.from(emails.values()).sort((a, b) => {\n        if (a.isPriority !== b.isPriority) {\n            return a.isPriority ? -1 : 1;\n        }\n        return a.email.localeCompare(b.email);\n    });\n}\n\nfunction populateEmailSelect(emails) {\n    const emailSelect = document.getElementById('email-select');\n    const emailInput = document.getElementById('sender-email');\n    \n    // Vider le select sauf l'option par défaut\n    while (emailSelect.options.length > 1) {\n        emailSelect.remove(1);\n    }\n\n    // Ajouter les emails trouvés\n    emails.forEach((emailInfo, index) => {\n        const option = document.createElement('option');\n        option.value = emailInfo.email;\n        const priority = emailInfo.isPriority ? '🔵' : '⚪';\n        option.textContent = `${priority} Email ${index + 1}: ${emailInfo.email}`;\n        emailSelect.appendChild(option);\n    });\n\n    // Si des emails ont été trouvés, remplir l'input avec le premier\n    if (emails.length > 0) {\n        emailInput.value = emails[0].email;\n    }\n}\n\nfunction setupEmailInputs() {\n    const emailInput = document.getElementById('sender-email');\n    const emailSelect = document.getElementById('email-select');\n\n    // Gérer le changement dans le select\n    emailSelect.addEventListener('change', (e) => {\n        if (e.target.value) {\n            emailInput.value = e.target.value;\n        }\n    });\n\n    // Permettre la saisie libre avec validation basique d'email\n    emailInput.addEventListener('input', (e) => {\n        let value = e.target.value;\n        // Permettre caractères valides pour email\n        value = value.replace(/[^\\w@.-]/g, '');\n        e.target.value = value;\n    });\n}\n\nasync function loadEmailData() {\n    log('Chargement des données de l\\'email');\n    const item = Office.context.mailbox.item;\n    \n    if (item) {\n        setupPhoneInputs();\n\n        if (item.attachments && item.attachments.length > 0) {\n            log('Nombre de pièces jointes trouvées:', item.attachments.length);\n            \n            window.attachmentsToUpload = [];\n            \n            for (const attachment of item.attachments) {\n                if (attachment.isInline) continue;\n                \n                try {\n                    updateProgress(attachment.name, 'progress', 'Récupération en cours...');\n\n                    // Utiliser l'API EWS directement\n                    const content = await getAttachmentContent(attachment.id);\n\n                    window.attachmentsToUpload.push({\n                        name: attachment.name,\n                        datas: content,\n                        mimetype: attachment.contentType || 'application/octet-stream',\n                        res_model: 'crm.lead',\n                        type: 'binary'\n                    });\n\n                    updateProgress(attachment.name, 'success');\n                    log('Pièce jointe préparée:', {\n                        name: attachment.name,\n                        type: attachment.contentType,\n                        size: attachment.size\n                    });\n                } catch (error) {\n                    log('Erreur lors du traitement de la pièce jointe:', error);\n                    updateProgress(attachment.name, 'error', error.message);\n                }\n            }\n\n            displayAttachments(item.attachments.filter(a => !a.isInline));\n            log('Pièces jointes préparées:', window.attachmentsToUpload.length);\n        }else {\n            log('Aucune pièce jointe trouvée');\n            displayAttachments([]);\n            window.attachmentsToUpload = [];\n        }\n\n\n\n        // Traitement du corps du message de manière asynchrone\n        try {\n            const bodyResult = await new Promise((resolve, reject) => {\n                item.body.getAsync(Office.CoercionType.Text, (result) => {\n                    if (result.status === Office.AsyncResultStatus.Succeeded) {\n                        resolve(result);\n                    } else {\n                        reject(new Error('Échec du chargement du corps du message'));\n                    }\n                });\n            });\n\n            const fullText = bodyResult.value;\n            document.getElementById('email-body').value = fullText;\n\n            // Détecter les numéros de téléphone et emails\n            const phones = extractPhoneNumbers(fullText);\n            log('Numéros de téléphone détectés:', phones);\n            populatePhoneSelect(phones);\n\n            const emails = extractEmails(fullText);\n            log('Emails détectés:', emails);\n            populateEmailSelect(emails);\n\n        } catch (error) {\n            log('Erreur lors du chargement du corps du message:', error);\n        }\n\n        // Traitement de l'expéditeur\n        if (item.sender) {\n            let senderEmail = item.sender.emailAddress;\n            let senderName = item.sender.displayName;\n\n            senderEmail = cleanEmail(senderEmail);\n            senderName = senderName || senderEmail.split('@')[0];\n\n            document.getElementById('sender-name').value = senderName;\n            document.getElementById('sender-email').value = senderEmail;\n        }\n\n        // Chargement du sujet\n        const subject = item.subject || '';\n        document.getElementById('email-subject').value = subject;\n    }\n}\n\n\n\nfunction updateProgress(fileName, status, message = '') {\n    const progressDiv = document.getElementById('progress-container') || createProgressDiv();\n    const fileProgress = progressDiv.querySelector(`[data-file=\"${fileName}\"]`) || createFileProgress(fileName);\n\n    switch (status) {\n        case 'progress':\n            fileProgress.className = 'file-progress progress';\n            fileProgress.innerHTML = `\n                <span class=\"filename\">${fileName}</span>\n                <span class=\"status\">${message}</span>\n                <div class=\"spinner\"></div>\n            `;\n            break;\n        case 'success':\n            fileProgress.className = 'file-progress success';\n            fileProgress.innerHTML = `\n                <span class=\"filename\">${fileName}</span>\n                <span class=\"status\">Traitement terminé ✓</span>\n            `;\n            setTimeout(() => fileProgress.remove(), 3000);\n            break;\n        case 'error':\n            fileProgress.className = 'file-progress error';\n            fileProgress.innerHTML = `\n                <span class=\"filename\">${fileName}</span>\n                <span class=\"status\">Erreur: ${message}</span>\n            `;\n            break;\n    }\n}\n\nfunction createProgressDiv() {\n    const div = document.createElement('div');\n    div.id = 'progress-container';\n    div.style.cssText = `\n        position: fixed;\n        bottom: 20px;\n        right: 20px;\n        width: 300px;\n        max-height: 80vh;\n        overflow-y: auto;\n        z-index: 1000;\n    `;\n    \n    const style = document.createElement('style');\n    style.textContent = `\n        .file-progress {\n            margin: 10px;\n            padding: 10px;\n            border-radius: 4px;\n            background: #f8f9fa;\n            border: 1px solid #ddd;\n            box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n        }\n        .file-progress.progress {\n            background: #e8f4f8;\n            border-color: #b8daff;\n        }\n        .file-progress.success {\n            background: #d4edda;\n            border-color: #c3e6cb;\n        }\n        .file-progress.error {\n            background: #f8d7da;\n            border-color: #f5c6cb;\n        }\n        .filename {\n            display: block;\n            font-weight: bold;\n            margin-bottom: 5px;\n            word-break: break-all;\n        }\n        .status {\n            display: block;\n            font-size: 0.9em;\n            color: #666;\n        }\n        .spinner {\n            margin-top: 5px;\n            width: 20px;\n            height: 20px;\n            border: 2px solid #ccc;\n            border-top-color: #007bff;\n            border-radius: 50%;\n            animation: spin 1s linear infinite;\n        }\n        @keyframes spin {\n            to { transform: rotate(360deg); }\n        }\n    `;\n    document.head.appendChild(style);\n    document.body.appendChild(div);\n    return div;\n}\n\nfunction createFileProgress(fileName) {\n    const div = document.createElement('div');\n    div.className = 'file-progress';\n    div.dataset.file = fileName;\n    document.getElementById('progress-container').appendChild(div);\n    return div;\n}\n\nfunction getRestToken() {\n    return new Promise((resolve, reject) => {\n        Office.context.mailbox.getCallbackTokenAsync({isRest: true}, function(result) {\n            if (result.status === Office.AsyncResultStatus.Succeeded) {\n                resolve(result.value);\n            } else {\n                reject(new Error('Impossible d\\'obtenir le token REST'));\n            }\n        });\n    });\n}\n\n// Fonction pour obtenir une pièce jointe via l'API REST\nasync function getAttachmentViaRest(token, itemId, attachmentId) {\n    const response = await fetch(\n        `https://outlook.office.com/api/v2.0/me/messages/${itemId}/attachments/${attachmentId}/$value`,\n        {\n            headers: {\n                'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json'\n            }\n        }\n    );\n\n    if (!response.ok) {\n        throw new Error(`Erreur HTTP: ${response.status}`);\n    }\n\n    // Convertir la réponse en base64\n    const blob = await response.blob();\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onloadend = () => {\n            const base64data = reader.result.split(',')[1];\n            resolve(base64data);\n        };\n        reader.onerror = reject;\n        reader.readAsDataURL(blob);\n    });\n}\n\n// Fonction pour obtenir une pièce jointe via la méthode standard\nfunction getAttachmentContent(attachmentId) {\n    return new Promise((resolve, reject) => {\n        Office.context.mailbox.item.getAttachmentContentAsync(attachmentId, (result) => {\n            if (result.status === Office.AsyncResultStatus.Succeeded) {\n                resolve(result.value.content);\n            } else {\n                reject(new Error(`Échec de récupération de la pièce jointe: ${result.error.message}`));\n            }\n        });\n    });\n}\n\n\nfunction cleanEmail(email) {\n    if (!email) return '';\n    \n    // Enlever le \"<mailto:\" et \">\" si présent\n    email = email.replace(/<mailto:/g, '').replace(/>/g, '');\n    \n    // Enlever les espaces\n    email = email.trim();\n    \n    // Si l'email est répété, prendre la première occurrence\n    if (email.includes(' ')) {\n        email = email.split(' ')[0];\n    }\n    \n    return email;\n}\n\n\nfunction getDomainFromEmail(email) {\n    return email.split('@')[1].toLowerCase();\n}\n\n\n\nfunction cleanName(name) {\n    if (!name) return '';\n    \n    // Convertir en string si ce n'est pas déjà le cas\n    name = String(name);\n    \n    // Nettoyage plus agressif\n    name = name\n        // Enlever tous les \":\" et espaces au début\n        .replace(/^[:\\s]+/, '')\n        // Enlever tous les \":\" et espaces à la fin\n        .replace(/[:\\s]+$/, '')\n        // Enlever les guillemets\n        .replace(/[\"']/g, '')\n        // Enlever les caractères spéciaux et les espaces multiples\n        .replace(/[^\\w\\sÀ-ÿ-]/g, ' ')\n        // Remplacer les espaces multiples par un seul espace\n        .replace(/\\s+/g, ' ')\n        // Nettoyer les espaces au début et à la fin\n        .trim();\n\n    // Log du résultat du nettoyage\n    log('Nettoyage du nom:', {\n        avant: String(arguments[0]),\n        après: name\n    });\n    \n    return name;\n}\n\n\nfunction parseEmailText(text) {\n    const emails = [];\n    \n    // Diviser par les marqueurs \"De :\" ou \"From :\"\n    const segments = text.split(/(?:\\r?\\n|\\r)(?:De |From :)/).filter(Boolean);\n    \n    segments.forEach(segment => {\n        const lines = segment.split(/\\r?\\n|\\r/);\n        let currentEmail = {\n            name: '',\n            from: '',\n            subject: '',\n            content: []\n        };\n        \n        let isHeader = true;\n        let contentStarted = false;\n        \n        for (let line of lines) {\n            line = line.trim();\n            \n            if (!line) continue;\n            \n            // Traitement des en-têtes\n            if (isHeader) {\n                if (line.startsWith('From:') || line.includes('<')) {\n                    const emailMatch = line.match(/<([^>]+@[^>]+)>/);\n                    if (emailMatch) {\n                        currentEmail.from = emailMatch[1];\n                        currentEmail.name = line.split('<')[0].trim();\n                    }\n                } else if (line.startsWith('Subject:') || line.startsWith('Objet:')) {\n                    currentEmail.subject = line.replace(/^(Subject:|Objet:)/, '').trim();\n                    isHeader = false;\n                } else if (line.match(/^[\\w\\s.]+@[\\w\\s.]+\\.\\w+$/)) {\n                    currentEmail.from = line;\n                } else if (!line.match(/^(À|To|Date|Envoyé|Sent):/)) {\n                    contentStarted = true;\n                    isHeader = false;\n                }\n            }\n            \n            // Contenu de l'email\n            if (!isHeader && contentStarted && !line.match(/^(De|From|À|To|Date|Envoyé|Sent):/)) {\n                currentEmail.content.push(line);\n            }\n        }\n        \n        if (currentEmail.content.length > 0) {\n            currentEmail.content = currentEmail.content.join('\\n').trim();\n            emails.push(currentEmail);\n        }\n    });\n    \n    log('Segments d\\'email analysés:', emails);\n    return emails;\n}\n\n\n\nfunction formatEmailContent(emailBody) {\n    if (!emailBody) return '';\n    \n    // Convertir les caractères encodés en HTML\n    let cleanedContent = emailBody\n        .replace(/=3D/g, '=')\n        .replace(/=C3=A9/g, 'é')\n        .replace(/=C3=A8/g, 'è')\n        .replace(/=C3=A0/g, 'à')\n        .replace(/=C3=AB/g, 'ë')\n        .replace(/=C3=BB/g, 'û')\n        .replace(/=C3=B4/g, 'ô')\n        .replace(/=C3=AE/g, 'î')\n        .replace(/=C3=A2/g, 'â')\n        .replace(/&nbsp;/g, ' ');\n\n    // Préserver les sauts de ligne spécifiques aux emails\n    cleanedContent = cleanedContent\n        // Remplacer <div><br></div> par un marqueur spécial\n        .replace(/<div><br><\\/div>|<div><br\\/><\\/div>|<br>|<br\\/>/g, '[[LINEBREAK]]')\n        // Gérer les divs avec du contenu\n        .replace(/<div>(.*?)<\\/div>/g, '$1\\n')\n        // Nettoyer les autres balises HTML\n        .replace(/<[^>]+>/g, '')\n        // Nettoyer les caractères spéciaux restants\n        .replace(/\\r\\n|\\r|\\n/g, '\\n')\n        .trim();\n\n    // Convertir les marqueurs de saut de ligne en paragraphes HTML\n    let paragraphs = cleanedContent\n        .split('[[LINEBREAK]]')\n        .map(p => p.trim())\n        .filter(p => p !== '');\n\n    // Reconstruire le HTML avec la structure appropriée\n    cleanedContent = '<div style=\"white-space: pre-line; font-family: Arial, sans-serif;\">';\n    \n    // Ajouter chaque paragraphe avec un espacement approprié\n    paragraphs.forEach((paragraph, index) => {\n        cleanedContent += `<p style=\"margin: 0; padding: 8px 0;\">${paragraph}</p>`;\n        // Ajouter un espace entre les paragraphes\n        if (index < paragraphs.length - 1) {\n            cleanedContent += '<div style=\"height: 12px;\"></div>';\n        }\n    });\n\n    cleanedContent += '</div>';\n\n    // Ajouter les notes additionnelles si présentes\n    if (cleanedContent.includes('Notes additionnelles')) {\n        cleanedContent = cleanedContent.replace(\n            /(Notes additionnelles.*?<\\/p>)/,\n            '<div style=\"margin: 30px 0;\">' +\n            '<hr style=\"border: none; border-top: 1px solid #cccccc;\">' +\n            '<h3>$1</h3>' +\n            '<hr style=\"border: none; border-top: 1px solid #cccccc;\">' +\n            '</div>'\n        );\n    }\n\n    return cleanedContent;\n}\n\nfunction loadUserEmailData() {\n    log('Chargement des données de l\\'utilisateur');\n    const userProfile = Office.context.mailbox.userProfile;\n    if (userProfile) {\n        const userEmail = userProfile.emailAddress;\n        document.getElementById('user-email').value = userEmail;\n        log('Email de l\\'utilisateur chargé:', userEmail);\n    } else {\n        log('Profil utilisateur non disponible');\n    }\n}\n\n// Modification de la fonction de chargement des réglages\nfunction loadSavedSettings() {\n    log('Chargement des réglages sauvegardés');\n    try {\n        const savedSettings = localStorage.getItem('odooSettings');\n        if (savedSettings) {\n            const settings = JSON.parse(savedSettings);\n            log('Réglages trouvés', {\n                hasUrl: !!settings.odooUrl,\n                hasDatabase: !!settings.database,\n                hasUsername: !!settings.username,\n                hasPassword: !!settings.password\n            });\n            \n            document.getElementById('odoo-url').value = settings.odooUrl || '';\n            document.getElementById('database').value = settings.database || '';\n            document.getElementById('username').value = settings.username || '';\n            document.getElementById('password').value = settings.password || '';\n        } else {\n            log('Aucun réglage sauvegardé trouvé');\n        }\n    } catch (error) {\n        log('Erreur lors du chargement des réglages', error);\n    }\n}\n\n// Modification de la fonction de configuration du toggle password\nfunction setupPasswordToggle() {\n    const passwordInput = document.getElementById('password');\n    const toggleButton = document.getElementById('toggle-password');\n\n    if (passwordInput && toggleButton) {\n        toggleButton.addEventListener('click', () => {\n            const type = passwordInput.type === 'password' ? 'text' : 'password';\n            passwordInput.type = type;\n            \n            // Changer l'icône\n            const icon = toggleButton.querySelector('i');\n            if (type === 'password') {\n                icon.classList.replace('ms-Icon--Hide', 'ms-Icon--RedEye');\n            } else {\n                icon.classList.replace('ms-Icon--RedEye', 'ms-Icon--Hide');\n            }\n        });\n    }\n}\n\n// Classe OdooAPI\nclass OdooAPI {\n    constructor() {\n        const settings = this.getSettings();\n        this.host = settings.odooUrl;\n        this.db = settings.database;\n        this.username = settings.username;\n        this.password = settings.password;\n        this.worker_url = 'https://royal-pond-be25.lvr-3b7.workers.dev';\n        this.maxRetries = 3;\n        this.retryDelay = 1000;\n        \n        log('OdooAPI initialisée', {\n            host: this.host,\n            database: this.db,\n            username: this.username,\n            worker_url: this.worker_url\n        });\n    }\n\n    getSettings() {\n        const savedSettings = localStorage.getItem('odooSettings');\n        if (!savedSettings) {\n            throw new Error('Aucun réglage trouvé. Veuillez configurer l\\'add-in dans les paramètres.');\n        }\n        \n        const settings = JSON.parse(savedSettings);\n        if (!settings.odooUrl || !settings.database || !settings.username || !settings.password) {\n            throw new Error('Configuration incomplète. Veuillez vérifier vos paramètres.');\n        }\n        \n        return settings;\n    }\n\n    formatOdooUrl(url) {\n        if (!url.startsWith('http://') && !url.startsWith('https://')) {\n            url = 'https://' + url;\n        }\n        return url.replace(/\\/$/, '');\n    }\n\n    async retryRequest(fn) {\n        for (let i = 0; i < this.maxRetries; i++) {\n            try {\n                return await fn();\n            } catch (error) {\n                log(`Tentative ${i + 1}/${this.maxRetries} échouée`, error);\n                if (i === this.maxRetries - 1) throw error;\n                await new Promise(r => setTimeout(r, this.retryDelay * (i + 1)));\n            }\n        }\n    }\n\n    // Dans la classe OdooAPI\n// Dans la classe OdooAPI\n// Dans la classe OdooAPI\nescapeXml(unsafe) {\n    if (typeof unsafe !== 'string') return unsafe;\n    return unsafe\n        .replace(/[<>&'\"]/g, function (c) {\n            switch (c) {\n                case '<': return '&lt;';\n                case '>': return '&gt;';\n                case '&': return '&amp;';\n                case '\\'': return '&apos;';\n                case '\"': return '&quot;';\n                default: return c;\n            }\n        })\n        .replace(/[\\x00-\\x1F\\x7F-\\x9F]/g, '') // Supprimer les caractères de contrôle\n        .trim();\n}\n\nasync createLead(emailFrom, subject, description) {\n    try {\n        const userId = await this.getUserId();\n        \n        const senderName = document.getElementById('sender-name').value.trim();\n        const phoneNumber = document.getElementById('phone-number').value.trim();\n        \n        const cleanData = {\n            name: this.escapeXml(subject || 'Nouveau lead'),\n            email_from: this.escapeXml(emailFrom),\n            description: this.escapeXml(description),\n            user_id: userId,\n            type: 'opportunity',\n            active: true,\n            company_id: 1,\n            stage_id: 16,\n            contact_name: this.escapeXml(senderName || emailFrom.split('@')[0]),\n            phone: this.escapeXml(phoneNumber)\n        };\n\n        log('Données nettoyées pour création lead:', cleanData);\n\n        // Création du lead\n        const leadResponse = await this.fetchWithTimeout(\n            `${this.worker_url}/create_lead`,\n            {\n                method: 'POST',\n                headers: this.buildHeaders(),\n                body: JSON.stringify({\n                    odoo_url: this.host,\n                    database: this.db,\n                    username: this.username,\n                    password: this.password,\n                    lead_data: cleanData\n                })\n            }\n        );\n\n        const leadResponseText = await leadResponse.text();\n        log('Réponse brute création lead:', leadResponseText);\n\n        let data;\n        try {\n            data = JSON.parse(leadResponseText);\n        } catch (e) {\n            throw new Error(`Réponse invalide du serveur: ${leadResponseText}`);\n        }\n\n        if (!data.success) {\n            throw new Error(data.error || 'Réponse serveur indique un échec');\n        }\n\n        const leadId = data.lead_id;\n\n        // Traitement simplifié des pièces jointes\n        // Dans la méthode createLead, remplacez la partie des pièces jointes par :\n// Dans createLead de la classe OdooAPI\n// Dans la classe OdooAPI, dans la méthode createLead\n// Dans la classe OdooAPI, remplacez la partie de l'upload des pièces jointes par :\n\nif (window.attachmentsToUpload && window.attachmentsToUpload.length > 0) {\n    log(`Début upload des pièces jointes (${window.attachmentsToUpload.length})`);\n    \n    for (const attachment of window.attachmentsToUpload) {\n        try {\n            log('Début upload pièce jointe:', {\n                name: attachment.name,\n                size: attachment.datas.length\n            });\n\n            // Upload en une seule fois pour tous les fichiers\n            const attachmentResponse = await this.fetchWithTimeout(\n                `${this.worker_url}/create_attachment`,\n                {\n                    method: 'POST',\n                    headers: this.buildHeaders(),\n                    body: JSON.stringify({\n                        odoo_url: this.host,\n                        database: this.db,\n                        username: this.username,\n                        password: this.password,\n                        attachment_data: {\n                            name: attachment.name,\n                            datas: attachment.datas,\n                            res_model: 'crm.lead',\n                            res_id: leadId,\n                            mimetype: attachment.mimetype,\n                            type: 'binary'\n                        }\n                    })\n                },\n                60000 // 60 secondes timeout pour les gros fichiers\n            );\n\n            const attachmentResult = await attachmentResponse.json();\n            \n            if (!attachmentResult.success) {\n                throw new Error(attachmentResult.error || 'Échec de création de la pièce jointe');\n            }\n\n            log('Pièce jointe uploadée avec succès:', {\n                name: attachment.name,\n                id: attachmentResult.attachment_id\n            });\n\n            updateProgress(attachment.name, 'success', 'Upload terminé');\n\n        } catch (error) {\n            log('Erreur upload pièce jointe:', {\n                name: attachment.name,\n                error: error.message\n            });\n            updateProgress(attachment.name, 'error', error.message);\n            throw error;\n        }\n    }\n}\n\n        return {\n            success: true,\n            leadId: leadId,\n            message: 'Lead et références des pièces jointes créés avec succès',\n            details: data\n        };\n\n    } catch (error) {\n        log('Erreur détaillée création lead:', error);\n        throw error;\n    }\n}\n\n// Dans la classe OdooAPI\nasync createAttachment(attachmentData) {\n    try {\n        // Si res_model n'est pas spécifié, utiliser crm.lead par défaut\n        const finalAttachmentData = {\n            ...attachmentData,\n            res_model: attachmentData.res_model || 'crm.lead'\n        };\n\n        log('Création pièce jointe:', {\n            model: finalAttachmentData.res_model,\n            resId: finalAttachmentData.res_id,\n            fileName: finalAttachmentData.name\n        });\n\n        const response = await this.fetchWithTimeout(\n            `${this.worker_url}/create_attachment`,\n            {\n                method: 'POST',\n                headers: this.buildHeaders(),\n                body: JSON.stringify({\n                    odoo_url: this.host,\n                    database: this.db,\n                    username: this.username,\n                    password: this.password,\n                    attachment_data: finalAttachmentData\n                })\n            },\n            60000 // 60 secondes timeout pour les gros fichiers\n        );\n\n        const data = await response.json();\n        if (!data.success) {\n            throw new Error(data.error || 'Échec de création de la pièce jointe');\n        }\n\n        log('Pièce jointe créée avec succès:', {\n            attachmentId: data.attachment_id,\n            model: finalAttachmentData.res_model,\n            resId: finalAttachmentData.res_id\n        });\n\n        return {\n            success: true,\n            attachment_id: data.attachment_id\n        };\n    } catch (error) {\n        log('Erreur création pièce jointe:', error);\n        throw error;\n    }\n}\n\n\nasync getUserId() {\n    try {\n        const response = await this.fetchWithTimeout(\n            `${this.worker_url}/get_user_id`,\n            {\n                method: 'POST',\n                headers: this.buildHeaders(),\n                body: JSON.stringify({\n                    odoo_url: this.host,\n                    database: this.db,\n                    username: this.username,\n                    password: this.password\n                })\n            }\n        );\n\n        if (!response.ok) {\n            throw new Error(`Erreur HTTP ${response.status}`);\n        }\n\n        const data = await response.json();\n        if (!data.success || !data.user_id) {\n            throw new Error('Impossible de récupérer l\\'ID utilisateur');\n        }\n\n        return data.user_id;\n    } catch (error) {\n        throw new Error(`Erreur lors de la récupération de l'ID utilisateur: ${error.message}`);\n    }\n}\n\nasync uploadLargeAttachment(leadId, attachment) {\n    const CHUNK_SIZE = 500 * 1024; // 500KB par chunk\n    const totalChunks = Math.ceil(attachment.datas.length / CHUNK_SIZE);\n    let attachmentId = null;\n\n    log(`Début upload par chunks pour ${attachment.name}`, {\n        totalSize: attachment.datas.length,\n        chunks: totalChunks\n    });\n\n    for (let i = 0; i < totalChunks; i++) {\n        const start = i * CHUNK_SIZE;\n        const end = Math.min(start + CHUNK_SIZE, attachment.datas.length);\n        const chunk = attachment.datas.slice(start, end);\n        const isLastChunk = i === totalChunks - 1;\n\n        try {\n            const chunkResponse = await this.fetchWithTimeout(\n                `${this.worker_url}/upload_attachment_chunk`,\n                {\n                    method: 'POST',\n                    headers: this.buildHeaders(),\n                    body: JSON.stringify({\n                        odoo_url: this.host,\n                        database: this.db,\n                        username: this.username,\n                        password: this.password,\n                        attachment_data: {\n                            name: attachment.name,\n                            datas: chunk,\n                            res_model: 'crm.lead',\n                            res_id: leadId,\n                            mimetype: attachment.mimetype,\n                            chunk_index: i,\n                            total_chunks: totalChunks,\n                            is_last_chunk: isLastChunk,\n                            attachment_id: attachmentId // null pour le premier chunk\n                        }\n                    })\n                },\n                15000 // 15 secondes par chunk\n            );\n\n            const result = await chunkResponse.json();\n            \n            if (!result.success) {\n                throw new Error(result.error || 'Échec upload chunk');\n            }\n\n            // Récupérer l'ID de l'attachment après le premier chunk\n            if (i === 0) {\n                attachmentId = result.attachment_id;\n            }\n\n            updateProgress(attachment.name, 'progress', `Upload en cours... ${Math.round((i + 1) / totalChunks * 100)}%`);\n\n        } catch (error) {\n            throw new Error(`Erreur chunk ${i + 1}/${totalChunks}: ${error.message}`);\n        }\n    }\n\n    return attachmentId;\n}\n\n\n    async testServerConnection() {\n        log('Test de connexion au serveur', {\n            url: this.worker_url,\n            odoo_url: this.host\n        });\n\n        return this.retryRequest(async () => {\n            try {\n                const response = await this.fetchWithTimeout(\n                    `${this.worker_url}/test`,\n                    {\n                        method: 'POST',\n                        headers: this.buildHeaders(),\n                        body: JSON.stringify({\n                            odoo_url: this.host,\n                            database: this.db,\n                            username: this.username,\n                            password: this.password\n                        })\n                    }\n                );\n\n                if (!response.ok) {\n                    const errorData = await response.json().catch(() => ({}));\n                    throw new Error(errorData.error || `Erreur HTTP ${response.status}`);\n                }\n\n                const data = await response.json();\n                log('Réponse du test de connexion', data);\n\n                // Vérification de l'authentification\n                const loginSuccess = data.details?.login_response?.includes('<value><int>') ||\n                                   data.details?.login_response?.includes('<value><boolean>1</boolean>');\n\n                if (!loginSuccess) {\n                    throw new Error('Échec de l\\'authentification. Vérifiez vos identifiants de connexion.');\n                }\n\n                const versionInfo = this.extractVersionInfo(data.details.version_response);\n                \n                return {\n                    success: true,\n                    message: `Connexion établie avec succès (Odoo ${versionInfo.version})`,\n                    details: {\n                        version: versionInfo,\n                        responses: data.details\n                    }\n                };\n\n            } catch (error) {\n                return this.handleError(error, 'Erreur lors du test de connexion');\n            }\n        });\n    }\n\n    // Ajouter dans la classe OdooAPI\nasync searchPartners(searchCriteria) {\n    try {\n        const response = await this.fetchWithTimeout(\n            `${this.worker_url}/search_partners`,\n            {\n                method: 'POST',\n                headers: this.buildHeaders(),\n                body: JSON.stringify({\n                    odoo_url: this.host,\n                    database: this.db,\n                    username: this.username,\n                    password: this.password,\n                    search_criteria: searchCriteria\n                })\n            }\n        );\n\n        const data = await response.json();\n        if (!data.success) {\n            throw new Error(data.error || 'Échec de la recherche');\n        }\n\n        return data.partners;\n    } catch (error) {\n        log('Erreur recherche partenaires:', error);\n        throw error;\n    }\n}\n\n    extractVersionInfo(xmlResponse) {\n        try {\n            const versionMatch = xmlResponse.match(/<name>server_version<\\/name>\\s*<value><string>(.*?)<\\/string><\\/value>/);\n            const versionInfo = versionMatch ? versionMatch[1] : 'Version inconnue';\n            \n            const serieMatch = xmlResponse.match(/<name>server_serie<\\/name>\\s*<value><string>(.*?)<\\/string><\\/value>/);\n            const serie = serieMatch ? serieMatch[1] : '';\n            \n            return {\n                version: versionInfo,\n                serie: serie\n            };\n        } catch (error) {\n            log('Erreur extraction version', error);\n            return {\n                version: 'Version inconnue',\n                serie: 'Inconnue'\n            };\n        }\n    }\n\n    validateCredentials() {\n        if (!this.host || !this.db || !this.password) {\n            throw new Error('Configuration incomplète: tous les paramètres de connexion sont requis');\n        }\n    }\n\n    async init() {\n        try {\n            this.validateCredentials();\n            this.host = this.formatOdooUrl(this.host);\n            const testResult = await this.testServerConnection();\n            \n            if (!testResult.success) {\n                throw new Error(`Échec de l'initialisation: ${testResult.message}`);\n            }\n            \n            log('Initialisation réussie', testResult);\n            return testResult;\n            \n        } catch (error) {\n            log('Erreur lors de l\\'initialisation', error);\n            throw error;\n        }\n    }\n\n    buildHeaders() {\n        return {\n            'Content-Type': 'application/json',\n            'X-Api-Key': this.password\n        };\n    }\n\n    async fetchWithTimeout(url, options, timeout = 30000) { // Augmenté à 30 secondes par défaut\n        const controller = new AbortController();\n        const id = setTimeout(() => controller.abort(), timeout);\n        \n        try {\n            const response = await fetch(url, {\n                ...options,\n                signal: controller.signal\n            });\n            clearTimeout(id);\n            return response;\n        } catch (error) {\n            clearTimeout(id);\n            if (error.name === 'AbortError') {\n                throw new Error('La requête a pris trop de temps');\n            }\n            throw error;\n        }\n    }\n\n    handleError(error, customMessage = 'Une erreur est survenue') {\n        log('Erreur API', error);\n        return {\n            success: false,\n            message: error.message || customMessage,\n            details: {\n                error: error.message,\n                type: error.name\n            }\n        };\n    }\n}\n\nfunction showNotification(message, type = \"info\", details = null) {\n    const notification = document.createElement('div');\n    notification.className = `notification ${type}`;\n    \n    const messageEl = document.createElement('div');\n    messageEl.className = 'notification-message';\n    messageEl.textContent = message;\n    notification.appendChild(messageEl);\n\n    // Ajout du lien vers l'opportunité si c'est une création réussie\n    if (type === 'success' && details && details.leadId) {\n        const settings = JSON.parse(localStorage.getItem('odooSettings'));\n        const opportunityLink = document.createElement('a');\n        opportunityLink.href = `${settings.odooUrl}/web#id=${details.leadId}&model=crm.lead&view_type=form`;\n        opportunityLink.target = \"_blank\";\n        opportunityLink.className = 'opportunity-link';\n        opportunityLink.textContent = \"Voir l'opportunité dans Odoo\";\n        notification.appendChild(opportunityLink);\n    }\n\n    if (details) {\n        const detailsEl = document.createElement('div');\n        detailsEl.className = 'notification-details';\n        \n        if (details.message) {\n            const errorMessage = document.createElement('div');\n            errorMessage.className = 'error-message';\n            errorMessage.textContent = `Message: ${details.message}`;\n            detailsEl.appendChild(errorMessage);\n        }\n\n        if (details.logs && details.logs.length > 0) {\n            const logsEl = document.createElement('div');\n            logsEl.className = 'error-logs';\n            details.logs.forEach(log => {\n                const logEntry = document.createElement('div');\n                logEntry.className = 'log-entry';\n                logEntry.textContent = `${log.timestamp || ''} ${log.message || log}`;\n                logsEl.appendChild(logEntry);\n            });\n            detailsEl.appendChild(logsEl);\n        }\n\n        if (details.stack) {\n            const stackEl = document.createElement('pre');\n            stackEl.className = 'error-stack';\n            stackEl.textContent = details.stack;\n            detailsEl.appendChild(stackEl);\n        }\n\n        notification.appendChild(detailsEl);\n    }\n\n    // Styles mis à jour\n    const style = document.createElement('style');\n    style.textContent = `\n        .notification {\n            position: fixed;\n            top: 20px;\n            right: 20px;\n            max-width: 80vw;\n            max-height: 80vh;\n            overflow-y: auto;\n            padding: 15px;\n            background: white;\n            border-radius: 5px;\n            box-shadow: 0 2px 4px rgba(0,0,0,0.2);\n            z-index: 1000;\n            font-family: monospace;\n        }\n        .notification.error { border-left: 4px solid #f44336; }\n        .notification.success { border-left: 4px solid #4CAF50; }\n        .notification-message {\n            font-weight: bold;\n            margin-bottom: 10px;\n        }\n        .opportunity-link {\n            display: block;\n            margin: 10px 0;\n            padding: 8px 12px;\n            background-color: #4CAF50;\n            color: white;\n            text-decoration: none;\n            border-radius: 4px;\n            text-align: center;\n            font-weight: bold;\n            transition: background-color 0.3s;\n        }\n        .opportunity-link:hover {\n            background-color: #45a049;\n        }\n        .notification-details {\n            font-size: 12px;\n            margin-top: 10px;\n            padding-top: 10px;\n            border-top: 1px solid #eee;\n        }\n        .error-message {\n            color: #f44336;\n            margin-bottom: 5px;\n        }\n        .error-logs {\n            margin-top: 5px;\n            padding: 5px;\n            background: #f5f5f5;\n            border-radius: 3px;\n        }\n        .log-entry {\n            padding: 2px 5px;\n            border-bottom: 1px solid #eee;\n        }\n        .error-stack {\n            margin-top: 5px;\n            padding: 5px;\n            background: #f5f5f5;\n            overflow-x: auto;\n            font-size: 11px;\n        }\n    `;\n    document.head.appendChild(style);\n    \n    document.body.appendChild(notification);\n    \n    setTimeout(() => {\n        notification.remove();\n    }, 30000);\n}\n\ndocument.getElementById('test-connection').onclick = async function() {\n    const button = this;\n    const icon = button.querySelector('i');\n    \n    let url = document.getElementById('odoo-url').value.trim();\n    const database = document.getElementById('database').value.trim();\n    const username = document.getElementById('username').value.trim();\n    const password = document.getElementById('password').value.trim();\n\n    log('Test de connexion initié', {\n        url: url,\n        database: database,\n        username: username,\n        hasPassword: !!password\n    });\n\n    if (!url || !database || !username || !password) {\n        showNotification('Veuillez remplir tous les champs', 'error');\n        return;\n    }\n\n    button.disabled = true;\n    // Sauvegarder le texte original\n    const originalText = button.textContent;\n    button.innerHTML = '<i class=\"ms-Icon ms-Icon--Sync\"></i>Test en cours...';\n\n    try {\n        // Sauvegarde d'abord les paramètres\n        const settings = {\n            odooUrl: url,\n            database,\n            username,\n            password\n        };\n        localStorage.setItem('odooSettings', JSON.stringify(settings));\n\n        // Crée ensuite l'instance de OdooAPI qui utilisera ces paramètres\n        const odoo = new OdooAPI();\n        const serverTest = await odoo.testServerConnection();\n        \n        if (serverTest.success) {\n            showNotification(\n                serverTest.message,\n                'success',\n                serverTest.details\n            );\n        } else {\n            throw new Error(serverTest.message);\n        }\n    } catch (error) {\n        log('Erreur critique', error);\n        showNotification(error.message, 'error', {\n            'Type d\\'erreur': error.name,\n            'Détails': error.stack || error.message\n        });\n    } finally {\n        button.disabled = false;\n        button.innerHTML = '<i class=\"ms-Icon ms-Icon--PlugConnected\"></i>Tester la connexion';\n    }\n};\n\n// Remplacer les gestionnaires de navigation existants par\n// Ajouter ces gestionnaires d'événements\n\n\ndocument.getElementById('settings-button').addEventListener('click', () => {\n    switchPage('settings-page');\n    document.getElementById('back-button').classList.add('visible');\n});\n\ndocument.getElementById('back-button').addEventListener('click', () => {\n    switchPage('app-body');\n    document.getElementById('back-button').classList.remove('visible');\n});\n\n// Modifier la fonction switchPage pour inclure la page de recherche\nfunction switchPage(pageId) {\n    const mainPage = document.getElementById('app-body');\n    const settingsPage = document.getElementById('settings-page');\n    const searchPage = document.getElementById('search-page');\n    \n    // Reset all pages\n    mainPage.classList.remove('slide-left');\n    settingsPage.classList.remove('active');\n    searchPage.classList.remove('active');\n    \n    switch(pageId) {\n        case 'settings-page':\n            mainPage.classList.add('slide-left');\n            settingsPage.classList.add('active');\n            break;\n        case 'search-page':\n            mainPage.classList.add('slide-left');\n            searchPage.classList.add('active');\n            break;\n        default:\n            // Retour à la page principale\n            break;\n    }\n}\n\ndocument.getElementById('search-button').addEventListener('click', async () => {\n    try {\n        // Basculer vers la page de recherche\n        switchPage('search-page');\n        document.getElementById('back-button').classList.add('visible');\n        \n        const item = Office.context.mailbox.item;\n        \n        if (item) {\n            // Traitement de l'expéditeur (même logique que loadEmailData)\n            if (item.sender) {\n                let senderEmail = item.sender.emailAddress;\n                senderEmail = cleanEmail(senderEmail);\n                document.getElementById('search-sender-email').value = senderEmail;\n            }\n\n            // Traitement du corps du message de manière asynchrone\n            try {\n                const bodyResult = await new Promise((resolve, reject) => {\n                    item.body.getAsync(Office.CoercionType.Text, (result) => {\n                        if (result.status === Office.AsyncResultStatus.Succeeded) {\n                            resolve(result);\n                        } else {\n                            reject(new Error('Échec du chargement du corps du message'));\n                        }\n                    });\n                });\n\n                const fullText = bodyResult.value;\n\n                // Détecter les numéros de téléphone (même logique que loadEmailData)\n                const phones = extractPhoneNumbers(fullText);\n                log('Numéros de téléphone détectés pour la recherche:', phones);\n                \n                // Mettre à jour le select des numéros de téléphone\n                const phoneSelect = document.getElementById('search-phone-select');\n                \n                // Vider le select sauf l'option par défaut\n                while (phoneSelect.options.length > 1) {\n                    phoneSelect.remove(1);\n                }\n\n                // Ajouter les numéros trouvés\n                phones.forEach((phoneInfo, index) => {\n                    const option = document.createElement('option');\n                    option.value = phoneInfo.formatted;\n                    option.textContent = `Numéro ${index + 1}: ${phoneInfo.formatted}`;\n                    phoneSelect.appendChild(option);\n                });\n\n                // Si des numéros ont été trouvés, remplir l'input avec le premier\n                if (phones.length > 0) {\n                    document.getElementById('search-phone-number').value = phones[0].formatted;\n                }\n\n            } catch (error) {\n                log('Erreur lors du chargement du corps du message:', error);\n                throw error;\n            }\n        }\n\n    } catch (error) {\n        console.error('Erreur lors du chargement des données:', error);\n        showNotification('Erreur lors du chargement des données', 'error', {\n            message: error.message\n        });\n    }\n});\n\n// Ajouter l'événement pour le select de téléphone dans la page de recherche\ndocument.getElementById('search-phone-select').addEventListener('change', (e) => {\n    if (e.target.value) {\n        document.getElementById('search-phone-number').value = e.target.value;\n    }\n});\n\ndocument.getElementById('search-contact-btn').addEventListener('click', async () => {\n    const button = document.getElementById('search-contact-btn');\n    const resultsContainer = document.getElementById('search-results');\n    \n    try {\n        button.disabled = true;\n        button.innerHTML = '<i class=\"ms-Icon ms-Icon--Sync\"></i>Recherche en cours...';\n        \n        const emailChecked = document.getElementById('search-email-checkbox').checked;\n        const phoneChecked = document.getElementById('search-phone-checkbox').checked;\n        \n        const searchCriteria = {};\n        \n        if (emailChecked) {\n            const email = document.getElementById('search-sender-email').value.trim();\n            if (email) searchCriteria.email = email;\n        }\n        \n        if (phoneChecked) {\n            let phone = document.getElementById('search-phone-number').value.trim();\n            phone = phone.replace(/[^0-9+]/g, '');\n            if (phone) searchCriteria.phone = phone;\n        }\n        \n        if (Object.keys(searchCriteria).length === 0) {\n            showNotification('Veuillez sélectionner et remplir au moins un critère de recherche', 'error');\n            return;\n        }\n\n        const odoo = new OdooAPI();\n        const partners = await odoo.searchPartners(searchCriteria);\n        \n        resultsContainer.innerHTML = '';\n        \n        if (partners.length === 0) {\n            resultsContainer.innerHTML = `\n                <div class=\"no-results\">\n                    Aucun contact trouvé avec ces critères\n                </div>\n            `;\n        } else {\n            const cardsContainer = document.createElement('div');\n            cardsContainer.className = 'partner-cards';\n            \n            partners.forEach(partner => {\n                const card = document.createElement('div');\n                card.className = 'partner-card';\n                \n                card.innerHTML = `\n                    <div class=\"card-header\">\n                        <input type=\"checkbox\" class=\"partner-select\" data-partner-id=\"${partner.id}\">\n                        <h3 class=\"partner-name\">${partner.name}</h3>\n                    </div>\n                    <div class=\"card-content\">\n                        <p class=\"partner-street\">${partner.street || ''}</p>\n                        <p class=\"partner-city\">${partner.zip || ''} ${partner.city || ''}</p>\n                    </div>\n                    <div class=\"card-footer\">\n                        <a href=\"${odoo.host}/web#id=${partner.id}&model=res.partner&view_type=form\" \n                           target=\"_blank\" \n                           class=\"view-button\">\n                           Voir dans Odoo\n                        </a>\n                        <button class=\"upload-button\" style=\"display: none;\" data-partner-id=\"${partner.id}\">\n                            <i class=\"ms-Icon ms-Icon--Upload\"></i> Upload\n                        </button>\n                    </div>\n                `;\n                \n                cardsContainer.appendChild(card);\n            });\n            \n            resultsContainer.appendChild(cardsContainer);\n            \n            // Gérer l'affichage du bouton d'upload et ajouter les event listeners\n            document.querySelectorAll('.partner-select').forEach(checkbox => {\n                checkbox.addEventListener('change', function() {\n                    const card = this.closest('.partner-card');\n                    const uploadButton = card.querySelector('.upload-button');\n                    uploadButton.style.display = this.checked ? 'block' : 'none';\n                });\n            });\n\n            // Ajouter les event listeners pour les boutons d'upload\n            document.querySelectorAll('.upload-button').forEach(button => {\n                button.addEventListener('click', async function() {\n                    const partnerId = this.dataset.partnerId;\n                    const originalText = this.innerHTML;\n                    \n                    try {\n                        this.disabled = true;\n                        this.innerHTML = '<i class=\"ms-Icon ms-Icon--Sync\"></i> Upload en cours...';\n                        \n                        // Vérifier si des pièces jointes sont disponibles\n                        if (!window.attachmentsToUpload || window.attachmentsToUpload.length === 0) {\n                            showNotification('Aucune pièce jointe à uploader', 'error');\n                            return;\n                        }\n                        \n                        const odoo = new OdooAPI();\n                        \n                        // Upload chaque pièce jointe\n                        for (const attachment of window.attachmentsToUpload) {\n                            try {\n                                // Modifier les données de la pièce jointe pour le partenaire\n                                // On spécifie explicitement res.partner comme res_model\nconst attachmentData = {\n    ...attachment,\n    res_model: 'res.partner',\n    res_id: parseInt(partnerId)\n};\n\n                                \n                                updateProgress(attachment.name, 'progress', 'Upload en cours...');\n                                \n                                const response = await odoo.createAttachment(attachmentData);\n                                \n                                if (response.success) {\n                                    updateProgress(attachment.name, 'success', 'Upload terminé');\n                                } else {\n                                    throw new Error(response.error || 'Échec de l\\'upload');\n                                }\n                                \n                            } catch (error) {\n                                updateProgress(attachment.name, 'error', error.message);\n                                throw error;\n                            }\n                        }\n                        \n                        showNotification('Pièces jointes uploadées avec succès', 'success');\n                        \n                        // Décocher la case après un upload réussi\n                        const card = this.closest('.partner-card');\n                        const checkbox = card.querySelector('.partner-select');\n                        checkbox.checked = false;\n                        this.style.display = 'none';\n                        \n                    } catch (error) {\n                        showNotification('Erreur lors de l\\'upload des pièces jointes', 'error', {\n                            message: error.message\n                        });\n                    } finally {\n                        this.disabled = false;\n                        this.innerHTML = originalText;\n                    }\n                });\n            });\n        }\n        \n    } catch (error) {\n        showNotification('Erreur lors de la recherche', 'error', {\n            message: error.message\n        });\n    } finally {\n        button.disabled = false;\n        button.innerHTML = '<i class=\"ms-Icon ms-Icon--Search\"></i>Chercher le contact';\n    }\n});\n\n\ndocument.getElementById('save-to-crm').onclick = async function() {\n    const button = this;\n    const originalText = button.innerHTML;\n\n    try {\n        button.disabled = true;\n        button.innerHTML = '<i class=\"ms-Icon ms-Icon--Sync\"></i>Création en cours...';\n\n        const emailFrom = document.getElementById('sender-email').value.trim();\n        const senderName = document.getElementById('sender-name').value.trim();\n        const subject = document.getElementById('email-subject').value.trim();\n        const emailBody = document.getElementById('email-body').value;\n        const additionalNotes = document.getElementById('additional-notes').value.trim();\n\n        if (!emailFrom || !subject) {\n            throw new Error('L\\'email de l\\'expéditeur et le sujet sont requis');\n        }\n\n        const odoo = new OdooAPI();\n        \n        // Formatage du contenu pour préserver la mise en forme\n        let description = '<div style=\"font-family: Arial, sans-serif;\">';\n        description += emailBody.split('\\n').map(line => \n            `<p style=\"margin: 0 0 1em 0;\">${line.trim()}</p>`\n        ).join('');\n        description += '</div>';\n\n        if (additionalNotes) {\n            description += '<div style=\"margin: 30px 0;\">';\n            description += '<hr style=\"border: none; border-top: 1px solid #cccccc;\">';\n            description += '<h3>Notes additionnelles :</h3>';\n            description += '<hr style=\"border: none; border-top: 1px solid #cccccc;\">';\n            description += additionalNotes.split('\\n').map(line => \n                `<p style=\"margin: 0 0 1em 0;\">${line.trim()}</p>`\n            ).join('');\n            description += '</div>';\n        }\n\n        const result = await odoo.createLead(emailFrom, subject, description);\n\n        if (result.success) {\n            const settings = JSON.parse(localStorage.getItem('odooSettings'));\n            const odooUrl = settings.odooUrl;\n\n            showNotification(\n                'Lead créé avec succès dans Odoo',\n                'success',\n                {\n                    leadId: result.leadId,\n                    message: result.message,\n                    logs: result.details,\n                    odooUrl: odooUrl\n                }\n            );\n        } else {\n            throw new Error('Échec de la création du lead');\n        }\n\n    } catch (error) {\n        log('Erreur complète:', error);\n        \n        const errorDetails = {\n            message: error.message,\n            type: error.name,\n            details: error.details || {},\n            logs: error.logs || [],\n            stack: error.stack\n        };\n\n        showNotification(\n            'Erreur lors de la création du lead',\n            'error',\n            errorDetails\n        );\n\n    } finally {\n        button.disabled = false;\n        button.innerHTML = originalText;\n    }\n};\n\nfunction setupFormValidation() {\n    const requiredFields = ['sender-email', 'email-subject'];\n    const saveButton = document.getElementById('save-to-crm');\n\n    function validateForm() {\n        const isValid = requiredFields.every(fieldId => {\n            const field = document.getElementById(fieldId);\n            return field && field.value.trim() !== '';\n        });\n\n        saveButton.disabled = !isValid;\n    }\n\n    // Ajouter les écouteurs d'événements pour les champs requis\n    requiredFields.forEach(fieldId => {\n        const field = document.getElementById(fieldId);\n        if (field) {\n            field.addEventListener('input', validateForm);\n            field.addEventListener('change', validateForm);\n        }\n    });\n\n    // Validation initiale\n    validateForm();\n}\n\n// Modification du gestionnaire de sauvegarde des réglages\ndocument.getElementById('save-settings').onclick = function() {\n    const settings = {\n        odooUrl: document.getElementById('odoo-url').value.trim(),\n        database: document.getElementById('database').value.trim(),\n        username: document.getElementById('username').value.trim(),\n        password: document.getElementById('password').value.trim()\n    };\n\n    log('Sauvegarde des réglages', {\n        hasUrl: !!settings.odooUrl,\n        hasDatabase: !!settings.database,\n        hasUsername: !!settings.username,\n        hasPassword: !!settings.password\n    });\n\n    if (!settings.odooUrl || !settings.database || !settings.username || !settings.password) {\n        showNotification('Veuillez remplir tous les champs', 'error');\n        return;\n    }\n\n    try {\n        localStorage.setItem('odooSettings', JSON.stringify(settings));\n        showNotification('Réglages sauvegardés avec succès !', 'success');\n    } catch (error) {\n        log('Erreur sauvegarde réglages', error);\n        showNotification('Erreur lors de la sauvegarde des réglages', 'error');\n    }\n};","// Imports\nvar ___HTML_LOADER_IMPORT_0___ = new URL(\"./taskpane.css\", import.meta.url);\n// Module\nvar code = \"<!DOCTYPE html> <html> <head> <meta charset=\\\"UTF-8\\\"/> <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=Edge\\\"/> <meta name=\\\"viewport\\\" content=\\\"width=device-width,initial-scale=1\\\"> <title>Odoo CRM Add-in</title> <\" + \"script src=\\\"https://appsforoffice.microsoft.com/lib/1/hosted/office.js\\\"><\" + \"/script> <link rel=\\\"stylesheet\\\" href=\\\"https://res-1.cdn.office.net/files/fabric-cdn-prod_20230815.002/office-ui-fabric-core/11.1.0/css/fabric.min.css\\\"/> <link href=\\\"\" + ___HTML_LOADER_IMPORT_0___ + \"\\\" rel=\\\"stylesheet\\\"/> </head> <body class=\\\"ms-font-m ms-welcome ms-Fabric\\\"> <div id=\\\"sideload-msg\\\"> <h2 class=\\\"ms-font-xl\\\">Veuillez charger votre add-in pour voir le contenu.</h2> </div> <nav class=\\\"nav-menu\\\"> <button id=\\\"nav-form\\\" class=\\\"nav-button nav-active\\\"> <i class=\\\"ms-Icon ms-Icon--Contact\\\" aria-hidden=\\\"true\\\"></i> Contact </button> </nav> <div class=\\\"nav-buttons\\\"> <button id=\\\"settings-button\\\" class=\\\"nav-icon-button\\\" title=\\\"Réglages\\\"> <i class=\\\"ms-Icon ms-Icon--Settings\\\"></i> </button> <button id=\\\"search-button\\\" class=\\\"nav-icon-button\\\" title=\\\"Rechercher\\\"> <i class=\\\"ms-Icon ms-Icon--Search\\\"></i> </button> <button id=\\\"back-button\\\" class=\\\"back-button\\\" title=\\\"Retour\\\"> <i class=\\\"ms-Icon ms-Icon--ChevronLeft\\\"></i> </button> </div> <div class=\\\"pages-container\\\"> <div id=\\\"app-body\\\" class=\\\"page\\\"> <div class=\\\"form-container\\\"> <div class=\\\"form-group\\\"> <label class=\\\"form-label\\\">Votre adresse email</label> <input type=\\\"email\\\" id=\\\"user-email\\\" class=\\\"form-control\\\" readonly=\\\"readonly\\\"> </div> <div class=\\\"form-group\\\"> <label for=\\\"sender-name\\\">Nom de l'expéditeur</label> <input type=\\\"text\\\" id=\\\"sender-name\\\" class=\\\"form-control\\\"/> </div> <div class=\\\"form-group\\\"> <label class=\\\"form-label\\\">Email de l'expéditeur</label> <input type=\\\"email\\\" id=\\\"sender-email\\\" class=\\\"form-control\\\" required> </div> <div class=\\\"form-group phone-input-group\\\"> <label for=\\\"phone-number\\\">Numéro de téléphone</label> <div class=\\\"phone-input-container\\\"> <input type=\\\"text\\\" id=\\\"phone-number\\\" class=\\\"form-control\\\" placeholder=\\\"Entrez un numéro\\\"/> <select id=\\\"phone-select\\\" class=\\\"form-control\\\"> <option value=\\\"\\\">Numéros détectés</option> </select> </div> </div> <div class=\\\"form-group\\\"> <label class=\\\"form-label\\\">Sujet</label> <input type=\\\"text\\\" id=\\\"email-subject\\\" class=\\\"form-control\\\" required> </div> <div class=\\\"form-group\\\"> <label class=\\\"form-label\\\">Contenu du message</label> <textarea id=\\\"email-body\\\" class=\\\"form-control\\\" rows=\\\"6\\\" readonly=\\\"readonly\\\"></textarea> </div> <div class=\\\"form-group\\\"> <label class=\\\"form-label\\\">Notes additionnelles</label> <textarea id=\\\"additional-notes\\\" class=\\\"form-control\\\" rows=\\\"4\\\" placeholder=\\\"Ajoutez vos notes ici...\\\"></textarea> </div> <div class=\\\"section\\\"> <h3>Pièces jointes</h3> <div id=\\\"attachments-list\\\"></div> </div> <button id=\\\"save-to-crm\\\" class=\\\"submit-btn\\\"> <i class=\\\"ms-Icon ms-Icon--Save\\\"></i> Enregistrer dans le CRM </button> </div> </div> <div id=\\\"search-page\\\" class=\\\"page\\\"> <div class=\\\"search-container\\\"> <div class=\\\"search-criteria\\\"> <div class=\\\"criteria-group\\\"> <label class=\\\"checkbox-label\\\"> <input type=\\\"checkbox\\\" id=\\\"search-email-checkbox\\\" checked=\\\"checked\\\"> Rechercher par email </label> <div class=\\\"form-group\\\" id=\\\"email-search-group\\\"> <label class=\\\"form-label\\\">Email de l'expéditeur</label> <input type=\\\"email\\\" id=\\\"search-sender-email\\\" class=\\\"form-control\\\" required> </div> </div> <div class=\\\"criteria-group\\\"> <label class=\\\"checkbox-label\\\"> <input type=\\\"checkbox\\\" id=\\\"search-phone-checkbox\\\"> Rechercher par téléphone </label> <div class=\\\"form-group phone-input-group\\\" id=\\\"phone-search-group\\\"> <label for=\\\"search-phone-number\\\">Numéro de téléphone</label> <div class=\\\"phone-input-container\\\"> <input type=\\\"text\\\" id=\\\"search-phone-number\\\" class=\\\"form-control\\\" placeholder=\\\"Entrez un numéro\\\"/> <select id=\\\"search-phone-select\\\" class=\\\"form-control\\\"> <option value=\\\"\\\">Numéros détectés</option> </select> </div> </div> </div> </div> <button id=\\\"search-contact-btn\\\" class=\\\"submit-btn\\\"> <i class=\\\"ms-Icon ms-Icon--Search\\\"></i> Chercher le contact </button> <div id=\\\"search-results\\\" class=\\\"search-results\\\"> </div> </div> </div> <div id=\\\"settings-page\\\" class=\\\"page\\\"> <div class=\\\"form-container\\\"> <div class=\\\"header\\\"> <h2>Réglages de connexion Odoo</h2> </div> <div class=\\\"form-group\\\"> <label class=\\\"form-label\\\">URL du serveur Odoo</label> <input type=\\\"text\\\" id=\\\"odoo-url\\\" class=\\\"form-control\\\" placeholder=\\\"https://votre-instance.odoo.com\\\"/> </div> <div class=\\\"form-group\\\"> <label class=\\\"form-label\\\">Base de données</label> <input type=\\\"text\\\" id=\\\"database\\\" class=\\\"form-control\\\" placeholder=\\\"nom_de_la_base\\\"/> </div> <div class=\\\"form-group\\\"> <label class=\\\"form-label\\\">Nom d'utilisateur</label> <input type=\\\"text\\\" id=\\\"username\\\" class=\\\"form-control\\\" placeholder=\\\"utilisateur@exemple.com\\\"/> </div> <div class=\\\"form-group\\\"> <label class=\\\"form-label\\\">Mot de passe</label> <div class=\\\"password-container\\\"> <input type=\\\"password\\\" id=\\\"password\\\" class=\\\"form-control\\\"/> <button type=\\\"button\\\" id=\\\"toggle-password\\\" class=\\\"toggle-password\\\"> <i class=\\\"ms-Icon ms-Icon--RedEye\\\"></i> </button> </div> </div> <div class=\\\"mb-3\\\"> <button id=\\\"test-connection\\\" class=\\\"submit-btn\\\"> <i class=\\\"ms-Icon ms-Icon--PlugConnected\\\"></i> Tester la connexion </button> </div> <div> <button id=\\\"save-settings\\\" class=\\\"submit-btn\\\"> <i class=\\\"ms-Icon ms-Icon--Save\\\"></i> Sauvegarder les réglages </button> </div> </div> </div> </div> </body></html>\";\n// Exports\nexport default code;"],"names":["__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","g","globalThis","this","Function","e","window","o","obj","prop","Object","prototype","hasOwnProperty","call","scriptUrl","importScripts","location","document","currentScript","tagName","toUpperCase","src","scripts","getElementsByTagName","length","i","test","Error","replace","p","b","baseURI","self","href","_regeneratorRuntime","t","r","n","defineProperty","value","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","d","getPrototypeOf","v","values","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","log","message","data","timestamp","Date","toISOString","logMessage","concat","console","group","stack","groupEnd","Office","onReady","info","host","HostType","Outlook","getElementById","style","display","_callee","_context","loadEmailData","loadUserEmailData","loadSavedSettings","setupPasswordToggle","setupFormValidation","t0","createElement","extractPhoneNumbers","text","countDigits","str","match","formatPhoneNumber","phone","cleaned","trim","startsWith","formatted","digitCount","phones","Map","_i","_phonePatterns","_step","pattern","_iterator","_createForOfIteratorHelper","matchAll","phoneInfo","has","set","err","Array","from","populatePhoneSelect","phoneSelect","phoneInput","options","remove","index","option","textContent","appendChild","displayAttachments","attachments","attachmentsContainer","innerHTML","list","className","attachment","item","size","bytes","Math","floor","parseFloat","pow","toFixed","formatFileSize","head","setupPhoneInputs","addEventListener","target","extractEmails","_step2","emails","_iterator2","email","toLowerCase","isPriority","split","includes","sort","localeCompare","populateEmailSelect","emailSelect","emailInput","emailInfo","priority","_loadEmailData","_callee17","_iterator6","_step6","content","bodyResult","fullText","senderEmail","senderName","subject","_context18","context","mailbox","attachmentsToUpload","isInline","updateProgress","getAttachmentContent","id","datas","mimetype","contentType","res_model","t1","filter","reject","body","getAsync","CoercionType","Text","result","status","AsyncResultStatus","Succeeded","t2","sender","emailAddress","cleanEmail","fileName","progressDiv","div","cssText","createProgressDiv","fileProgress","querySelector","dataset","file","createFileProgress","setTimeout","attachmentId","getAttachmentContentAsync","error","userProfile","userEmail","savedSettings","localStorage","getItem","settings","JSON","parse","hasUrl","odooUrl","hasDatabase","database","hasUsername","username","hasPassword","password","passwordInput","toggleButton","icon","classList","OdooAPI","_classCallCheck","getSettings","db","worker_url","maxRetries","retryDelay","key","url","_retryRequest","_callee2","fn","_loop","_ret","_this","_context3","_context2","_x4","unsafe","_createLead","_callee3","emailFrom","description","userId","phoneNumber","cleanData","leadResponse","leadResponseText","leadId","_iterator4","_step4","attachmentResponse","attachmentResult","_context4","getUserId","escapeXml","email_from","user_id","active","company_id","stage_id","contact_name","fetchWithTimeout","headers","buildHeaders","stringify","odoo_url","lead_data","success","lead_id","attachment_data","res_id","json","attachment_id","details","t3","_x5","_x6","_x7","_createAttachment","_callee4","attachmentData","finalAttachmentData","response","_context5","model","_objectSpread","resId","_x8","_getUserId","_callee5","_context6","ok","_uploadLargeAttachment","_callee6","CHUNK_SIZE","totalChunks","start","end","chunk","isLastChunk","chunkResponse","_context7","ceil","totalSize","chunks","min","chunk_index","total_chunks","is_last_chunk","round","_x9","_x10","_testServerConnection","_callee8","_this2","_context9","retryRequest","_callee7","_data$details","_data$details2","errorData","versionInfo","_context8","login_response","extractVersionInfo","version_response","version","responses","handleError","_searchPartners","_callee9","searchCriteria","_context10","search_criteria","partners","_x11","xmlResponse","versionMatch","serieMatch","serie","_init","_callee10","testResult","_context11","validateCredentials","formatOdooUrl","testServerConnection","_fetchWithTimeout","_callee11","timeout","controller","_args12","_context12","AbortController","abort","fetch","signal","clearTimeout","_x12","_x13","customMessage","showNotification","notification","messageEl","opportunityLink","detailsEl","errorMessage","logs","logsEl","logEntry","stackEl","switchPage","pageId","mainPage","settingsPage","searchPage","add","requiredFields","saveButton","validateForm","isValid","every","fieldId","field","disabled","onclick","_callee12","button","odoo","serverTest","_context13","setItem","_callee13","_context14","_callee15","resultsContainer","emailChecked","phoneChecked","cardsContainer","_context16","checked","searchPartners","partner","card","street","zip","city","querySelectorAll","checkbox","closest","_callee14","partnerId","originalText","_odoo","_iterator5","_step5","_context15","parseInt","createAttachment","_callee16","emailBody","additionalNotes","_context17","map","line","join","createLead","URL"],"sourceRoot":""}