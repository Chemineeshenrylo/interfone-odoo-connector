{"version":3,"file":"taskpane.js","mappings":"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","sources":["webpack://office-addin-taskpane-js/webpack/bootstrap","webpack://office-addin-taskpane-js/webpack/runtime/global","webpack://office-addin-taskpane-js/webpack/runtime/hasOwnProperty shorthand","webpack://office-addin-taskpane-js/webpack/runtime/publicPath","webpack://office-addin-taskpane-js/webpack/runtime/jsonp chunk loading","webpack://office-addin-taskpane-js/./src/taskpane/taskpane.js","webpack://office-addin-taskpane-js/./src/taskpane/taskpane.html"],"sourcesContent":["// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/^blob:/, \"\").replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t926: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","// Fonction de logging améliorée\nfunction log(message, data = null) {\n    const timestamp = new Date().toISOString();\n    const logMessage = `[${timestamp}] ${message}`;\n    \n    if (data) {\n        console.group(logMessage);\n        console.log('Détails:', data);\n        if (data instanceof Error) {\n            console.log('Stack:', data.stack);\n        }\n        console.groupEnd();\n    } else {\n        console.log(logMessage);\n    }\n}\n\n// Initialisation\nOffice.onReady((info) => {\n    log('Office.onReady appelé', info);\n    if (info.host === Office.HostType.Outlook) {\n        log('Application démarrée dans Outlook');\n        document.getElementById(\"sideload-msg\").style.display = \"none\";\n        document.getElementById(\"app-body\").style.display = \"block\";\n        \n        loadEmailData();\n        loadUserEmailData();\n        loadSavedSettings();\n        setupPasswordToggle();\n        setupFormValidation(); // Ajout de l'initialisation de la validation\n    }\n});\n\n// Chargement des données email\n// Modification de loadEmailData pour utiliser le formatage\n// Fonction pour détecter les numéros de téléphone\nconst style = document.createElement('style');\nstyle.textContent = `\n    .phone-input-container {\n        position: relative;\n        display: flex;\n        gap: 8px;\n    }\n    \n    #phone-number {\n        flex: 1;\n        padding: 8px;\n        border: 1px solid #ddd;\n        border-radius: 4px;\n    }\n    \n    #phone-select {\n        width: auto;\n        min-width: 120px;\n        padding: 8px;\n        border: 1px solid #ddd;\n        border-radius: 4px;\n        background-color: #f8f9fa;\n    }\n`;\ndocument.head.appendChild(style);\n\n\nfunction extractPhoneNumbers(text) {\n    // Fonction utilitaire pour compter les chiffres\n    function countDigits(str) {\n        return (str.match(/\\d/g) || []).length;\n    }\n\n    const phonePatterns = [\n        // Format international avec + ou 00\n        /(?:\\+|00)[1-9]\\d{1,3}[- .]?\\d(?:[- .]?\\d){4,14}/g,\n        \n        // Formats standard (minimum 6 chiffres)\n        /\\d(?:[- .]?\\d){5,14}/g\n    ];\n\n    function formatPhoneNumber(phone) {\n        // Vérifier d'abord si le numéro a au moins 6 chiffres\n        if (countDigits(phone) < 6) {\n            return null;\n        }\n\n        // Nettoyer légèrement le numéro tout en gardant le + et les espaces de formatage\n        let cleaned = phone.trim()\n            .replace(/[\\(\\)]/g, '') // Enlever les parenthèses\n            .replace(/[-\\.]/g, ' ') // Remplacer les points et tirets par des espaces\n            .replace(/\\s+/g, ' ');  // Normaliser les espaces\n\n        // Si le numéro commence par 00, le remplacer par +\n        if (cleaned.startsWith('00')) {\n            cleaned = '+' + cleaned.slice(2);\n        }\n\n        return {\n            formatted: cleaned,\n            digitCount: countDigits(cleaned)\n        };\n    }\n\n    let phones = new Map();\n\n    for (let pattern of phonePatterns) {\n        const matches = text.matchAll(pattern);\n        for (const match of matches) {\n            const phoneInfo = formatPhoneNumber(match[0]);\n            if (phoneInfo && phoneInfo.digitCount >= 6) {\n                if (!phones.has(phoneInfo.formatted)) {\n                    phones.set(phoneInfo.formatted, phoneInfo);\n                }\n            }\n        }\n    }\n\n    return Array.from(phones.values());\n}\n\nfunction populatePhoneSelect(phones) {\n    const phoneSelect = document.getElementById('phone-select');\n    const phoneInput = document.getElementById('phone-number');\n    \n    // Vider le select sauf l'option par défaut\n    while (phoneSelect.options.length > 1) {\n        phoneSelect.remove(1);\n    }\n\n    // Ajouter les numéros trouvés\n    phones.forEach((phoneInfo, index) => {\n        const option = document.createElement('option');\n        option.value = phoneInfo.formatted;\n        option.textContent = `Numéro ${index + 1}: ${phoneInfo.formatted}`;\n        phoneSelect.appendChild(option);\n    });\n\n    // Si des numéros ont été trouvés, remplir l'input avec le premier\n    if (phones.length > 0) {\n        phoneInput.value = phones[0].formatted;\n    }\n}\n\nfunction displayAttachments(attachments) {\n    const attachmentsContainer = document.getElementById('attachments-list');\n    if (!attachmentsContainer) return;\n    \n    // Vider le conteneur\n    attachmentsContainer.innerHTML = '';\n    \n    if (!attachments || attachments.length === 0) {\n        attachmentsContainer.innerHTML = '<p class=\"no-attachments\">Aucune pièce jointe</p>';\n        return;\n    }\n    \n    // Créer la liste des pièces jointes\n    const list = document.createElement('ul');\n    list.className = 'attachments-list';\n    \n    attachments.forEach((attachment, index) => {\n        const item = document.createElement('li');\n        item.className = 'attachment-item';\n        \n        // Formater la taille du fichier\n        const size = formatFileSize(attachment.size);\n        \n        item.innerHTML = `\n            <div class=\"attachment-info\">\n                <span class=\"attachment-name\">${attachment.name}</span>\n                <span class=\"attachment-size\">${size}</span>\n            </div>\n        `;\n        \n        list.appendChild(item);\n    });\n    \n    attachmentsContainer.appendChild(list);\n    \n    // Ajouter les styles\n    const style = document.createElement('style');\n    style.textContent = `\n        .attachments-list {\n            list-style: none;\n            padding: 0;\n            margin: 0;\n        }\n        \n        .attachment-item {\n            padding: 8px;\n            border: 1px solid #ddd;\n            margin-bottom: 8px;\n            border-radius: 4px;\n            background-color: #f8f9fa;\n        }\n        \n        .attachment-info {\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n        }\n        \n        .attachment-name {\n            font-weight: 500;\n            color: #333;\n        }\n        \n        .attachment-size {\n            color: #666;\n            font-size: 0.9em;\n        }\n        \n        .no-attachments {\n            color: #666;\n            font-style: italic;\n            text-align: center;\n            padding: 10px;\n        }\n    `;\n    document.head.appendChild(style);\n}\n\nfunction formatFileSize(bytes) {\n    if (bytes === 0) return '0 B';\n    const k = 1024;\n    const sizes = ['B', 'KB', 'MB', 'GB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n}\n\nfunction setupPhoneInputs() {\n    const phoneInput = document.getElementById('phone-number');\n    const phoneSelect = document.getElementById('phone-select');\n\n    // Gérer le changement dans le select\n    phoneSelect.addEventListener('change', (e) => {\n        if (e.target.value) {\n            phoneInput.value = e.target.value;\n        }\n    });\n\n    // Permettre la saisie libre\n    phoneInput.addEventListener('input', (e) => {\n        let value = e.target.value;\n        // Permettre +, espaces et chiffres\n        value = value.replace(/[^\\d+\\s]/g, '');\n        e.target.value = value;\n    });\n}\n\nfunction extractEmails(text) {\n    // Regex pour détecter les emails\n    const emailPattern = /[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}/g;\n    const emails = new Map();\n    \n    const matches = text.matchAll(emailPattern);\n    for (const match of matches) {\n        const email = match[0].toLowerCase().trim();\n        if (!emails.has(email)) {\n            // Vérifier si le domaine contient \"cheminees\"\n            const domain = email.split('@')[1];\n            const isPriority = !domain.includes('cheminees');\n            emails.set(email, {\n                email: email,\n                isPriority: isPriority\n            });\n        }\n    }\n    \n    // Trier les emails: prioritaires d'abord, puis par ordre alphabétique\n    return Array.from(emails.values()).sort((a, b) => {\n        if (a.isPriority !== b.isPriority) {\n            return a.isPriority ? -1 : 1;\n        }\n        return a.email.localeCompare(b.email);\n    });\n}\n\nfunction populateEmailSelect(emails) {\n    const emailSelect = document.getElementById('email-select');\n    const emailInput = document.getElementById('sender-email');\n    \n    // Vider le select sauf l'option par défaut\n    while (emailSelect.options.length > 1) {\n        emailSelect.remove(1);\n    }\n\n    // Ajouter les emails trouvés\n    emails.forEach((emailInfo, index) => {\n        const option = document.createElement('option');\n        option.value = emailInfo.email;\n        const priority = emailInfo.isPriority ? '🔵' : '⚪';\n        option.textContent = `${priority} Email ${index + 1}: ${emailInfo.email}`;\n        emailSelect.appendChild(option);\n    });\n\n    // Si des emails ont été trouvés, remplir l'input avec le premier\n    if (emails.length > 0) {\n        emailInput.value = emails[0].email;\n    }\n}\n\nfunction setupEmailInputs() {\n    const emailInput = document.getElementById('sender-email');\n    const emailSelect = document.getElementById('email-select');\n\n    // Gérer le changement dans le select\n    emailSelect.addEventListener('change', (e) => {\n        if (e.target.value) {\n            emailInput.value = e.target.value;\n        }\n    });\n\n    // Permettre la saisie libre avec validation basique d'email\n    emailInput.addEventListener('input', (e) => {\n        let value = e.target.value;\n        // Permettre caractères valides pour email\n        value = value.replace(/[^\\w@.-]/g, '');\n        e.target.value = value;\n    });\n}\n\nfunction loadEmailData() {\n    log('Chargement des données de l\\'email');\n    const item = Office.context.mailbox.item;\n    \n    if (item) {\n        setupPhoneInputs();\n\n        // Réinitialiser le stockage des pièces jointes\n        if (item.attachments && item.attachments.length > 0) {\n            log('Nombre de pièces jointes trouvées:', item.attachments.length);\n            \n            // Afficher immédiatement les pièces jointes\n            const attachmentsInfo = item.attachments\n                .filter(attachment => !attachment.isInline)\n                .map(attachment => ({\n                    name: attachment.name,\n                    size: attachment.size,\n                    contentType: attachment.contentType,\n                    id: attachment.id\n                }));\n            \n            displayAttachments(attachmentsInfo);\n            \n            // Réinitialiser le stockage des pièces jointes\n            window.attachmentsToUpload = [];\n            \n            // Récupérer le contenu des pièces jointes\n            attachmentsInfo.forEach(attachment => {\n                Office.context.mailbox.item.getAttachmentContentAsync(attachment.id, (result) => {\n                    if (result.status === Office.AsyncResultStatus.Succeeded) {\n                        const base64Content = btoa(unescape(encodeURIComponent(result.value.content)));\n                        const attachmentData = {\n                            ...attachment,\n                            content: base64Content\n                        };\n                        \n                        window.attachmentsToUpload.push(attachmentData);\n                        log('Pièce jointe récupérée:', {\n                            name: attachment.name,\n                            type: attachment.contentType,\n                            size: attachment.size,\n                            id: attachment.id\n                        });\n                    } else {\n                        log('Erreur lors de la récupération de la pièce jointe:', result.error);\n                    }\n                });\n            });\n        } else {\n            log('Aucune pièce jointe trouvée');\n            displayAttachments([]);\n        }\n\n        // Reste du code existant...\n        if (item.sender) {\n            let senderEmail = item.sender.emailAddress;\n            let senderName = item.sender.displayName;\n\n            log('Données brutes de l\\'expéditeur:', {\n                rawEmail: senderEmail,\n                rawName: senderName\n            });\n\n            senderEmail = cleanEmail(senderEmail);\n            \n            if (!senderName) {\n                senderName = senderEmail.split('@')[0];\n            }\n\n            document.getElementById('sender-name').value = senderName;\n            document.getElementById('sender-email').value = senderEmail;\n            \n            log('Informations de l\\'expéditeur nettoyées:', {\n                email: senderEmail,\n                name: senderName\n            });\n        }\n\n        // Récupérer le sujet\n        const subject = item.subject || '';\n        document.getElementById('email-subject').value = subject;\n        log('Sujet chargé:', subject);\n\n        // Récupérer le corps du message\n        item.body.getAsync(Office.CoercionType.Text, (result) => {\n            if (result.status === Office.AsyncResultStatus.Succeeded) {\n                const fullText = result.value;\n                document.getElementById('email-body').value = fullText;\n\n                // Détecter les numéros de téléphone dans le contenu\n                const phones = extractPhoneNumbers(fullText);\n                log('Numéros de téléphone détectés:', phones);\n                populatePhoneSelect(phones);\n\n                // Détecter les emails dans le contenu\n                const emails = extractEmails(fullText);\n                log('Emails détectés:', emails);\n                populateEmailSelect(emails);\n            } else {\n                log('Erreur lors de la récupération du corps du message:', result.error);\n            }\n        });\n    } else {\n        log('Aucun élément email trouvé');\n    }\n}\n\nfunction cleanEmail(email) {\n    if (!email) return '';\n    \n    // Enlever le \"<mailto:\" et \">\" si présent\n    email = email.replace(/<mailto:/g, '').replace(/>/g, '');\n    \n    // Enlever les espaces\n    email = email.trim();\n    \n    // Si l'email est répété, prendre la première occurrence\n    if (email.includes(' ')) {\n        email = email.split(' ')[0];\n    }\n    \n    return email;\n}\n\n\nfunction getDomainFromEmail(email) {\n    return email.split('@')[1].toLowerCase();\n}\n\n\n\nfunction cleanName(name) {\n    if (!name) return '';\n    \n    // Convertir en string si ce n'est pas déjà le cas\n    name = String(name);\n    \n    // Nettoyage plus agressif\n    name = name\n        // Enlever tous les \":\" et espaces au début\n        .replace(/^[:\\s]+/, '')\n        // Enlever tous les \":\" et espaces à la fin\n        .replace(/[:\\s]+$/, '')\n        // Enlever les guillemets\n        .replace(/[\"']/g, '')\n        // Enlever les caractères spéciaux et les espaces multiples\n        .replace(/[^\\w\\sÀ-ÿ-]/g, ' ')\n        // Remplacer les espaces multiples par un seul espace\n        .replace(/\\s+/g, ' ')\n        // Nettoyer les espaces au début et à la fin\n        .trim();\n\n    // Log du résultat du nettoyage\n    log('Nettoyage du nom:', {\n        avant: String(arguments[0]),\n        après: name\n    });\n    \n    return name;\n}\n\n\nfunction parseEmailText(text) {\n    const emails = [];\n    \n    // Diviser par les marqueurs \"De :\" ou \"From :\"\n    const segments = text.split(/(?:\\r?\\n|\\r)(?:De |From :)/).filter(Boolean);\n    \n    segments.forEach(segment => {\n        const lines = segment.split(/\\r?\\n|\\r/);\n        let currentEmail = {\n            name: '',\n            from: '',\n            subject: '',\n            content: []\n        };\n        \n        let isHeader = true;\n        let contentStarted = false;\n        \n        for (let line of lines) {\n            line = line.trim();\n            \n            if (!line) continue;\n            \n            // Traitement des en-têtes\n            if (isHeader) {\n                if (line.startsWith('From:') || line.includes('<')) {\n                    const emailMatch = line.match(/<([^>]+@[^>]+)>/);\n                    if (emailMatch) {\n                        currentEmail.from = emailMatch[1];\n                        currentEmail.name = line.split('<')[0].trim();\n                    }\n                } else if (line.startsWith('Subject:') || line.startsWith('Objet:')) {\n                    currentEmail.subject = line.replace(/^(Subject:|Objet:)/, '').trim();\n                    isHeader = false;\n                } else if (line.match(/^[\\w\\s.]+@[\\w\\s.]+\\.\\w+$/)) {\n                    currentEmail.from = line;\n                } else if (!line.match(/^(À|To|Date|Envoyé|Sent):/)) {\n                    contentStarted = true;\n                    isHeader = false;\n                }\n            }\n            \n            // Contenu de l'email\n            if (!isHeader && contentStarted && !line.match(/^(De|From|À|To|Date|Envoyé|Sent):/)) {\n                currentEmail.content.push(line);\n            }\n        }\n        \n        if (currentEmail.content.length > 0) {\n            currentEmail.content = currentEmail.content.join('\\n').trim();\n            emails.push(currentEmail);\n        }\n    });\n    \n    log('Segments d\\'email analysés:', emails);\n    return emails;\n}\n\n\n\nfunction formatEmailContent(emailBody) {\n    if (!emailBody) return '';\n    \n    // Convertir les caractères encodés en HTML\n    let cleanedContent = emailBody\n        .replace(/=3D/g, '=')\n        .replace(/=C3=A9/g, 'é')\n        .replace(/=C3=A8/g, 'è')\n        .replace(/=C3=A0/g, 'à')\n        .replace(/=C3=AB/g, 'ë')\n        .replace(/=C3=BB/g, 'û')\n        .replace(/=C3=B4/g, 'ô')\n        .replace(/=C3=AE/g, 'î')\n        .replace(/=C3=A2/g, 'â')\n        .replace(/&nbsp;/g, ' ');\n\n    // Préserver les sauts de ligne spécifiques aux emails\n    cleanedContent = cleanedContent\n        // Remplacer <div><br></div> par un marqueur spécial\n        .replace(/<div><br><\\/div>|<div><br\\/><\\/div>|<br>|<br\\/>/g, '[[LINEBREAK]]')\n        // Gérer les divs avec du contenu\n        .replace(/<div>(.*?)<\\/div>/g, '$1\\n')\n        // Nettoyer les autres balises HTML\n        .replace(/<[^>]+>/g, '')\n        // Nettoyer les caractères spéciaux restants\n        .replace(/\\r\\n|\\r|\\n/g, '\\n')\n        .trim();\n\n    // Convertir les marqueurs de saut de ligne en paragraphes HTML\n    let paragraphs = cleanedContent\n        .split('[[LINEBREAK]]')\n        .map(p => p.trim())\n        .filter(p => p !== '');\n\n    // Reconstruire le HTML avec la structure appropriée\n    cleanedContent = '<div style=\"white-space: pre-line; font-family: Arial, sans-serif;\">';\n    \n    // Ajouter chaque paragraphe avec un espacement approprié\n    paragraphs.forEach((paragraph, index) => {\n        cleanedContent += `<p style=\"margin: 0; padding: 8px 0;\">${paragraph}</p>`;\n        // Ajouter un espace entre les paragraphes\n        if (index < paragraphs.length - 1) {\n            cleanedContent += '<div style=\"height: 12px;\"></div>';\n        }\n    });\n\n    cleanedContent += '</div>';\n\n    // Ajouter les notes additionnelles si présentes\n    if (cleanedContent.includes('Notes additionnelles')) {\n        cleanedContent = cleanedContent.replace(\n            /(Notes additionnelles.*?<\\/p>)/,\n            '<div style=\"margin: 30px 0;\">' +\n            '<hr style=\"border: none; border-top: 1px solid #cccccc;\">' +\n            '<h3>$1</h3>' +\n            '<hr style=\"border: none; border-top: 1px solid #cccccc;\">' +\n            '</div>'\n        );\n    }\n\n    return cleanedContent;\n}\n\nfunction loadUserEmailData() {\n    log('Chargement des données de l\\'utilisateur');\n    const userProfile = Office.context.mailbox.userProfile;\n    if (userProfile) {\n        const userEmail = userProfile.emailAddress;\n        document.getElementById('user-email').value = userEmail;\n        log('Email de l\\'utilisateur chargé:', userEmail);\n    } else {\n        log('Profil utilisateur non disponible');\n    }\n}\n\n// Modification de la fonction de chargement des réglages\nfunction loadSavedSettings() {\n    log('Chargement des réglages sauvegardés');\n    try {\n        const savedSettings = localStorage.getItem('odooSettings');\n        if (savedSettings) {\n            const settings = JSON.parse(savedSettings);\n            log('Réglages trouvés', {\n                hasUrl: !!settings.odooUrl,\n                hasDatabase: !!settings.database,\n                hasUsername: !!settings.username,\n                hasPassword: !!settings.password\n            });\n            \n            document.getElementById('odoo-url').value = settings.odooUrl || '';\n            document.getElementById('database').value = settings.database || '';\n            document.getElementById('username').value = settings.username || '';\n            document.getElementById('password').value = settings.password || '';\n        } else {\n            log('Aucun réglage sauvegardé trouvé');\n        }\n    } catch (error) {\n        log('Erreur lors du chargement des réglages', error);\n    }\n}\n\n// Modification de la fonction de configuration du toggle password\nfunction setupPasswordToggle() {\n    const passwordInput = document.getElementById('password');\n    const toggleButton = document.getElementById('toggle-password');\n\n    if (passwordInput && toggleButton) {\n        toggleButton.addEventListener('click', () => {\n            const type = passwordInput.type === 'password' ? 'text' : 'password';\n            passwordInput.type = type;\n            \n            // Changer l'icône\n            const icon = toggleButton.querySelector('i');\n            if (type === 'password') {\n                icon.classList.replace('ms-Icon--Hide', 'ms-Icon--RedEye');\n            } else {\n                icon.classList.replace('ms-Icon--RedEye', 'ms-Icon--Hide');\n            }\n        });\n    }\n}\n\n// Classe OdooAPI\nclass OdooAPI {\n    constructor() {\n        const settings = this.getSettings();\n        this.host = settings.odooUrl;\n        this.db = settings.database;\n        this.username = settings.username;\n        this.password = settings.password;\n        this.worker_url = 'https://royal-pond-be25.lvr-3b7.workers.dev';\n        this.maxRetries = 3;\n        this.retryDelay = 1000;\n        \n        log('OdooAPI initialisée', {\n            host: this.host,\n            database: this.db,\n            username: this.username,\n            worker_url: this.worker_url\n        });\n    }\n\n    getSettings() {\n        const savedSettings = localStorage.getItem('odooSettings');\n        if (!savedSettings) {\n            throw new Error('Aucun réglage trouvé. Veuillez configurer l\\'add-in dans les paramètres.');\n        }\n        \n        const settings = JSON.parse(savedSettings);\n        if (!settings.odooUrl || !settings.database || !settings.username || !settings.password) {\n            throw new Error('Configuration incomplète. Veuillez vérifier vos paramètres.');\n        }\n        \n        return settings;\n    }\n\n    formatOdooUrl(url) {\n        if (!url.startsWith('http://') && !url.startsWith('https://')) {\n            url = 'https://' + url;\n        }\n        return url.replace(/\\/$/, '');\n    }\n\n    async retryRequest(fn) {\n        for (let i = 0; i < this.maxRetries; i++) {\n            try {\n                return await fn();\n            } catch (error) {\n                log(`Tentative ${i + 1}/${this.maxRetries} échouée`, error);\n                if (i === this.maxRetries - 1) throw error;\n                await new Promise(r => setTimeout(r, this.retryDelay * (i + 1)));\n            }\n        }\n    }\n\n    // Dans la classe OdooAPI\n// Dans la classe OdooAPI\n// Dans la classe OdooAPI\nescapeXml(unsafe) {\n    if (typeof unsafe !== 'string') return unsafe;\n    return unsafe\n        .replace(/[<>&'\"]/g, function (c) {\n            switch (c) {\n                case '<': return '&lt;';\n                case '>': return '&gt;';\n                case '&': return '&amp;';\n                case '\\'': return '&apos;';\n                case '\"': return '&quot;';\n                default: return c;\n            }\n        })\n        .replace(/[\\x00-\\x1F\\x7F-\\x9F]/g, '') // Supprimer les caractères de contrôle\n        .trim();\n}\n\nasync createLead(emailFrom, subject, description) {\n    try {\n        const userId = await this.getUserId();\n        \n        const senderName = document.getElementById('sender-name').value.trim();\n        const phoneNumber = document.getElementById('phone-number').value.trim();\n        \n        const cleanData = {\n            name: this.escapeXml(subject || 'Nouveau lead'),\n            email_from: this.escapeXml(emailFrom),\n            description: this.escapeXml(description),\n            user_id: userId,\n            type: 'opportunity',\n            active: true,\n            company_id: 1,\n            stage_id: 16,\n            contact_name: this.escapeXml(senderName || emailFrom.split('@')[0]),\n            phone: this.escapeXml(phoneNumber)\n        };\n\n        log('Données nettoyées pour création lead:', cleanData);\n\n        // Création du lead\n        const leadResponse = await this.fetchWithTimeout(\n            `${this.worker_url}/create_lead`,\n            {\n                method: 'POST',\n                headers: this.buildHeaders(),\n                body: JSON.stringify({\n                    odoo_url: this.host,\n                    database: this.db,\n                    username: this.username,\n                    password: this.password,\n                    lead_data: cleanData\n                })\n            }\n        );\n\n        const leadResponseText = await leadResponse.text();\n        log('Réponse brute création lead:', leadResponseText);\n\n        let data;\n        try {\n            data = JSON.parse(leadResponseText);\n        } catch (e) {\n            throw new Error(`Réponse invalide du serveur: ${leadResponseText}`);\n        }\n\n        if (!data.success) {\n            throw new Error(data.error || 'Réponse serveur indique un échec');\n        }\n\n        const leadId = data.lead_id;\n\n        // Traitement des pièces jointes si présentes\n        if (window.attachmentsToUpload && window.attachmentsToUpload.length > 0) {\n            log(`Début upload des pièces jointes (${window.attachmentsToUpload.length})`);\n            \n            for (const attachment of window.attachmentsToUpload) {\n                try {\n                    await this.createAttachment(leadId, attachment);\n                    log('Pièce jointe uploadée avec succès:', attachment.name);\n                } catch (error) {\n                    log('Erreur upload pièce jointe:', {\n                        name: attachment.name,\n                        error: error.message\n                    });\n                }\n            }\n            \n            // Nettoyage après upload\n            window.attachmentsToUpload = [];\n        }\n\n        return {\n            success: true,\n            leadId: leadId,\n            message: 'Lead et pièces jointes créés avec succès',\n            details: data\n        };\n\n    } catch (error) {\n        log('Erreur détaillée création lead:', error);\n        throw error;\n    }\n}\n\nasync createAttachment(leadId, attachmentData) {\n    try {\n        const uid = await this.getUserId();\n        \n        const createRequest = {\n            method: 'POST',\n            headers: this.buildHeaders(),\n            body: JSON.stringify({\n                odoo_url: this.host,\n                database: this.db,\n                username: this.username,\n                password: this.password,\n                attachment_data: {\n                    name: attachmentData.name,\n                    datas: attachmentData.content, // Le contenu en base64\n                    res_model: 'crm.lead',\n                    res_id: leadId,\n                    type: 'binary',\n                    mimetype: attachmentData.contentType,\n                    description: 'Pièce jointe provenant d\\'Outlook'\n                }\n            })\n        };\n\n        const response = await this.fetchWithTimeout(\n            `${this.worker_url}/create_attachment`,\n            createRequest\n        );\n\n        const responseText = await response.text();\n        log('Réponse création attachment:', responseText);\n\n        let data;\n        try {\n            data = JSON.parse(responseText);\n        } catch (e) {\n            throw new Error(`Réponse invalide du serveur: ${responseText}`);\n        }\n\n        if (!data.success) {\n            throw new Error(data.error || 'Réponse serveur indique un échec');\n        }\n\n        return data.attachment_id;\n\n    } catch (error) {\n        log('Erreur création pièce jointe:', error);\n        throw error;\n    }\n}\n\n\nasync getUserId() {\n    try {\n        const response = await this.fetchWithTimeout(\n            `${this.worker_url}/get_user_id`,\n            {\n                method: 'POST',\n                headers: this.buildHeaders(),\n                body: JSON.stringify({\n                    odoo_url: this.host,\n                    database: this.db,\n                    username: this.username,\n                    password: this.password\n                })\n            }\n        );\n\n        if (!response.ok) {\n            throw new Error(`Erreur HTTP ${response.status}`);\n        }\n\n        const data = await response.json();\n        if (!data.success || !data.user_id) {\n            throw new Error('Impossible de récupérer l\\'ID utilisateur');\n        }\n\n        return data.user_id;\n    } catch (error) {\n        throw new Error(`Erreur lors de la récupération de l'ID utilisateur: ${error.message}`);\n    }\n}\n\n    async testServerConnection() {\n        log('Test de connexion au serveur', {\n            url: this.worker_url,\n            odoo_url: this.host\n        });\n\n        return this.retryRequest(async () => {\n            try {\n                const response = await this.fetchWithTimeout(\n                    `${this.worker_url}/test`,\n                    {\n                        method: 'POST',\n                        headers: this.buildHeaders(),\n                        body: JSON.stringify({\n                            odoo_url: this.host,\n                            database: this.db,\n                            username: this.username,\n                            password: this.password\n                        })\n                    }\n                );\n\n                if (!response.ok) {\n                    const errorData = await response.json().catch(() => ({}));\n                    throw new Error(errorData.error || `Erreur HTTP ${response.status}`);\n                }\n\n                const data = await response.json();\n                log('Réponse du test de connexion', data);\n\n                // Vérification de l'authentification\n                const loginSuccess = data.details?.login_response?.includes('<value><int>') ||\n                                   data.details?.login_response?.includes('<value><boolean>1</boolean>');\n\n                if (!loginSuccess) {\n                    throw new Error('Échec de l\\'authentification. Vérifiez vos identifiants de connexion.');\n                }\n\n                const versionInfo = this.extractVersionInfo(data.details.version_response);\n                \n                return {\n                    success: true,\n                    message: `Connexion établie avec succès (Odoo ${versionInfo.version})`,\n                    details: {\n                        version: versionInfo,\n                        responses: data.details\n                    }\n                };\n\n            } catch (error) {\n                return this.handleError(error, 'Erreur lors du test de connexion');\n            }\n        });\n    }\n\n    extractVersionInfo(xmlResponse) {\n        try {\n            const versionMatch = xmlResponse.match(/<name>server_version<\\/name>\\s*<value><string>(.*?)<\\/string><\\/value>/);\n            const versionInfo = versionMatch ? versionMatch[1] : 'Version inconnue';\n            \n            const serieMatch = xmlResponse.match(/<name>server_serie<\\/name>\\s*<value><string>(.*?)<\\/string><\\/value>/);\n            const serie = serieMatch ? serieMatch[1] : '';\n            \n            return {\n                version: versionInfo,\n                serie: serie\n            };\n        } catch (error) {\n            log('Erreur extraction version', error);\n            return {\n                version: 'Version inconnue',\n                serie: 'Inconnue'\n            };\n        }\n    }\n\n    validateCredentials() {\n        if (!this.host || !this.db || !this.password) {\n            throw new Error('Configuration incomplète: tous les paramètres de connexion sont requis');\n        }\n    }\n\n    async init() {\n        try {\n            this.validateCredentials();\n            this.host = this.formatOdooUrl(this.host);\n            const testResult = await this.testServerConnection();\n            \n            if (!testResult.success) {\n                throw new Error(`Échec de l'initialisation: ${testResult.message}`);\n            }\n            \n            log('Initialisation réussie', testResult);\n            return testResult;\n            \n        } catch (error) {\n            log('Erreur lors de l\\'initialisation', error);\n            throw error;\n        }\n    }\n\n    buildHeaders() {\n        return {\n            'Content-Type': 'application/json',\n            'X-Api-Key': this.password\n        };\n    }\n\n    async fetchWithTimeout(url, options, timeout = 5000) {\n        const controller = new AbortController();\n        const id = setTimeout(() => controller.abort(), timeout);\n        \n        try {\n            const response = await fetch(url, {\n                ...options,\n                signal: controller.signal\n            });\n            clearTimeout(id);\n            return response;\n        } catch (error) {\n            clearTimeout(id);\n            throw error;\n        }\n    }\n\n    handleError(error, customMessage = 'Une erreur est survenue') {\n        log('Erreur API', error);\n        return {\n            success: false,\n            message: error.message || customMessage,\n            details: {\n                error: error.message,\n                type: error.name\n            }\n        };\n    }\n}\n\nfunction showNotification(message, type = \"info\", details = null) {\n    const notification = document.createElement('div');\n    notification.className = `notification ${type}`;\n    \n    const messageEl = document.createElement('div');\n    messageEl.className = 'notification-message';\n    messageEl.textContent = message;\n    notification.appendChild(messageEl);\n\n    // Ajout du lien vers l'opportunité si c'est une création réussie\n    if (type === 'success' && details && details.leadId) {\n        const settings = JSON.parse(localStorage.getItem('odooSettings'));\n        const opportunityLink = document.createElement('a');\n        opportunityLink.href = `${settings.odooUrl}/web#id=${details.leadId}&model=crm.lead&view_type=form`;\n        opportunityLink.target = \"_blank\";\n        opportunityLink.className = 'opportunity-link';\n        opportunityLink.textContent = \"Voir l'opportunité dans Odoo\";\n        notification.appendChild(opportunityLink);\n    }\n\n    if (details) {\n        const detailsEl = document.createElement('div');\n        detailsEl.className = 'notification-details';\n        \n        if (details.message) {\n            const errorMessage = document.createElement('div');\n            errorMessage.className = 'error-message';\n            errorMessage.textContent = `Message: ${details.message}`;\n            detailsEl.appendChild(errorMessage);\n        }\n\n        if (details.logs && details.logs.length > 0) {\n            const logsEl = document.createElement('div');\n            logsEl.className = 'error-logs';\n            details.logs.forEach(log => {\n                const logEntry = document.createElement('div');\n                logEntry.className = 'log-entry';\n                logEntry.textContent = `${log.timestamp || ''} ${log.message || log}`;\n                logsEl.appendChild(logEntry);\n            });\n            detailsEl.appendChild(logsEl);\n        }\n\n        if (details.stack) {\n            const stackEl = document.createElement('pre');\n            stackEl.className = 'error-stack';\n            stackEl.textContent = details.stack;\n            detailsEl.appendChild(stackEl);\n        }\n\n        notification.appendChild(detailsEl);\n    }\n\n    // Styles mis à jour\n    const style = document.createElement('style');\n    style.textContent = `\n        .notification {\n            position: fixed;\n            top: 20px;\n            right: 20px;\n            max-width: 80vw;\n            max-height: 80vh;\n            overflow-y: auto;\n            padding: 15px;\n            background: white;\n            border-radius: 5px;\n            box-shadow: 0 2px 4px rgba(0,0,0,0.2);\n            z-index: 1000;\n            font-family: monospace;\n        }\n        .notification.error { border-left: 4px solid #f44336; }\n        .notification.success { border-left: 4px solid #4CAF50; }\n        .notification-message {\n            font-weight: bold;\n            margin-bottom: 10px;\n        }\n        .opportunity-link {\n            display: block;\n            margin: 10px 0;\n            padding: 8px 12px;\n            background-color: #4CAF50;\n            color: white;\n            text-decoration: none;\n            border-radius: 4px;\n            text-align: center;\n            font-weight: bold;\n            transition: background-color 0.3s;\n        }\n        .opportunity-link:hover {\n            background-color: #45a049;\n        }\n        .notification-details {\n            font-size: 12px;\n            margin-top: 10px;\n            padding-top: 10px;\n            border-top: 1px solid #eee;\n        }\n        .error-message {\n            color: #f44336;\n            margin-bottom: 5px;\n        }\n        .error-logs {\n            margin-top: 5px;\n            padding: 5px;\n            background: #f5f5f5;\n            border-radius: 3px;\n        }\n        .log-entry {\n            padding: 2px 5px;\n            border-bottom: 1px solid #eee;\n        }\n        .error-stack {\n            margin-top: 5px;\n            padding: 5px;\n            background: #f5f5f5;\n            overflow-x: auto;\n            font-size: 11px;\n        }\n    `;\n    document.head.appendChild(style);\n    \n    document.body.appendChild(notification);\n    \n    setTimeout(() => {\n        notification.remove();\n    }, 30000);\n}\n\ndocument.getElementById('test-connection').onclick = async function() {\n    const button = this;\n    const icon = button.querySelector('i');\n    \n    let url = document.getElementById('odoo-url').value.trim();\n    const database = document.getElementById('database').value.trim();\n    const username = document.getElementById('username').value.trim();\n    const password = document.getElementById('password').value.trim();\n\n    log('Test de connexion initié', {\n        url: url,\n        database: database,\n        username: username,\n        hasPassword: !!password\n    });\n\n    if (!url || !database || !username || !password) {\n        showNotification('Veuillez remplir tous les champs', 'error');\n        return;\n    }\n\n    button.disabled = true;\n    // Sauvegarder le texte original\n    const originalText = button.textContent;\n    button.innerHTML = '<i class=\"ms-Icon ms-Icon--Sync\"></i>Test en cours...';\n\n    try {\n        // Sauvegarde d'abord les paramètres\n        const settings = {\n            odooUrl: url,\n            database,\n            username,\n            password\n        };\n        localStorage.setItem('odooSettings', JSON.stringify(settings));\n\n        // Crée ensuite l'instance de OdooAPI qui utilisera ces paramètres\n        const odoo = new OdooAPI();\n        const serverTest = await odoo.testServerConnection();\n        \n        if (serverTest.success) {\n            showNotification(\n                serverTest.message,\n                'success',\n                serverTest.details\n            );\n        } else {\n            throw new Error(serverTest.message);\n        }\n    } catch (error) {\n        log('Erreur critique', error);\n        showNotification(error.message, 'error', {\n            'Type d\\'erreur': error.name,\n            'Détails': error.stack || error.message\n        });\n    } finally {\n        button.disabled = false;\n        button.innerHTML = '<i class=\"ms-Icon ms-Icon--PlugConnected\"></i>Tester la connexion';\n    }\n};\n\n// Navigation\ndocument.getElementById('nav-form').addEventListener('click', () => {\n    switchPage('app-body');\n});\n\ndocument.getElementById('nav-settings').addEventListener('click', () => {\n    switchPage('settings-page');\n});\n\nfunction switchPage(pageId) {\n    document.querySelectorAll('.page').forEach(page => {\n        page.classList.remove('active');\n    });\n    document.getElementById(pageId).classList.add('active');\n\n    document.querySelectorAll('.nav-button').forEach(button => {\n        button.classList.remove('nav-active');\n    });\n    document.getElementById(pageId === 'app-body' ? 'nav-form' : 'nav-settings').classList.add('nav-active');\n}\n\ndocument.getElementById('save-to-crm').onclick = async function() {\n    const button = this;\n    const originalText = button.innerHTML;\n\n    try {\n        button.disabled = true;\n        button.innerHTML = '<i class=\"ms-Icon ms-Icon--Sync\"></i>Création en cours...';\n\n        const emailFrom = document.getElementById('sender-email').value.trim();\n        const senderName = document.getElementById('sender-name').value.trim();\n        const subject = document.getElementById('email-subject').value.trim();\n        const emailBody = document.getElementById('email-body').value;\n        const additionalNotes = document.getElementById('additional-notes').value.trim();\n\n        if (!emailFrom || !subject) {\n            throw new Error('L\\'email de l\\'expéditeur et le sujet sont requis');\n        }\n\n        const odoo = new OdooAPI();\n        \n        // Formatage du contenu pour préserver la mise en forme\n        let description = '<div style=\"font-family: Arial, sans-serif;\">';\n        description += emailBody.split('\\n').map(line => \n            `<p style=\"margin: 0 0 1em 0;\">${line.trim()}</p>`\n        ).join('');\n        description += '</div>';\n\n        if (additionalNotes) {\n            description += '<div style=\"margin: 30px 0;\">';\n            description += '<hr style=\"border: none; border-top: 1px solid #cccccc;\">';\n            description += '<h3>Notes additionnelles :</h3>';\n            description += '<hr style=\"border: none; border-top: 1px solid #cccccc;\">';\n            description += additionalNotes.split('\\n').map(line => \n                `<p style=\"margin: 0 0 1em 0;\">${line.trim()}</p>`\n            ).join('');\n            description += '</div>';\n        }\n\n        const result = await odoo.createLead(emailFrom, subject, description);\n\n        if (result.success) {\n            const settings = JSON.parse(localStorage.getItem('odooSettings'));\n            const odooUrl = settings.odooUrl;\n\n            showNotification(\n                'Lead créé avec succès dans Odoo',\n                'success',\n                {\n                    leadId: result.leadId,\n                    message: result.message,\n                    logs: result.details,\n                    odooUrl: odooUrl\n                }\n            );\n        } else {\n            throw new Error('Échec de la création du lead');\n        }\n\n    } catch (error) {\n        log('Erreur complète:', error);\n        \n        const errorDetails = {\n            message: error.message,\n            type: error.name,\n            details: error.details || {},\n            logs: error.logs || [],\n            stack: error.stack\n        };\n\n        showNotification(\n            'Erreur lors de la création du lead',\n            'error',\n            errorDetails\n        );\n\n    } finally {\n        button.disabled = false;\n        button.innerHTML = originalText;\n    }\n};\n\nfunction setupFormValidation() {\n    const requiredFields = ['sender-email', 'email-subject'];\n    const saveButton = document.getElementById('save-to-crm');\n\n    function validateForm() {\n        const isValid = requiredFields.every(fieldId => {\n            const field = document.getElementById(fieldId);\n            return field && field.value.trim() !== '';\n        });\n\n        saveButton.disabled = !isValid;\n    }\n\n    // Ajouter les écouteurs d'événements pour les champs requis\n    requiredFields.forEach(fieldId => {\n        const field = document.getElementById(fieldId);\n        if (field) {\n            field.addEventListener('input', validateForm);\n            field.addEventListener('change', validateForm);\n        }\n    });\n\n    // Validation initiale\n    validateForm();\n}\n\n// Modification du gestionnaire de sauvegarde des réglages\ndocument.getElementById('save-settings').onclick = function() {\n    const settings = {\n        odooUrl: document.getElementById('odoo-url').value.trim(),\n        database: document.getElementById('database').value.trim(),\n        username: document.getElementById('username').value.trim(),\n        password: document.getElementById('password').value.trim()\n    };\n\n    log('Sauvegarde des réglages', {\n        hasUrl: !!settings.odooUrl,\n        hasDatabase: !!settings.database,\n        hasUsername: !!settings.username,\n        hasPassword: !!settings.password\n    });\n\n    if (!settings.odooUrl || !settings.database || !settings.username || !settings.password) {\n        showNotification('Veuillez remplir tous les champs', 'error');\n        return;\n    }\n\n    try {\n        localStorage.setItem('odooSettings', JSON.stringify(settings));\n        showNotification('Réglages sauvegardés avec succès !', 'success');\n    } catch (error) {\n        log('Erreur sauvegarde réglages', error);\n        showNotification('Erreur lors de la sauvegarde des réglages', 'error');\n    }\n};","// Imports\nvar ___HTML_LOADER_IMPORT_0___ = new URL(\"./taskpane.css\", import.meta.url);\n// Module\nvar code = \"<!DOCTYPE html> <html> <head> <meta charset=\\\"UTF-8\\\"/> <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=Edge\\\"/> <meta name=\\\"viewport\\\" content=\\\"width=device-width,initial-scale=1\\\"> <title>Odoo CRM Add-in</title> <\" + \"script src=\\\"https://appsforoffice.microsoft.com/lib/1/hosted/office.js\\\"><\" + \"/script> <link rel=\\\"stylesheet\\\" href=\\\"https://res-1.cdn.office.net/files/fabric-cdn-prod_20230815.002/office-ui-fabric-core/11.1.0/css/fabric.min.css\\\"/> <link href=\\\"\" + ___HTML_LOADER_IMPORT_0___ + \"\\\" rel=\\\"stylesheet\\\"/> </head> <body class=\\\"ms-font-m ms-welcome ms-Fabric\\\"> <div id=\\\"sideload-msg\\\"> <h2 class=\\\"ms-font-xl\\\">Veuillez charger votre add-in pour voir le contenu.</h2> </div> <nav class=\\\"nav-menu\\\"> <button id=\\\"nav-form\\\" class=\\\"nav-button nav-active\\\"> <i class=\\\"ms-Icon ms-Icon--Contact\\\" aria-hidden=\\\"true\\\"></i> Contact </button> <button id=\\\"nav-settings\\\" class=\\\"nav-button\\\"> <i class=\\\"ms-Icon ms-Icon--Settings\\\" aria-hidden=\\\"true\\\"></i> Réglages </button> </nav> <div id=\\\"app-body\\\" class=\\\"page\\\"> <div class=\\\"form-container\\\"> <div class=\\\"form-group\\\"> <label class=\\\"form-label\\\">Votre adresse email</label> <input type=\\\"email\\\" id=\\\"user-email\\\" class=\\\"form-control\\\" readonly=\\\"readonly\\\"> </div> <div class=\\\"form-group\\\"> <label for=\\\"sender-name\\\">Nom de l'expéditeur</label> <input type=\\\"text\\\" id=\\\"sender-name\\\" class=\\\"form-control\\\"/> </div> <div class=\\\"form-group\\\"> <label class=\\\"form-label\\\">Email de l'expéditeur</label> <input type=\\\"email\\\" id=\\\"sender-email\\\" class=\\\"form-control\\\" required> </div> <div class=\\\"form-group phone-input-group\\\"> <label for=\\\"phone-number\\\">Numéro de téléphone</label> <div class=\\\"phone-input-container\\\"> <input type=\\\"text\\\" id=\\\"phone-number\\\" class=\\\"form-control\\\" placeholder=\\\"Entrez un numéro\\\"/> <select id=\\\"phone-select\\\" class=\\\"form-control\\\"> <option value=\\\"\\\">Numéros détectés</option> </select> </div> </div> <div class=\\\"form-group\\\"> <label class=\\\"form-label\\\">Sujet</label> <input type=\\\"text\\\" id=\\\"email-subject\\\" class=\\\"form-control\\\" required> </div> <div class=\\\"form-group\\\"> <label class=\\\"form-label\\\">Contenu du message</label> <textarea id=\\\"email-body\\\" class=\\\"form-control\\\" rows=\\\"6\\\" readonly=\\\"readonly\\\"></textarea> </div> <div class=\\\"form-group\\\"> <label class=\\\"form-label\\\">Notes additionnelles</label> <textarea id=\\\"additional-notes\\\" class=\\\"form-control\\\" rows=\\\"4\\\" placeholder=\\\"Ajoutez vos notes ici...\\\"></textarea> </div> <div class=\\\"section\\\"> <h3>Pièces jointes</h3> <div id=\\\"attachments-list\\\"></div> </div> <button id=\\\"save-to-crm\\\" class=\\\"submit-btn\\\"> <i class=\\\"ms-Icon ms-Icon--Save\\\"></i> Enregistrer dans le CRM </button> </div> </div> <div id=\\\"settings-page\\\" class=\\\"page\\\"> <div class=\\\"form-container\\\"> <div class=\\\"header\\\"> <h2>Réglages de connexion Odoo</h2> </div> <div class=\\\"form-group\\\"> <label class=\\\"form-label\\\">URL du serveur Odoo</label> <input type=\\\"text\\\" id=\\\"odoo-url\\\" class=\\\"form-control\\\" placeholder=\\\"https://votre-instance.odoo.com\\\"/> </div> <div class=\\\"form-group\\\"> <label class=\\\"form-label\\\">Base de données</label> <input type=\\\"text\\\" id=\\\"database\\\" class=\\\"form-control\\\" placeholder=\\\"nom_de_la_base\\\"/> </div> <div class=\\\"form-group\\\"> <label class=\\\"form-label\\\">Nom d'utilisateur</label> <input type=\\\"text\\\" id=\\\"username\\\" class=\\\"form-control\\\" placeholder=\\\"utilisateur@exemple.com\\\"/> </div> <div class=\\\"form-group\\\"> <label class=\\\"form-label\\\">Mot de passe</label> <div class=\\\"password-container\\\"> <input type=\\\"password\\\" id=\\\"password\\\" class=\\\"form-control\\\"/> <button type=\\\"button\\\" id=\\\"toggle-password\\\" class=\\\"toggle-password\\\"> <i class=\\\"ms-Icon ms-Icon--RedEye\\\"></i> </button> </div> </div> <div class=\\\"mb-3\\\"> <button id=\\\"test-connection\\\" class=\\\"submit-btn\\\"> <i class=\\\"ms-Icon ms-Icon--PlugConnected\\\"></i> Tester la connexion </button> </div> <div> <button id=\\\"save-settings\\\" class=\\\"submit-btn\\\"> <i class=\\\"ms-Icon ms-Icon--Save\\\"></i> Sauvegarder les réglages </button> </div> </div> </div> </body></html>\";\n// Exports\nexport default code;"],"names":["__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","g","globalThis","this","Function","e","window","o","obj","prop","Object","prototype","hasOwnProperty","call","scriptUrl","importScripts","location","document","currentScript","tagName","toUpperCase","src","scripts","getElementsByTagName","length","i","test","Error","replace","p","b","baseURI","self","href","_regeneratorRuntime","t","r","n","defineProperty","value","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","d","getPrototypeOf","v","values","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","_defineProperties","_toPropertyKey","key","ownKeys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","_objectSpread","_defineProperty","getOwnPropertyDescriptors","defineProperties","toPrimitive","String","_toPrimitive","_createForOfIteratorHelper","Array","isArray","_arrayLikeToArray","toString","from","_unsupportedIterableToArray","_n","F","log","message","data","timestamp","Date","toISOString","logMessage","concat","console","group","stack","groupEnd","Office","onReady","info","passwordInput","toggleButton","host","HostType","Outlook","getElementById","style","display","email","phoneInput","item","context","mailbox","addEventListener","target","attachments","attachmentsInfo","attachment","isInline","map","size","contentType","id","displayAttachments","attachmentsToUpload","getAttachmentContentAsync","result","status","AsyncResultStatus","Succeeded","base64Content","btoa","unescape","encodeURIComponent","content","attachmentData","error","sender","senderEmail","emailAddress","senderName","rawEmail","rawName","trim","includes","split","subject","body","getAsync","CoercionType","Text","fullText","phones","text","countDigits","str","match","formatPhoneNumber","phone","cleaned","startsWith","formatted","digitCount","Map","_i","_phonePatterns","_step","pattern","_iterator","matchAll","phoneInfo","has","set","err","extractPhoneNumbers","phoneSelect","options","remove","index","option","createElement","textContent","appendChild","populatePhoneSelect","emails","_step2","_iterator2","toLowerCase","isPriority","sort","localeCompare","extractEmails","emailSelect","emailInput","emailInfo","priority","populateEmailSelect","loadEmailData","userProfile","userEmail","loadUserEmailData","savedSettings","localStorage","getItem","settings","JSON","parse","hasUrl","odooUrl","hasDatabase","database","hasUsername","username","hasPassword","password","loadSavedSettings","icon","querySelector","classList","requiredFields","saveButton","validateForm","isValid","every","fieldId","field","disabled","setupFormValidation","attachmentsContainer","innerHTML","list","className","bytes","Math","floor","parseFloat","pow","toFixed","formatFileSize","head","OdooAPI","_classCallCheck","getSettings","db","worker_url","maxRetries","retryDelay","url","_retryRequest","_callee","fn","_loop","_ret","_this","_context2","_context","t0","t1","setTimeout","_x","unsafe","_createLead","_callee2","emailFrom","description","userId","phoneNumber","cleanData","leadResponse","leadResponseText","leadId","_iterator4","_step4","_context3","getUserId","escapeXml","email_from","user_id","active","company_id","stage_id","contact_name","fetchWithTimeout","headers","buildHeaders","stringify","odoo_url","lead_data","success","lead_id","createAttachment","t2","details","t3","_x2","_x3","_x4","_createAttachment","_callee3","createRequest","response","responseText","_context4","attachment_data","datas","res_model","res_id","mimetype","attachment_id","_x5","_x6","_getUserId","_callee4","_context5","ok","json","_testServerConnection","_callee6","_this2","_context7","retryRequest","_callee5","_data$details","_data$details2","errorData","versionInfo","_context6","login_response","extractVersionInfo","version_response","version","responses","handleError","xmlResponse","versionMatch","serieMatch","serie","_init","_callee7","testResult","_context8","validateCredentials","formatOdooUrl","testServerConnection","_fetchWithTimeout","_callee8","timeout","controller","_args9","_context9","AbortController","abort","fetch","signal","clearTimeout","_x7","_x8","customMessage","showNotification","notification","messageEl","opportunityLink","detailsEl","errorMessage","logs","logsEl","logEntry","stackEl","switchPage","pageId","querySelectorAll","page","add","button","onclick","_callee9","odoo","serverTest","_context10","setItem","_callee10","originalText","emailBody","additionalNotes","_context11","line","join","createLead","URL"],"sourceRoot":""}